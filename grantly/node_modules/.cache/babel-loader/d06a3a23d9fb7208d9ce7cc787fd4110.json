{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/userProfile/UserSettingsForm.jsx\";\nimport React from \"react\";\nimport { TextFormField } from \"../suggestion/formElements/TextFormField\";\nimport { Grid, Typography, Divider, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    padding: theme.spacing(2, 6, 1, 6)\n  }\n}));\nconst userSettingsFormData = [{\n  label: \"Password\",\n  type: \"password\",\n  name: \"password\",\n  data: []\n}];\nexport const UserSettingsForm = props => {\n  const styles = useStyles();\n  React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"User Settings\"), React.createElement(Divider, {\n    variant: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    className: styles.formContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, userSettingsFormData.map(data => {\n    return React.createElement(TextFormField, {\n      label: data.label,\n      type: data.type,\n      name: data.name,\n      data: data.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/userProfile/UserSettingsForm.jsx"],"names":["React","TextFormField","Grid","Typography","Divider","Paper","makeStyles","useStyles","theme","formContainer","padding","spacing","userSettingsFormData","label","type","name","data","UserSettingsForm","props","styles","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,0CAA9B;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,OAA3B,EAAoCC,KAApC,QAAiD,mBAAjD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AADI;AADsB,CAAL,CAAN,CAA5B;AAMA,MAAMC,oBAAoB,GAAG,CAC3B;AAAEC,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,IAAI,EAAE,UAA3B;AAAuCC,EAAAA,IAAI,EAAE,UAA7C;AAAyDC,EAAAA,IAAI,EAAE;AAA/D,CAD2B,CAA7B;AAIA,OAAO,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AACvC,QAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACA,sBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,SAAS,EAAEY,MAAM,CAACV,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,oBAAoB,CAACQ,GAArB,CAAyBJ,IAAI,IAAI;AAChC,WACE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAEA,IAAI,CAACH,KADd;AAEE,MAAA,IAAI,EAAEG,IAAI,CAACF,IAFb;AAGE,MAAA,IAAI,EAAEE,IAAI,CAACD,IAHb;AAIE,MAAA,IAAI,EAAEC,IAAI,CAACA,IAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATA,CADH,CAHF;AAgBD,CAlBM","sourcesContent":["import React from \"react\";\nimport { TextFormField } from \"../suggestion/formElements/TextFormField\";\nimport { Grid, Typography, Divider, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    padding: theme.spacing(2, 6, 1, 6)\n  }\n}));\n\nconst userSettingsFormData = [\n  { label: \"Password\", type: \"password\", name: \"password\", data: [] }\n];\n\nexport const UserSettingsForm = props => {\n  const styles = useStyles();\n  <Paper>\n    <Typography>User Settings</Typography>\n    <Divider variant=\"middle\" />\n    <Grid container spacing={3} className={styles.formContainer}>\n      {userSettingsFormData.map(data => {\n        return (\n          <TextFormField\n            label={data.label}\n            type={data.type}\n            name={data.name}\n            data={data.data}\n          />\n        );\n      })}\n    </Grid>\n  </Paper>;\n};\n"]},"metadata":{},"sourceType":"module"}