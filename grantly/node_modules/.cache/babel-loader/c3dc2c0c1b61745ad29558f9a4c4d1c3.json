{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { GrantTypes } from \"./grantTypes\";\nimport { FilterTypes } from \"../filters/filterTypes\";\nimport { axiosWithOutAuth as axios } from \"../utils/axiosConfig\";\nexport const useGrantActions = () => {\n  const dispatch = useDispatch();\n  const fetchGrants = useCallback(() => {\n    dispatch({\n      type: GrantTypes.FETCH_GRANTS_START\n    }); // @ts-ignore\n\n    axios().get(`/grants`).then(res => {\n      dispatch({\n        type: GrantTypes.FETCH_GRANTS_SUCCESS,\n        payload: res.data\n      });\n      dispatch({\n        type: FilterTypes.FILTER_GRANT,\n        payload: res.data\n      });\n    }).catch(err => {\n      const data = err && err.response && err.response.data ? err.response.data : err;\n      dispatch({\n        type: GrantTypes.FETCH_GRANTS_FAILURE,\n        payload: data\n      });\n    });\n  }, [dispatch]);\n  const selectGrant = useCallback(grant => {\n    dispatch({\n      type: GrantTypes.SELECT_GRANT,\n      payload: grant\n    });\n  }, [dispatch]);\n  return {\n    fetchGrants,\n    selectGrant\n  };\n};","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/store/grants/useGrantActions.tsx"],"names":["useCallback","useDispatch","GrantTypes","FilterTypes","axiosWithOutAuth","axios","useGrantActions","dispatch","fetchGrants","type","FETCH_GRANTS_START","get","then","res","FETCH_GRANTS_SUCCESS","payload","data","FILTER_GRANT","catch","err","response","FETCH_GRANTS_FAILURE","selectGrant","grant","SELECT_GRANT"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,SAAeC,UAAf,QAAgC,cAAhC;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,gBAAgB,IAAIC,KAA5B,QAAwC,sBAAxC;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,WAAW,GAAGR,WAAW,CAAC,MAAM;AAClCO,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEP,UAAU,CAACQ;AAAlB,KAAD,CAAR,CADkC,CAElC;;AACAL,IAAAA,KAAK,GAAGM,GAAR,CAAa,SAAb,EAAuBC,IAAvB,CAA6BC,GAAD,IAAuB;AAC/CN,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEP,UAAU,CAACY,oBAAlB;AAAwCC,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAArD,OAAD,CAAR;AACAT,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEN,WAAW,CAACc,YAAnB;AAAiCF,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAA9C,OAAD,CAAR;AACH,KAHD,EAGGE,KAHH,CAGUC,GAAD,IAAmB;AACxB,YAAMH,IAAI,GAAGG,GAAG,IAAIA,GAAG,CAACC,QAAX,IAAuBD,GAAG,CAACC,QAAJ,CAAaJ,IAApC,GAA2CG,GAAG,CAACC,QAAJ,CAAaJ,IAAxD,GAA+DG,GAA5E;AACAZ,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEP,UAAU,CAACmB,oBAAlB;AAAwCN,QAAAA,OAAO,EAAEC;AAAjD,OAAD,CAAR;AACH,KAND;AAOH,GAV8B,EAU5B,CAACT,QAAD,CAV4B,CAA/B;AAYA,QAAMe,WAAW,GAAGtB,WAAW,CAAEuB,KAAD,IAAkB;AAC9ChB,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEP,UAAU,CAACsB,YAAlB;AAAgCT,MAAAA,OAAO,EAAEQ;AAAzC,KAAD,CAAR;AACH,GAF8B,EAE5B,CAAChB,QAAD,CAF4B,CAA/B;AAIA,SAAO;AAACC,IAAAA,WAAD;AAAcc,IAAAA;AAAd,GAAP;AACH,CApBM","sourcesContent":["import {useCallback} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {AxiosError, AxiosResponse} from 'axios';\nimport {Grant, GrantTypes} from \"./grantTypes\";\nimport {FilterTypes} from \"../filters/filterTypes\";\nimport {axiosWithOutAuth as axios} from \"../utils/axiosConfig\";\n\nexport const useGrantActions = () => {\n    const dispatch = useDispatch();\n\n    const fetchGrants = useCallback(() => {\n        dispatch({type: GrantTypes.FETCH_GRANTS_START});\n        // @ts-ignore\n        axios().get(`/grants`).then((res:AxiosResponse) => {\n            dispatch({type: GrantTypes.FETCH_GRANTS_SUCCESS, payload: res.data});\n            dispatch({type: FilterTypes.FILTER_GRANT, payload: res.data});\n        }).catch((err: AxiosError)=>{\n            const data = err && err.response && err.response.data ? err.response.data : err;\n            dispatch({type: GrantTypes.FETCH_GRANTS_FAILURE, payload: data});\n        });\n    }, [dispatch]);\n\n    const selectGrant = useCallback((grant: Grant) => {\n        dispatch({type: GrantTypes.SELECT_GRANT, payload: grant})\n    }, [dispatch]);\n\n    return {fetchGrants, selectGrant};\n}\n\nexport interface UseGrantActions {\n    fetchGrants: () => void;\n    selectGrant: (grant: Grant) => void;\n}\n"]},"metadata":{},"sourceType":"module"}