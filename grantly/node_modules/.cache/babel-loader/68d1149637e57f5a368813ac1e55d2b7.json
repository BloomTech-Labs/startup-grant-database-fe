{"ast":null,"code":"export class Filters {\n  constructor(filters) {\n    this.filters = filters;\n    this.keys = void 0;\n    this.keys = this.getKeys();\n  }\n\n  filter(param1, param2, param3) {\n    if (typeof param2 === 'string') {\n      return param1.filter(grant => grant[param2] === param3);\n    } else {\n      if (!param2 && param3) {\n        return param1.filter(grant => grant.amount < param3);\n      } else if (!param3 && param2) {\n        return param1.filter(grant => grant.amount > param2);\n      } else if (param2 && param3) {\n        return param1.filter(grant => grant.amount >= param2 && grant.amount <= param3);\n      } else {\n        return param1;\n      }\n    }\n  }\n\n  getKeys() {\n    return Object.keys(this.filters).map(key => key);\n  }\n\n  pristine() {\n    for (let i = 0; i < this.keys.length; i++) {\n      if (this.filters[this.keys[i]].filter(item => item.checked).length > 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getFilters() {\n    const newObj = {\n      amount: [],\n      geographic_region: [],\n      domain_areas: []\n    };\n\n    for (let values of this.keys) {\n      newObj[values] = this.filters[values].filter(item => item.checked);\n    }\n\n    return newObj;\n  }\n\n}","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/store/filters/Filters.ts"],"names":["Filters","constructor","filters","keys","getKeys","filter","param1","param2","param3","grant","amount","Object","map","key","pristine","i","length","item","checked","getFilters","newObj","geographic_region","domain_areas","values"],"mappings":"AAGA,OAAO,MAAMA,OAAN,CAAc;AAEjBC,EAAAA,WAAW,CAASC,OAAT,EAAmC;AAAA,SAA1BA,OAA0B,GAA1BA,OAA0B;AAAA,SADtCC,IACsC;AAC1C,SAAKA,IAAL,GAAY,KAAKC,OAAL,EAAZ;AACH;;AAIMC,EAAAA,MAAP,CAAcC,MAAd,EAA+BC,MAA/B,EAA+DC,MAA/D,EAAgG;AAC5F,QAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,aAAOD,MAAM,CAACD,MAAP,CAAcI,KAAK,IAAIA,KAAK,CAACF,MAAD,CAAL,KAAkBC,MAAzC,CAAP;AACH,KAFD,MAGM;AACF,UAAI,CAACD,MAAD,IAAWC,MAAf,EAAuB;AACnB,eAAOF,MAAM,CAACD,MAAP,CAAcI,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAeF,MAAtC,CAAP;AACH,OAFD,MAEO,IAAI,CAACA,MAAD,IAAWD,MAAf,EAAuB;AAC1B,eAAOD,MAAM,CAACD,MAAP,CAAcI,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAeH,MAAtC,CAAP;AACH,OAFM,MAEA,IAAIA,MAAM,IAAIC,MAAd,EAAsB;AACzB,eAAOF,MAAM,CAACD,MAAP,CAAcI,KAAK,IAAIA,KAAK,CAACC,MAAN,IAAgBH,MAAhB,IAA0BE,KAAK,CAACC,MAAN,IAAgBF,MAAjE,CAAP;AACH,OAFM,MAEA;AACH,eAAOF,MAAP;AACH;AACJ;AACJ;;AAEMF,EAAAA,OAAP,GAA2B;AACvB,WAAOO,MAAM,CAACR,IAAP,CAAY,KAAKD,OAAjB,EAA0BU,GAA1B,CAA8BC,GAAG,IAAIA,GAArC,CAAP;AACH;;AAEMC,EAAAA,QAAP,GAA2B;AACvB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKZ,IAAL,CAAUa,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,UAAI,KAAKb,OAAL,CAAa,KAAKC,IAAL,CAAUY,CAAV,CAAb,EAA2BV,MAA3B,CAAkCY,IAAI,IAAIA,IAAI,CAACC,OAA/C,EAAwDF,MAAxD,GAAiE,CAArE,EAAwE;AACpE,eAAO,KAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH;;AAEMG,EAAAA,UAAP,GAAqC;AACjC,UAAMC,MAAuB,GAAG;AAC5BV,MAAAA,MAAM,EAAE,EADoB;AAE5BW,MAAAA,iBAAiB,EAAE,EAFS;AAG5BC,MAAAA,YAAY,EAAE;AAHc,KAAhC;;AAKA,SAAK,IAAIC,MAAT,IAAmB,KAAKpB,IAAxB,EAA8B;AAC1BiB,MAAAA,MAAM,CAACG,MAAD,CAAN,GAAiB,KAAKrB,OAAL,CAAaqB,MAAb,EAAqBlB,MAArB,CAA4BY,IAAI,IAAIA,IAAI,CAACC,OAAzC,CAAjB;AACH;;AACD,WAAOE,MAAP;AACH;;AAhDgB","sourcesContent":["import {Grant} from \"../grants/grantTypes\";\nimport {FilterFormState} from \"./filterTypes\";\n\nexport class Filters {\n    private keys: string[];\n    constructor(private filters: FilterFormState) {\n        this.keys = this.getKeys();\n    }\n    public filter(grants: Grant[], min: number | null, max: number | null): Grant[];\n    public filter(grants: Grant[], key1: string, key2: string): Grant[];\n\n    public filter(param1: Grant[], param2: string | number | null, param3?: string | number | null) {\n        if (typeof param2 === 'string') {\n            return param1.filter(grant => grant[param2] === param3);\n        }\n         else {\n            if (!param2 && param3) {\n                return param1.filter(grant => grant.amount < param3);\n            } else if (!param3 && param2) {\n                return param1.filter(grant => grant.amount > param2);\n            } else if (param2 && param3) {\n                return param1.filter(grant => grant.amount >= param2 && grant.amount <= param3);\n            } else {\n                return param1;\n            }\n        }\n    }\n\n    public getKeys(): string[] {\n        return Object.keys(this.filters).map(key => key);\n    }\n\n    public pristine(): boolean {\n        for (let i = 0; i < this.keys.length; i++) {\n            if (this.filters[this.keys[i]].filter(item => item.checked).length > 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public getFilters(): FilterFormState {\n        const newObj: FilterFormState = {\n            amount: [],\n            geographic_region: [],\n            domain_areas: []\n        }\n        for (let values of this.keys) {\n            newObj[values] = this.filters[values].filter(item => item.checked);\n        }\n        return newObj;\n    }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}