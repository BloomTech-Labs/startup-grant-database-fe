{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { UserTypes } from \"./userTypes\";\nimport { axiosWithAuth, axiosWithOutAuth as axios } from \"../utils/axiosConfig\";\nexport const useUserActions = () => {\n  const dispatch = useDispatch();\n  const getUserFromPG = useCallback(email => {\n    dispatch({\n      type: UserTypes.FETCH_USER_START\n    }); // @ts-ignore\n\n    axios().post(`/users`, email).then(res => {\n      dispatch({\n        type: UserTypes.FETCH_USER_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      const data = err && err.response && err.response.data ? err.response.data : err;\n      dispatch({\n        type: UserTypes.FETCH_USER_FAILURE,\n        payload: data\n      });\n    });\n  }, [dispatch]);\n  const getFavorites = useCallback((token, authId) => {\n    dispatch({\n      type: UserTypes.FETCH_FAVORITES_START\n    });\n    axiosWithAuth(token).get(`/favorites/myFavorites/${authId}`).then(res => dispatch({\n      type: UserTypes.FETCH_FAVORITES_SUCCESS,\n      payload: res.data\n    })).catch(error => dispatch({\n      type: UserTypes.FETCH_FAVORITES_FAILURE,\n      payload: error.response.data\n    }));\n  }, [dispatch]);\n  const addFavorite = useCallback((token, grant_id, auth_id) => {\n    dispatch({\n      type: UserTypes.POST_FAVORITES_START\n    });\n    axiosWithAuth(token).post('/favorites', {\n      grant_id,\n      auth_id\n    }).then(res => dispatch({\n      type: UserTypes.POST_FAVORITES_SUCCESS,\n      payload: res.data\n    })).catch(error => dispatch({\n      type: UserTypes.POST_FAVORITES_FAILURE,\n      payload: error.response\n    }));\n  }, [dispatch]);\n  const setUserFromAuth0 = useCallback(user => {\n    dispatch({\n      type: UserTypes.SET_USER_FROM_AUTH0,\n      payload: user\n    });\n  }, [dispatch]);\n  const resetUser = useCallback(() => {\n    dispatch({\n      type: UserTypes.RESET_USER\n    });\n  }, [dispatch]);\n  const isModerator = useCallback(() => {\n    dispatch({\n      type: UserTypes.IS_MODERATOR\n    });\n  }, [dispatch]);\n  const setToken = useCallback(token => {\n    dispatch({\n      type: UserTypes.SET_TOKEN,\n      payload: token\n    });\n  }, [dispatch]);\n  const removeFavorite = useCallback((token, favoriteId) => {\n    dispatch({\n      type: UserTypes.REMOVE_FAVORITES_START\n    });\n    axiosWithAuth(token).delete(`/favorites/myFavorites/${favoriteId}`).then(() => dispatch({\n      type: UserTypes.REMOVE_FAVORITES_SUCCESS,\n      payload: favoriteId\n    })).catch(err => dispatch({\n      type: UserTypes.REMOVE_FAVORITES_FAILURE,\n      payload: err.response.data\n    }));\n  }, [dispatch]);\n  const removeUser = useCallback((token, id) => {\n    dispatch({\n      type: UserTypes.REMOVE_USER_START\n    });\n    axiosWithAuth(token).delete(`/users/${id}`).then(() => {\n      dispatch({\n        type: UserTypes.REMOVE_USER_SUCCESS\n      });\n    }).catch(() => {\n      dispatch({\n        type: UserTypes.REMOVE_USER_FAILURE\n      });\n    });\n  }, [dispatch]);\n  const updateUser = useCallback((token, id, data) => {\n    dispatch({\n      type: UserTypes.UPDATE_USER_START\n    });\n    axiosWithAuth(token).put(`/users/${id}`, data).then(() => {\n      dispatch({\n        type: UserTypes.UPDATE_USER_SUCCESS\n      });\n    }).catch(() => {\n      dispatch({\n        type: UserTypes.UPDATE_USER_FAILURE\n      });\n    });\n  }, [dispatch]);\n  return {\n    getUserFromPG,\n    setUserFromAuth0,\n    resetUser,\n    isModerator,\n    setToken,\n    getFavorites,\n    addFavorite,\n    removeUser,\n    updateUser,\n    removeFavorite\n  };\n};","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/store/user/useUserActions.tsx"],"names":["useCallback","useDispatch","UserTypes","axiosWithAuth","axiosWithOutAuth","axios","useUserActions","dispatch","getUserFromPG","email","type","FETCH_USER_START","post","then","res","FETCH_USER_SUCCESS","payload","data","catch","err","response","FETCH_USER_FAILURE","getFavorites","token","authId","FETCH_FAVORITES_START","get","FETCH_FAVORITES_SUCCESS","error","FETCH_FAVORITES_FAILURE","addFavorite","grant_id","auth_id","POST_FAVORITES_START","POST_FAVORITES_SUCCESS","POST_FAVORITES_FAILURE","setUserFromAuth0","user","SET_USER_FROM_AUTH0","resetUser","RESET_USER","isModerator","IS_MODERATOR","setToken","SET_TOKEN","removeFavorite","favoriteId","REMOVE_FAVORITES_START","delete","REMOVE_FAVORITES_SUCCESS","REMOVE_FAVORITES_FAILURE","removeUser","id","REMOVE_USER_START","REMOVE_USER_SUCCESS","REMOVE_USER_FAILURE","updateUser","UPDATE_USER_START","put","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE"],"mappings":"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","sourcesContent":["import {useCallback} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {User, UserTypes} from \"./userTypes\";\nimport {AxiosError, AxiosResponse} from 'axios';\nimport {axiosWithAuth, axiosWithOutAuth as axios} from \"../utils/axiosConfig\";\nimport { type } from 'os';\n\nexport const useUserActions = () => {\n    const dispatch = useDispatch();\n\n    const getUserFromPG = useCallback(email => {\n        dispatch({type: UserTypes.FETCH_USER_START});\n        // @ts-ignore\n        axios().post(`/users`, email).then((res:AxiosResponse) => {\n            dispatch({type: UserTypes.FETCH_USER_SUCCESS, payload: res.data})\n        }).catch((err:AxiosError) => {\n            const data = err && err.response && err.response.data ? err.response.data : err;\n            dispatch({type: UserTypes.FETCH_USER_FAILURE, payload: data})\n        })\n    }, [dispatch]);\n\n    const getFavorites = useCallback((token: string, authId: string) => {\n        dispatch({type: UserTypes.FETCH_FAVORITES_START});\n        axiosWithAuth(token).get(`/favorites/myFavorites/${authId}`)\n            .then(res => dispatch({\n                type: UserTypes.FETCH_FAVORITES_SUCCESS,\n                payload: res.data\n            }))\n            .catch(error => dispatch({type: UserTypes.FETCH_FAVORITES_FAILURE, payload: error.response.data}))\n    }, [dispatch]);\n\n    const addFavorite = useCallback((token: string, grant_id: number, auth_id: string) => {\n        dispatch({type: UserTypes.POST_FAVORITES_START});\n        axiosWithAuth(token).post('/favorites', {grant_id, auth_id})\n            .then(res => dispatch({type: UserTypes.POST_FAVORITES_SUCCESS, payload: res.data}))\n            .catch(error => dispatch({type: UserTypes.POST_FAVORITES_FAILURE, payload: error.response}));\n    }, [dispatch]);\n\n    const setUserFromAuth0 = useCallback((user: User) => {\n        dispatch({type: UserTypes.SET_USER_FROM_AUTH0, payload: user})\n    }, [dispatch]);\n\n    const resetUser = useCallback(()=> {\n        dispatch({type: UserTypes.RESET_USER})\n    }, [dispatch])\n\n    const isModerator = useCallback(()=> {\n        dispatch({type: UserTypes.IS_MODERATOR})\n    }, [dispatch]);\n\n\n    const setToken = useCallback((token: string) => {\n        dispatch({type: UserTypes.SET_TOKEN, payload: token});\n    }, [dispatch]);\n\n    const removeFavorite = useCallback((token: string, favoriteId: number) => {\n        dispatch({type: UserTypes.REMOVE_FAVORITES_START});\n        axiosWithAuth(token).delete(`/favorites/myFavorites/${favoriteId}`)\n            .then(() => dispatch({type: UserTypes.REMOVE_FAVORITES_SUCCESS, payload: favoriteId}))\n            .catch(err => dispatch({type: UserTypes.REMOVE_FAVORITES_FAILURE, payload: err.response.data}));\n    }, [dispatch]);\n\n    const removeUser = useCallback((token: string, id: number) => {\n        dispatch({type: UserTypes.REMOVE_USER_START})\n        axiosWithAuth(token)\n            .delete(`/users/${id}`)\n            .then(() => {\n                dispatch({type: UserTypes.REMOVE_USER_SUCCESS})\n            })\n            .catch(() => {\n                dispatch({type: UserTypes.REMOVE_USER_FAILURE})\n            })\n    }, [dispatch])\n\n    const updateUser = useCallback((token: string, id: number, data: User) => {\n        dispatch({type: UserTypes.UPDATE_USER_START})\n        axiosWithAuth(token)\n            .put(`/users/${id}`, data)\n            .then(() => {\n                dispatch({type: UserTypes.UPDATE_USER_SUCCESS})\n            })\n            .catch(() => {\n                dispatch({type: UserTypes.UPDATE_USER_FAILURE})\n            })\n    }, [dispatch])\n\n    return {\n        getUserFromPG,\n        setUserFromAuth0,\n        resetUser,\n        isModerator,\n        setToken,\n        getFavorites,\n        addFavorite,\n        removeUser,\n        updateUser,\n        removeFavorite\n    }\n};\n\nexport interface UseUserActions {\n    getUserFromPG: (email: string) => void;\n    setUserFromAuth0: (user: User) => void;\n    resetUser: () => void;\n    isModerator: () => void;\n    setToken: (token: string) => void;\n    getFavorites: (token: string, authId: string) => void;\n    addFavorite: (token: string, grant_id: number, authId: string) => void;\n    removeFavorite: (token: string, favoriteId: number) => void;\n    removeUser: (token: string, id: number, ) => void;\n    updateUser: (token: string, id: number, data: User) => void;\n}\n"]},"metadata":{},"sourceType":"module"}