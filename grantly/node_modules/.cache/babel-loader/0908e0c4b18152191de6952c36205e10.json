{"ast":null,"code":"var MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js"],"names":["MILLISECONDS_IN_MINUTE","getTimezoneOffsetInMilliseconds","dirtyDate","date","Date","getTime","baseTimezoneOffset","Math","ceil","getTimezoneOffset","setSeconds","millisecondsPartOfTimezoneOffset"],"mappings":"AAAA,IAAIA,sBAAsB,GAAG,KAA7B;AACA;;;;;;;;;;;;AAYA,eAAe,SAASC,+BAAT,CAAyCC,SAAzC,EAAoD;AACjE,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,SAAS,CAACG,OAAV,EAAT,CAAX;AACA,MAAIC,kBAAkB,GAAGC,IAAI,CAACC,IAAL,CAAUL,IAAI,CAACM,iBAAL,EAAV,CAAzB;AACAN,EAAAA,IAAI,CAACO,UAAL,CAAgB,CAAhB,EAAmB,CAAnB;AACA,MAAIC,gCAAgC,GAAGR,IAAI,CAACE,OAAL,KAAiBL,sBAAxD;AACA,SAAOM,kBAAkB,GAAGN,sBAArB,GAA8CW,gCAArD;AACD","sourcesContent":["var MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}"]},"metadata":{},"sourceType":"module"}