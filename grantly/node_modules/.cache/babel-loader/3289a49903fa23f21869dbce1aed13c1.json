{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/suggestion/SuggestionForm.jsx\";\n//Dependencies\nimport React, { useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useGetToken } from \"../auth0/useGetToken.js\"; // import { postGrants, fetchApi, changeTab } from \"../actions/index.js\";\n//Objects\n\nimport formStyles from \"../styles/formStyles\";\nimport { Button, Paper, Grid, Stepper, Step, Typography, CssBaseline, StepLabel } from \"@material-ui/core\"; //Grant form components for each step\n\nimport { GrantInfoForm } from \"./formElements/GrantInfoForm\";\nimport { GrantFocusForm } from \"./formElements/GrantFocusForm\";\nimport { GrantDemoForm } from \"./formElements/GrantDemoForm\";\nimport { SuggestionFormTopContent } from \"./formElements/SuggestionFormTopContent.jsx\";\nimport moment from \"moment\";\nexport const AddGrant = props => {\n  //Steps are the different parts of the form.  They are broken down into components in the submitForm directory\n  const steps = [\"Grant Info\", \"Grant Focus\", \"Grant Demo\"];\n  const [activeStep, setActiveStep] = useState(0);\n  const [token] = useGetToken(); //Switch case that uses the \"step\" to determine what component to render\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return React.createElement(GrantInfoForm, {\n          handleChanges: handleChanges,\n          grantInfo: grantInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n\n      case 1:\n        return React.createElement(GrantFocusForm, {\n          handleChanges: handleChanges,\n          grantInfo: grantInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(GrantDemoForm, {\n          handleChanges: handleChanges,\n          grantInfo: grantInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n\n      default:\n        throw new Error(\"Unknown Step\");\n    }\n  } //Default values for grants state.  Note is_reviewed is set to false so it will only show up on Admin.  Also null values are set to avoid 500 error if inputs are left blank\n\n\n  const [grantInfo, setGrantInfo] = useState({\n    competition_name: \"\",\n    // type: \"\",\n    area_focus: \"\",\n    sponsoring_entity: \"\",\n    website: \"\",\n    most_recent_application_due_date: null,\n    amount: null,\n    amount_notes: \"\",\n    geographic_region: \"\",\n    // domain_areas: \"\",\n    target_entrepreneur_demographic: \"\",\n    notes: \"\",\n    early_stage_funding: false,\n    is_reviewed: false,\n    has_requests: false,\n    details_last_updated: moment().format(\"YYYY-MM-DD\")\n  }); //HandleChanges for form\n\n  const handleChanges = event => {\n    event.preventDefault();\n    setGrantInfo({ ...grantInfo,\n      [event.target.name]: event.target.value\n    });\n  }; //Submit for grant from\n\n\n  const submitGrant = event => {\n    event.preventDefault();\n    props.postGrants({ ...grantInfo\n    }, token);\n    setGrantInfo({\n      competition_name: \"\",\n      // type: \"\",\n      area_focus: \"\",\n      sponsoring_entity: \"\",\n      website: \"\",\n      most_recent_application_due_date: \"\",\n      amount: \"\",\n      amount_notes: \"\",\n      geographic_region: \"\",\n      // domain_areas: \"\",\n      target_entrepreneur_demographic: \"\",\n      notes: \"\",\n      early_stage_funding: \"\",\n      details_last_updated: \"\"\n    }); //Once a user submits it will delay for 2 seconds before \"pushing\" the user to the grants page\n\n    setTimeout(() => {\n      props.fetchApi();\n      props.changeTab(0);\n      props.history.push(\"/grants\");\n    }, 2000);\n  };\n\n  const styles = formStyles(); //State that keeps track of what component the user is on\n  //Used to move the \"step\" to the next value\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  }; //Used to move the \"step\" to the previous value\n\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    className: styles.layout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: styles.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(SuggestionFormTopContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(Stepper, {\n    activeStep: activeStep,\n    className: styles.stepper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, steps.map(label => React.createElement(Step, {\n    key: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(StepLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, label)))), React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, activeStep === steps.length ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Thank you for your grant submission!\", \" \"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Our site admins will look over your grant information to be approved before it\\u2019s posted on Founders Grant. Enter your email address to get updates and to know when your grant has been approved.\")) : //else portion of ternary\n  React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, getStepContent(activeStep), React.createElement(\"div\", {\n    className: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, activeStep !== 0 && React.createElement(Button, {\n    onClick: handleBack,\n    variant: \"outlined\",\n    className: styles.back,\n    style: {\n      marginRight: \"30px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Back\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\" // Ternary that determines what button to display based on what component the user is on\n    ,\n    onClick: activeStep === steps.length - 1 ? submitGrant : handleNext,\n    className: styles.submit,\n    style: {\n      color: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, activeStep === steps.length - 1 ? \"submit\" : \"Next\")))))));\n}; // const mapStateToProps = ({ grantData, isFetching, error }) => ({\n//   grantData,\n//   isFetching,\n//   error\n// });\n// export default connect(mapStateToProps, { postGrants, fetchApi, changeTab })(\n//   AddGrant\n// );","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/suggestion/SuggestionForm.jsx"],"names":["React","useState","Fragment","connect","useGetToken","formStyles","Button","Paper","Grid","Stepper","Step","Typography","CssBaseline","StepLabel","GrantInfoForm","GrantFocusForm","GrantDemoForm","SuggestionFormTopContent","moment","AddGrant","props","steps","activeStep","setActiveStep","token","getStepContent","step","handleChanges","grantInfo","Error","setGrantInfo","competition_name","area_focus","sponsoring_entity","website","most_recent_application_due_date","amount","amount_notes","geographic_region","target_entrepreneur_demographic","notes","early_stage_funding","is_reviewed","has_requests","details_last_updated","format","event","preventDefault","target","name","value","submitGrant","postGrants","setTimeout","fetchApi","changeTab","history","push","styles","handleNext","handleBack","layout","paper","stepper","map","label","length","button","back","marginRight","submit","color"],"mappings":"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","sourcesContent":["//Dependencies\nimport React, { useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { useGetToken } from \"../auth0/useGetToken.js\";\n\n// import { postGrants, fetchApi, changeTab } from \"../actions/index.js\";\n//Objects\nimport formStyles from \"../styles/formStyles\";\nimport {\n  Button,\n  Paper,\n  Grid,\n  Stepper,\n  Step,\n  Typography,\n  CssBaseline,\n  StepLabel\n} from \"@material-ui/core\";\n\n//Grant form components for each step\nimport { GrantInfoForm } from \"./formElements/GrantInfoForm\";\nimport { GrantFocusForm } from \"./formElements/GrantFocusForm\";\nimport { GrantDemoForm } from \"./formElements/GrantDemoForm\";\nimport { SuggestionFormTopContent } from \"./formElements/SuggestionFormTopContent.jsx\";\nimport moment from \"moment\";\nexport const AddGrant = props => {\n  //Steps are the different parts of the form.  They are broken down into components in the submitForm directory\n  const steps = [\"Grant Info\", \"Grant Focus\", \"Grant Demo\"];\n  const [activeStep, setActiveStep] = useState(0);\n\n  const [token] = useGetToken();\n\n  //Switch case that uses the \"step\" to determine what component to render\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <GrantInfoForm handleChanges={handleChanges} grantInfo={grantInfo} />\n        );\n      case 1:\n        return (\n          <GrantFocusForm handleChanges={handleChanges} grantInfo={grantInfo} />\n        );\n      case 2:\n        return (\n          <GrantDemoForm handleChanges={handleChanges} grantInfo={grantInfo} />\n        );\n      default:\n        throw new Error(\"Unknown Step\");\n    }\n  }\n\n  //Default values for grants state.  Note is_reviewed is set to false so it will only show up on Admin.  Also null values are set to avoid 500 error if inputs are left blank\n  const [grantInfo, setGrantInfo] = useState({\n    competition_name: \"\",\n    // type: \"\",\n    area_focus: \"\",\n    sponsoring_entity: \"\",\n    website: \"\",\n\n    most_recent_application_due_date: null,\n\n    amount: null,\n    amount_notes: \"\",\n    geographic_region: \"\",\n    // domain_areas: \"\",\n    target_entrepreneur_demographic: \"\",\n    notes: \"\",\n    early_stage_funding: false,\n    is_reviewed: false,\n    has_requests: false,\n    details_last_updated: moment().format(\"YYYY-MM-DD\")\n  });\n\n  //HandleChanges for form\n  const handleChanges = event => {\n    event.preventDefault();\n    setGrantInfo({\n      ...grantInfo,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  //Submit for grant from\n  const submitGrant = event => {\n    event.preventDefault();\n\n    props.postGrants({ ...grantInfo }, token);\n\n    setGrantInfo({\n      competition_name: \"\",\n      // type: \"\",\n      area_focus: \"\",\n      sponsoring_entity: \"\",\n      website: \"\",\n      most_recent_application_due_date: \"\",\n      amount: \"\",\n      amount_notes: \"\",\n      geographic_region: \"\",\n      // domain_areas: \"\",\n      target_entrepreneur_demographic: \"\",\n      notes: \"\",\n      early_stage_funding: \"\",\n      details_last_updated: \"\"\n    });\n\n    //Once a user submits it will delay for 2 seconds before \"pushing\" the user to the grants page\n    setTimeout(() => {\n      props.fetchApi();\n      props.changeTab(0);\n\n      props.history.push(\"/grants\");\n    }, 2000);\n  };\n\n  const styles = formStyles();\n\n  //State that keeps track of what component the user is on\n\n  //Used to move the \"step\" to the next value\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  //Used to move the \"step\" to the previous value\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    <Fragment>\n      <CssBaseline />\n\n      <main className={styles.layout}>\n        <Paper className={styles.paper}>\n          <SuggestionFormTopContent />\n          {/* Material UI for the stepper at the top of the page. */}\n          <Stepper activeStep={activeStep} className={styles.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <Fragment>\n            {/* Ternary statement to determine if the grant has been submitted.  This is not being used now, but will be once an email input option has been implemented in future releases  */}\n            {activeStep === steps.length ? (\n              <Fragment>\n                <Typography variant=\"h3\">\n                  Thank you for your grant submission!{\" \"}\n                </Typography>\n                <Typography>\n                  Our site admins will look over your grant information to be\n                  approved before it’s posted on Founders Grant. Enter your\n                  email address to get updates and to know when your grant has\n                  been approved.\n                </Typography>\n              </Fragment>\n            ) : (\n              //else portion of ternary\n              <Fragment>\n                {getStepContent(activeStep)}\n\n                <div className={styles.button}>\n                  {activeStep !== 0 && (\n                    <Button\n                      onClick={handleBack}\n                      variant=\"outlined\"\n                      className={styles.back}\n                      style={{ marginRight: \"30px\" }}\n                    >\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    // Ternary that determines what button to display based on what component the user is on\n                    onClick={\n                      activeStep === steps.length - 1 ? submitGrant : handleNext\n                    }\n                    className={styles.submit}\n                    style={{ color: \"#fff\" }}\n                  >\n                    {/* Ternary that determine what button to display*/}\n                    {activeStep === steps.length - 1 ? \"submit\" : \"Next\"}\n                  </Button>\n                </div>\n              </Fragment>\n            )}\n          </Fragment>\n        </Paper>\n      </main>\n    </Fragment>\n  );\n};\n// const mapStateToProps = ({ grantData, isFetching, error }) => ({\n//   grantData,\n//   isFetching,\n//   error\n// });\n\n// export default connect(mapStateToProps, { postGrants, fetchApi, changeTab })(\n//   AddGrant\n// );\n"]},"metadata":{},"sourceType":"module"}