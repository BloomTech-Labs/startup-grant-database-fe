{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.isSSOEnabled = isSSOEnabled;\nexports.matchesEnterpriseConnection = matchesEnterpriseConnection;\nexports.usernameStyle = usernameStyle;\nexports.hasOnlyClassicConnections = hasOnlyClassicConnections;\n\nvar _index = require('../index');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _login = require('./classic/login');\n\nvar _login2 = _interopRequireDefault(_login);\n\nvar _sign_up_screen = require('./classic/sign_up_screen');\n\nvar _sign_up_screen2 = _interopRequireDefault(_sign_up_screen);\n\nvar _mfa_login_screen = require('./classic/mfa_login_screen');\n\nvar _mfa_login_screen2 = _interopRequireDefault(_mfa_login_screen);\n\nvar _reset_password = require('../connection/database/reset_password');\n\nvar _reset_password2 = _interopRequireDefault(_reset_password);\n\nvar _index3 = require('../core/sso/index');\n\nvar sso = _interopRequireWildcard(_index3);\n\nvar _index4 = require('../connection/database/index');\n\nvar _enterprise = require('../connection/enterprise');\n\nvar _tenant = require('../core/tenant');\n\nvar _email = require('../field/email');\n\nvar _username = require('../field/username');\n\nvar _index5 = require('../core/index');\n\nvar l = _interopRequireWildcard(_index5);\n\nvar _kerberos_screen = require('../connection/enterprise/kerberos_screen');\n\nvar _kerberos_screen2 = _interopRequireDefault(_kerberos_screen);\n\nvar _hrd_screen = require('../connection/enterprise/hrd_screen');\n\nvar _hrd_screen2 = _interopRequireDefault(_hrd_screen);\n\nvar _quick_auth_screen = require('../connection/enterprise/quick_auth_screen');\n\nvar _quick_auth_screen2 = _interopRequireDefault(_quick_auth_screen);\n\nvar _quick_auth = require('../quick_auth');\n\nvar _loading_screen = require('../core/loading_screen');\n\nvar _loading_screen2 = _interopRequireDefault(_loading_screen);\n\nvar _error_screen = require('../core/error_screen');\n\nvar _error_screen2 = _interopRequireDefault(_error_screen);\n\nvar _last_login_screen = require('../core/sso/last_login_screen');\n\nvar _last_login_screen2 = _interopRequireDefault(_last_login_screen);\n\nvar _sync = require('../sync');\n\nvar _index6 = require('../field/index');\n\nvar _index7 = require('../store/index');\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction isSSOEnabled(m, options) {\n  return matchesEnterpriseConnection(m, (0, _index4.databaseUsernameValue)(m, options));\n}\n\nfunction matchesEnterpriseConnection(m, usernameValue) {\n  return (0, _enterprise.isEnterpriseDomain)(m, usernameValue);\n}\n\nfunction usernameStyle(m) {\n  return (0, _index4.authWithUsername)(m) && !(0, _enterprise.isADEnabled)(m) ? 'username' : 'email';\n}\n\nfunction hasOnlyClassicConnections(m) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n  for (var _len = arguments.length, strategies = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    strategies[_key - 2] = arguments[_key];\n  }\n\n  return l.hasOnlyConnections.apply(l, [m, type].concat(strategies)) && !l.hasSomeConnections(m, 'passwordless');\n}\n\nfunction validateAllowedConnections(m) {\n  var anyDBConnection = l.hasSomeConnections(m, 'database');\n  var anySocialConnection = l.hasSomeConnections(m, 'social');\n  var anyEnterpriseConnection = l.hasSomeConnections(m, 'enterprise');\n\n  if (!anyDBConnection && !anySocialConnection && !anyEnterpriseConnection) {\n    var error = new Error('At least one database, enterprise or social connection needs to be available.');\n    error.code = 'no_connection';\n    m = l.stop(m, error);\n  } else if (!anyDBConnection && (0, _index4.hasInitialScreen)(m, 'forgotPassword')) {\n    var _error = new Error('The `initialScreen` option was set to \"forgotPassword\" but no database connection is available.');\n\n    _error.code = 'unavailable_initial_screen';\n    m = l.stop(m, _error);\n  } else if (!anyDBConnection && !anySocialConnection && (0, _index4.hasInitialScreen)(m, 'signUp')) {\n    var _error2 = new Error('The `initialScreen` option was set to \"signUp\" but no database or social connection is available.');\n\n    _error2.code = 'unavailable_initial_screen';\n    m = l.stop(m, _error2);\n  }\n\n  if ((0, _tenant.defaultDirectoryName)(m) && !(0, _tenant.defaultDirectory)(m)) {\n    l.error(m, 'The account\\'s default directory \"' + (0, _tenant.defaultDirectoryName)(m) + '\" is not enabled.');\n  }\n\n  if ((0, _index4.defaultDatabaseConnectionName)(m) && !(0, _index4.defaultDatabaseConnection)(m)) {\n    l.warn(m, 'The provided default database connection \"' + (0, _index4.defaultDatabaseConnectionName)(m) + '\" is not enabled.');\n  }\n\n  if ((0, _enterprise.defaultEnterpriseConnectionName)(m) && !(0, _enterprise.defaultEnterpriseConnection)(m)) {\n    l.warn(m, 'The provided default enterprise connection \"' + (0, _enterprise.defaultEnterpriseConnectionName)(m) + '\" is not enabled or does not allow email/password authentication.');\n  }\n\n  return m;\n}\n\nvar setPrefill = function setPrefill(m) {\n  var _l$prefill$toJS = l.prefill(m).toJS(),\n      email = _l$prefill$toJS.email,\n      username = _l$prefill$toJS.username;\n\n  if (typeof email === 'string') m = (0, _email.setEmail)(m, email);\n  if (typeof username === 'string') m = (0, _username.setUsername)(m, username, 'username', false);\n  return m;\n};\n\nfunction createErrorScreen(m, stopError) {\n  setTimeout(function () {\n    (0, _index7.swap)(_index7.updateEntity, 'lock', l.id(m), l.stop, stopError);\n  }, 0);\n  return new _error_screen2.default();\n}\n\nvar Classic = function () {\n  function Classic() {\n    _classCallCheck(this, Classic);\n  }\n\n  Classic.prototype.didInitialize = function didInitialize(model, options) {\n    model = (0, _index4.initDatabase)(model, options);\n    model = (0, _enterprise.initEnterprise)(model, options);\n    return model;\n  };\n\n  Classic.prototype.didReceiveClientSettings = function didReceiveClientSettings(m) {\n    m = validateAllowedConnections(m);\n    m = setPrefill(m);\n    return m;\n  };\n\n  Classic.prototype.willShow = function willShow(m, opts) {\n    m = (0, _index4.overrideDatabaseOptions)(m, opts);\n    m = (0, _index4.resolveAdditionalSignUpFields)(m);\n\n    if ((0, _sync.isSuccess)(m, 'client')) {\n      m = validateAllowedConnections(m);\n    }\n\n    return m;\n  };\n\n  Classic.prototype.render = function render(m) {\n    //if there's an error, we should show the error screen no matter what.\n    if (l.hasStopped(m)) {\n      return new _error_screen2.default();\n    } // TODO: remove the detail about the loading pane being pinned,\n    // sticky screens should be handled at the box module.\n\n\n    if (!(0, _sync.isDone)(m) || m.get('isLoadingPanePinned')) {\n      return new _loading_screen2.default();\n    }\n\n    if ((0, _index4.hasScreen)(m, 'login')) {\n      if (!(0, _quick_auth.hasSkippedQuickAuth)(m) && (0, _index4.hasInitialScreen)(m, 'login')) {\n        if ((0, _enterprise.isInCorpNetwork)(m)) {\n          return new _kerberos_screen2.default();\n        }\n\n        if (l.ui.rememberLastLogin(m)) {\n          var lastUsedConnection = sso.lastUsedConnection(m);\n          var lastUsedUsername = sso.lastUsedUsername(m);\n\n          if (lastUsedConnection && (0, _sync.isSuccess)(m, 'sso') && l.hasConnection(m, lastUsedConnection.get('name')) && l.findConnection(m, lastUsedConnection.get('name')).get('type') !== 'passwordless') {\n            return new _last_login_screen2.default();\n          }\n        }\n      }\n\n      if ((0, _enterprise.quickAuthConnection)(m)) {\n        return new _quick_auth_screen2.default();\n      }\n\n      if ((0, _enterprise.isHRDActive)(m)) {\n        return new _hrd_screen2.default();\n      }\n    }\n\n    if (!(0, _index4.hasScreen)(m, 'login') && !(0, _index4.hasScreen)(m, 'signUp') && !(0, _index4.hasScreen)(m, 'forgotPassword')) {\n      var errorMessage = 'No available Screen. You have to allow at least one of those screens: `login`, `signUp`or `forgotPassword`.';\n      var noAvailableScreenError = new Error(errorMessage);\n      noAvailableScreenError.code = 'internal_error';\n      noAvailableScreenError.description = errorMessage;\n      return createErrorScreen(m, noAvailableScreenError);\n    }\n\n    var Screen = Classic.SCREENS[(0, _index4.getScreen)(m)];\n\n    if (Screen) {\n      return new Screen();\n    }\n\n    var noScreenError = new Error('Internal error');\n    noScreenError.code = 'internal_error';\n    noScreenError.description = 'Couldn\\'t find a screen \"' + (0, _index4.getScreen)(m) + '\"';\n    return createErrorScreen(m, noScreenError);\n  };\n\n  return Classic;\n}();\n\nClassic.SCREENS = {\n  login: _login2.default,\n  forgotPassword: _reset_password2.default,\n  signUp: _sign_up_screen2.default,\n  mfaLogin: _mfa_login_screen2.default\n};\nexports.default = new Classic();","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/node_modules/auth0-lock/lib/engine/classic.js"],"names":["exports","__esModule","isSSOEnabled","matchesEnterpriseConnection","usernameStyle","hasOnlyClassicConnections","_index","require","_index2","_interopRequireDefault","_login","_login2","_sign_up_screen","_sign_up_screen2","_mfa_login_screen","_mfa_login_screen2","_reset_password","_reset_password2","_index3","sso","_interopRequireWildcard","_index4","_enterprise","_tenant","_email","_username","_index5","l","_kerberos_screen","_kerberos_screen2","_hrd_screen","_hrd_screen2","_quick_auth_screen","_quick_auth_screen2","_quick_auth","_loading_screen","_loading_screen2","_error_screen","_error_screen2","_last_login_screen","_last_login_screen2","_sync","_index6","_index7","obj","newObj","key","Object","prototype","hasOwnProperty","call","default","_classCallCheck","instance","Constructor","TypeError","m","options","databaseUsernameValue","usernameValue","isEnterpriseDomain","authWithUsername","isADEnabled","type","arguments","length","undefined","_len","strategies","Array","_key","hasOnlyConnections","apply","concat","hasSomeConnections","validateAllowedConnections","anyDBConnection","anySocialConnection","anyEnterpriseConnection","error","Error","code","stop","hasInitialScreen","_error","_error2","defaultDirectoryName","defaultDirectory","defaultDatabaseConnectionName","defaultDatabaseConnection","warn","defaultEnterpriseConnectionName","defaultEnterpriseConnection","setPrefill","_l$prefill$toJS","prefill","toJS","email","username","setEmail","setUsername","createErrorScreen","stopError","setTimeout","swap","updateEntity","id","Classic","didInitialize","model","initDatabase","initEnterprise","didReceiveClientSettings","willShow","opts","overrideDatabaseOptions","resolveAdditionalSignUpFields","isSuccess","render","hasStopped","isDone","get","hasScreen","hasSkippedQuickAuth","isInCorpNetwork","ui","rememberLastLogin","lastUsedConnection","lastUsedUsername","hasConnection","findConnection","quickAuthConnection","isHRDActive","errorMessage","noAvailableScreenError","description","Screen","SCREENS","getScreen","noScreenError","login","forgotPassword","signUp","mfaLogin"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.isSSOEnabled = isSSOEnabled;\nexports.matchesEnterpriseConnection = matchesEnterpriseConnection;\nexports.usernameStyle = usernameStyle;\nexports.hasOnlyClassicConnections = hasOnlyClassicConnections;\n\nvar _index = require('../index');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _login = require('./classic/login');\n\nvar _login2 = _interopRequireDefault(_login);\n\nvar _sign_up_screen = require('./classic/sign_up_screen');\n\nvar _sign_up_screen2 = _interopRequireDefault(_sign_up_screen);\n\nvar _mfa_login_screen = require('./classic/mfa_login_screen');\n\nvar _mfa_login_screen2 = _interopRequireDefault(_mfa_login_screen);\n\nvar _reset_password = require('../connection/database/reset_password');\n\nvar _reset_password2 = _interopRequireDefault(_reset_password);\n\nvar _index3 = require('../core/sso/index');\n\nvar sso = _interopRequireWildcard(_index3);\n\nvar _index4 = require('../connection/database/index');\n\nvar _enterprise = require('../connection/enterprise');\n\nvar _tenant = require('../core/tenant');\n\nvar _email = require('../field/email');\n\nvar _username = require('../field/username');\n\nvar _index5 = require('../core/index');\n\nvar l = _interopRequireWildcard(_index5);\n\nvar _kerberos_screen = require('../connection/enterprise/kerberos_screen');\n\nvar _kerberos_screen2 = _interopRequireDefault(_kerberos_screen);\n\nvar _hrd_screen = require('../connection/enterprise/hrd_screen');\n\nvar _hrd_screen2 = _interopRequireDefault(_hrd_screen);\n\nvar _quick_auth_screen = require('../connection/enterprise/quick_auth_screen');\n\nvar _quick_auth_screen2 = _interopRequireDefault(_quick_auth_screen);\n\nvar _quick_auth = require('../quick_auth');\n\nvar _loading_screen = require('../core/loading_screen');\n\nvar _loading_screen2 = _interopRequireDefault(_loading_screen);\n\nvar _error_screen = require('../core/error_screen');\n\nvar _error_screen2 = _interopRequireDefault(_error_screen);\n\nvar _last_login_screen = require('../core/sso/last_login_screen');\n\nvar _last_login_screen2 = _interopRequireDefault(_last_login_screen);\n\nvar _sync = require('../sync');\n\nvar _index6 = require('../field/index');\n\nvar _index7 = require('../store/index');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction isSSOEnabled(m, options) {\n  return matchesEnterpriseConnection(m, (0, _index4.databaseUsernameValue)(m, options));\n}\n\nfunction matchesEnterpriseConnection(m, usernameValue) {\n  return (0, _enterprise.isEnterpriseDomain)(m, usernameValue);\n}\n\nfunction usernameStyle(m) {\n  return (0, _index4.authWithUsername)(m) && !(0, _enterprise.isADEnabled)(m) ? 'username' : 'email';\n}\n\nfunction hasOnlyClassicConnections(m) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n  for (var _len = arguments.length, strategies = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    strategies[_key - 2] = arguments[_key];\n  }\n\n  return l.hasOnlyConnections.apply(l, [m, type].concat(strategies)) && !l.hasSomeConnections(m, 'passwordless');\n}\n\nfunction validateAllowedConnections(m) {\n  var anyDBConnection = l.hasSomeConnections(m, 'database');\n  var anySocialConnection = l.hasSomeConnections(m, 'social');\n  var anyEnterpriseConnection = l.hasSomeConnections(m, 'enterprise');\n\n  if (!anyDBConnection && !anySocialConnection && !anyEnterpriseConnection) {\n    var error = new Error('At least one database, enterprise or social connection needs to be available.');\n    error.code = 'no_connection';\n    m = l.stop(m, error);\n  } else if (!anyDBConnection && (0, _index4.hasInitialScreen)(m, 'forgotPassword')) {\n    var _error = new Error('The `initialScreen` option was set to \"forgotPassword\" but no database connection is available.');\n    _error.code = 'unavailable_initial_screen';\n    m = l.stop(m, _error);\n  } else if (!anyDBConnection && !anySocialConnection && (0, _index4.hasInitialScreen)(m, 'signUp')) {\n    var _error2 = new Error('The `initialScreen` option was set to \"signUp\" but no database or social connection is available.');\n    _error2.code = 'unavailable_initial_screen';\n    m = l.stop(m, _error2);\n  }\n\n  if ((0, _tenant.defaultDirectoryName)(m) && !(0, _tenant.defaultDirectory)(m)) {\n    l.error(m, 'The account\\'s default directory \"' + (0, _tenant.defaultDirectoryName)(m) + '\" is not enabled.');\n  }\n\n  if ((0, _index4.defaultDatabaseConnectionName)(m) && !(0, _index4.defaultDatabaseConnection)(m)) {\n    l.warn(m, 'The provided default database connection \"' + (0, _index4.defaultDatabaseConnectionName)(m) + '\" is not enabled.');\n  }\n\n  if ((0, _enterprise.defaultEnterpriseConnectionName)(m) && !(0, _enterprise.defaultEnterpriseConnection)(m)) {\n    l.warn(m, 'The provided default enterprise connection \"' + (0, _enterprise.defaultEnterpriseConnectionName)(m) + '\" is not enabled or does not allow email/password authentication.');\n  }\n\n  return m;\n}\n\nvar setPrefill = function setPrefill(m) {\n  var _l$prefill$toJS = l.prefill(m).toJS(),\n      email = _l$prefill$toJS.email,\n      username = _l$prefill$toJS.username;\n\n  if (typeof email === 'string') m = (0, _email.setEmail)(m, email);\n  if (typeof username === 'string') m = (0, _username.setUsername)(m, username, 'username', false);\n  return m;\n};\n\nfunction createErrorScreen(m, stopError) {\n  setTimeout(function () {\n    (0, _index7.swap)(_index7.updateEntity, 'lock', l.id(m), l.stop, stopError);\n  }, 0);\n\n  return new _error_screen2.default();\n}\n\nvar Classic = function () {\n  function Classic() {\n    _classCallCheck(this, Classic);\n  }\n\n  Classic.prototype.didInitialize = function didInitialize(model, options) {\n    model = (0, _index4.initDatabase)(model, options);\n    model = (0, _enterprise.initEnterprise)(model, options);\n\n    return model;\n  };\n\n  Classic.prototype.didReceiveClientSettings = function didReceiveClientSettings(m) {\n    m = validateAllowedConnections(m);\n    m = setPrefill(m);\n    return m;\n  };\n\n  Classic.prototype.willShow = function willShow(m, opts) {\n    m = (0, _index4.overrideDatabaseOptions)(m, opts);\n    m = (0, _index4.resolveAdditionalSignUpFields)(m);\n    if ((0, _sync.isSuccess)(m, 'client')) {\n      m = validateAllowedConnections(m);\n    }\n    return m;\n  };\n\n  Classic.prototype.render = function render(m) {\n    //if there's an error, we should show the error screen no matter what.\n    if (l.hasStopped(m)) {\n      return new _error_screen2.default();\n    }\n\n    // TODO: remove the detail about the loading pane being pinned,\n    // sticky screens should be handled at the box module.\n    if (!(0, _sync.isDone)(m) || m.get('isLoadingPanePinned')) {\n      return new _loading_screen2.default();\n    }\n\n    if ((0, _index4.hasScreen)(m, 'login')) {\n      if (!(0, _quick_auth.hasSkippedQuickAuth)(m) && (0, _index4.hasInitialScreen)(m, 'login')) {\n        if ((0, _enterprise.isInCorpNetwork)(m)) {\n          return new _kerberos_screen2.default();\n        }\n\n        if (l.ui.rememberLastLogin(m)) {\n          var lastUsedConnection = sso.lastUsedConnection(m);\n          var lastUsedUsername = sso.lastUsedUsername(m);\n          if (lastUsedConnection && (0, _sync.isSuccess)(m, 'sso') && l.hasConnection(m, lastUsedConnection.get('name')) && l.findConnection(m, lastUsedConnection.get('name')).get('type') !== 'passwordless') {\n            return new _last_login_screen2.default();\n          }\n        }\n      }\n\n      if ((0, _enterprise.quickAuthConnection)(m)) {\n        return new _quick_auth_screen2.default();\n      }\n\n      if ((0, _enterprise.isHRDActive)(m)) {\n        return new _hrd_screen2.default();\n      }\n    }\n\n    if (!(0, _index4.hasScreen)(m, 'login') && !(0, _index4.hasScreen)(m, 'signUp') && !(0, _index4.hasScreen)(m, 'forgotPassword')) {\n      var errorMessage = 'No available Screen. You have to allow at least one of those screens: `login`, `signUp`or `forgotPassword`.';\n      var noAvailableScreenError = new Error(errorMessage);\n      noAvailableScreenError.code = 'internal_error';\n      noAvailableScreenError.description = errorMessage;\n      return createErrorScreen(m, noAvailableScreenError);\n    }\n\n    var Screen = Classic.SCREENS[(0, _index4.getScreen)(m)];\n    if (Screen) {\n      return new Screen();\n    }\n    var noScreenError = new Error('Internal error');\n    noScreenError.code = 'internal_error';\n    noScreenError.description = 'Couldn\\'t find a screen \"' + (0, _index4.getScreen)(m) + '\"';\n    return createErrorScreen(m, noScreenError);\n  };\n\n  return Classic;\n}();\n\nClassic.SCREENS = {\n  login: _login2.default,\n  forgotPassword: _reset_password2.default,\n  signUp: _sign_up_screen2.default,\n  mfaLogin: _mfa_login_screen2.default\n};\nexports.default = new Classic();\n"]},"metadata":{},"sourceType":"script"}