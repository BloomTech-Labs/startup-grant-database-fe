{"ast":null,"code":"import { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { UserTypes } from \"./userTypes\";\nimport { axiosWithAuth } from \"../utils/axiosConfig\";\nimport { logger } from \"../utils/logger\";\nexport const useUserActions = () => {\n  const dispatch = useDispatch();\n  const getUserFromPG = useCallback((token, email) => {\n    logger(\"Email inside of Action\", {\n      email\n    });\n    dispatch({\n      type: UserTypes.FETCH_USER_START\n    }); // @ts-ignore\n\n    axiosWithAuth(token).post(`/users`, {\n      email\n    }).then(res => {\n      dispatch({\n        type: UserTypes.FETCH_USER_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      const data = err && err.response && err.response.data ? err.response.data : err;\n      dispatch({\n        type: UserTypes.FETCH_USER_FAILURE,\n        payload: data\n      });\n    });\n  }, [dispatch]); // const getUserByEmail = useCallback(\n  //   (email: string, token: string) => {\n  //     dispatch({ type: UserTypes.FETCH_USER_START });\n  //     // @ts-ignore\n  //     axiosWithAuth(token)\n  //       .get(`/users/${email}`)\n  //       .then((res: AxiosResponse) => {\n  //         dispatch({ type: UserTypes.FETCH_USER_SUCCESS });\n  //       })\n  //       .catch((err: AxiosError) => {\n  //         const data =\n  //           err && err.response && err.response.data ? err.response.data : err;\n  //         dispatch({ type: UserTypes.FETCH_USER_FAILURE, payload: data });\n  //       });\n  //   },\n  //   [dispatch]\n  // );\n\n  const getFavorites = useCallback((token, authId) => {\n    dispatch({\n      type: UserTypes.FETCH_FAVORITES_START\n    });\n    axiosWithAuth(token).get(`/favorites/myFavorites/${authId}`).then(res => dispatch({\n      type: UserTypes.FETCH_FAVORITES_SUCCESS,\n      payload: res.data\n    })).catch(error => dispatch({\n      type: UserTypes.FETCH_FAVORITES_FAILURE,\n      payload: error.response.data\n    }));\n  }, [dispatch]);\n  const addFavorite = useCallback((token, grant_id, auth_id) => {\n    dispatch({\n      type: UserTypes.POST_FAVORITES_START\n    });\n    axiosWithAuth(token).post(\"/users/favorites\", {\n      grant_id,\n      auth_id\n    }).then(res => dispatch({\n      type: UserTypes.POST_FAVORITES_SUCCESS,\n      payload: res.data\n    })).catch(error => dispatch({\n      type: UserTypes.POST_FAVORITES_FAILURE,\n      payload: error.response\n    }));\n  }, [dispatch]);\n  const setUserFromAuth0 = useCallback(user => {\n    dispatch({\n      type: UserTypes.SET_USER_FROM_AUTH0,\n      payload: user\n    });\n  }, [dispatch]);\n  const resetUser = useCallback(() => {\n    dispatch({\n      type: UserTypes.RESET_USER\n    });\n  }, [dispatch]);\n  const isModerator = useCallback(() => {\n    dispatch({\n      type: UserTypes.IS_MODERATOR\n    });\n  }, [dispatch]);\n  const setToken = useCallback(token => {\n    dispatch({\n      type: UserTypes.SET_TOKEN,\n      payload: token\n    });\n  }, [dispatch]);\n  const removeFavorite = useCallback((token, favoriteId) => {\n    dispatch({\n      type: UserTypes.REMOVE_FAVORITES_START\n    });\n    axiosWithAuth(token).delete(`/favorites/myFavorites/${favoriteId}`).then(() => dispatch({\n      type: UserTypes.REMOVE_FAVORITES_SUCCESS,\n      payload: favoriteId\n    })).catch(err => dispatch({\n      type: UserTypes.REMOVE_FAVORITES_FAILURE,\n      payload: err.response.data\n    }));\n  }, [dispatch]);\n  const removeUser = useCallback((token, id) => {\n    dispatch({\n      type: UserTypes.REMOVE_USER_START\n    });\n    axiosWithAuth(token).delete(`/users/${id}`).then(() => {\n      dispatch({\n        type: UserTypes.REMOVE_USER_SUCCESS\n      });\n    }).catch(() => {\n      dispatch({\n        type: UserTypes.REMOVE_USER_FAILURE\n      });\n    });\n  }, [dispatch]);\n  const updateUser = useCallback((token, id, data) => {\n    dispatch({\n      type: UserTypes.UPDATE_USER_START\n    });\n    axiosWithAuth(token).put(`/users/${id}`, data).then(res => {\n      dispatch({\n        type: UserTypes.UPDATE_USER_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      dispatch({\n        type: UserTypes.UPDATE_USER_FAILURE,\n        payload: err.response\n      });\n    });\n  }, [dispatch]);\n  return {\n    getUserFromPG,\n    setUserFromAuth0,\n    resetUser,\n    isModerator,\n    setToken,\n    getFavorites,\n    addFavorite,\n    removeUser,\n    updateUser,\n    removeFavorite\n  };\n};","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/store/user/useUserActions.tsx"],"names":["useCallback","useDispatch","UserTypes","axiosWithAuth","logger","useUserActions","dispatch","getUserFromPG","token","email","type","FETCH_USER_START","post","then","res","FETCH_USER_SUCCESS","payload","data","catch","err","response","FETCH_USER_FAILURE","getFavorites","authId","FETCH_FAVORITES_START","get","FETCH_FAVORITES_SUCCESS","error","FETCH_FAVORITES_FAILURE","addFavorite","grant_id","auth_id","POST_FAVORITES_START","POST_FAVORITES_SUCCESS","POST_FAVORITES_FAILURE","setUserFromAuth0","user","SET_USER_FROM_AUTH0","resetUser","RESET_USER","isModerator","IS_MODERATOR","setToken","SET_TOKEN","removeFavorite","favoriteId","REMOVE_FAVORITES_START","delete","REMOVE_FAVORITES_SUCCESS","REMOVE_FAVORITES_FAILURE","removeUser","id","REMOVE_USER_START","REMOVE_USER_SUCCESS","REMOVE_USER_FAILURE","updateUser","UPDATE_USER_START","put","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE"],"mappings":"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","sourcesContent":["import { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Auth0User, PGUser, UserTypes } from \"./userTypes\";\nimport { AxiosError, AxiosResponse } from \"axios\";\nimport { axiosWithAuth, axiosWithOutAuth as axios } from \"../utils/axiosConfig\";\nimport { type } from \"os\";\nimport { logger } from \"../utils/logger\";\n\nexport const useUserActions = () => {\n  const dispatch = useDispatch();\n\n  const getUserFromPG = useCallback(\n    (token: string, email: string) => {\n      logger(\"Email inside of Action\", { email });\n      dispatch({ type: UserTypes.FETCH_USER_START });\n      // @ts-ignore\n      axiosWithAuth(token)\n        .post(`/users`, { email })\n        .then((res: AxiosResponse) => {\n          dispatch({ type: UserTypes.FETCH_USER_SUCCESS, payload: res.data });\n        })\n        .catch((err: AxiosError) => {\n          const data =\n            err && err.response && err.response.data ? err.response.data : err;\n          dispatch({ type: UserTypes.FETCH_USER_FAILURE, payload: data });\n        });\n    },\n    [dispatch]\n  );\n  // const getUserByEmail = useCallback(\n  //   (email: string, token: string) => {\n  //     dispatch({ type: UserTypes.FETCH_USER_START });\n  //     // @ts-ignore\n  //     axiosWithAuth(token)\n  //       .get(`/users/${email}`)\n  //       .then((res: AxiosResponse) => {\n  //         dispatch({ type: UserTypes.FETCH_USER_SUCCESS });\n  //       })\n  //       .catch((err: AxiosError) => {\n  //         const data =\n  //           err && err.response && err.response.data ? err.response.data : err;\n  //         dispatch({ type: UserTypes.FETCH_USER_FAILURE, payload: data });\n  //       });\n  //   },\n  //   [dispatch]\n  // );\n\n  const getFavorites = useCallback(\n    (token: string, authId: string) => {\n      dispatch({ type: UserTypes.FETCH_FAVORITES_START });\n      axiosWithAuth(token)\n        .get(`/favorites/myFavorites/${authId}`)\n        .then(res =>\n          dispatch({\n            type: UserTypes.FETCH_FAVORITES_SUCCESS,\n            payload: res.data\n          })\n        )\n        .catch(error =>\n          dispatch({\n            type: UserTypes.FETCH_FAVORITES_FAILURE,\n            payload: error.response.data\n          })\n        );\n    },\n    [dispatch]\n  );\n\n  const addFavorite = useCallback(\n    (token: string, grant_id: number, auth_id: string) => {\n      dispatch({ type: UserTypes.POST_FAVORITES_START });\n      axiosWithAuth(token)\n        .post(\"/users/favorites\", { grant_id, auth_id })\n        .then(res =>\n          dispatch({\n            type: UserTypes.POST_FAVORITES_SUCCESS,\n            payload: res.data\n          })\n        )\n        .catch(error =>\n          dispatch({\n            type: UserTypes.POST_FAVORITES_FAILURE,\n            payload: error.response\n          })\n        );\n    },\n    [dispatch]\n  );\n\n  const setUserFromAuth0 = useCallback(\n    (user: Auth0User) => {\n      dispatch({ type: UserTypes.SET_USER_FROM_AUTH0, payload: user });\n    },\n    [dispatch]\n  );\n\n  const resetUser = useCallback(() => {\n    dispatch({ type: UserTypes.RESET_USER });\n  }, [dispatch]);\n\n  const isModerator = useCallback(() => {\n    dispatch({ type: UserTypes.IS_MODERATOR });\n  }, [dispatch]);\n\n  const setToken = useCallback(\n    (token: string) => {\n      dispatch({ type: UserTypes.SET_TOKEN, payload: token });\n    },\n    [dispatch]\n  );\n\n  const removeFavorite = useCallback(\n    (token: string, favoriteId: number) => {\n      dispatch({ type: UserTypes.REMOVE_FAVORITES_START });\n      axiosWithAuth(token)\n        .delete(`/favorites/myFavorites/${favoriteId}`)\n        .then(() =>\n          dispatch({\n            type: UserTypes.REMOVE_FAVORITES_SUCCESS,\n            payload: favoriteId\n          })\n        )\n        .catch(err =>\n          dispatch({\n            type: UserTypes.REMOVE_FAVORITES_FAILURE,\n            payload: err.response.data\n          })\n        );\n    },\n    [dispatch]\n  );\n\n  const removeUser = useCallback(\n    (token: string, id: number) => {\n      dispatch({ type: UserTypes.REMOVE_USER_START });\n      axiosWithAuth(token)\n        .delete(`/users/${id}`)\n        .then(() => {\n          dispatch({ type: UserTypes.REMOVE_USER_SUCCESS });\n        })\n        .catch(() => {\n          dispatch({ type: UserTypes.REMOVE_USER_FAILURE });\n        });\n    },\n    [dispatch]\n  );\n\n  const updateUser = useCallback(\n    (token: string, id: number, data: PGUser) => {\n      dispatch({ type: UserTypes.UPDATE_USER_START });\n      axiosWithAuth(token)\n        .put(`/users/${id}`, data)\n        .then(res => {\n          dispatch({ type: UserTypes.UPDATE_USER_SUCCESS, payload: res.data });\n        })\n        .catch(err => {\n          dispatch({\n            type: UserTypes.UPDATE_USER_FAILURE,\n            payload: err.response\n          });\n        });\n    },\n    [dispatch]\n  );\n\n  return {\n    getUserFromPG,\n    setUserFromAuth0,\n    resetUser,\n    isModerator,\n    setToken,\n    getFavorites,\n    addFavorite,\n    removeUser,\n    updateUser,\n    removeFavorite\n  };\n};\n\nexport interface UseUserActions {\n  getUserFromPG: (token: string, email: string) => void;\n  setUserFromAuth0: (user: Auth0User) => void;\n  resetUser: () => void;\n  isModerator: () => void;\n  setToken: (token: string) => void;\n  getFavorites: (token: string, authId: string) => void;\n  addFavorite: (token: string, grant_id: number, authId: string) => void;\n  removeFavorite: (token: string, favoriteId: number) => void;\n  removeUser: (token: string, id: number) => void;\n  updateUser: (token: string, id: number, data: PGUser) => void;\n}\n"]},"metadata":{},"sourceType":"module"}