{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = atom;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar Atom = function () {\n  function Atom(state) {\n    _classCallCheck(this, Atom);\n\n    this.state = state;\n    this.watches = {};\n  }\n\n  Atom.prototype.reset = function reset(state) {\n    return this._change(state);\n  };\n\n  Atom.prototype.swap = function swap(f) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return this._change(f.apply(undefined, [this.state].concat(args)));\n  };\n\n  Atom.prototype.deref = function deref() {\n    return this.state;\n  };\n\n  Atom.prototype.addWatch = function addWatch(k, f) {\n    // if (this.watches[key]) {\n    //   console.warn(`adding a watch with an already registered key: ${k}`);\n    // }\n    this.watches[k] = f;\n    return this;\n  };\n\n  Atom.prototype.removeWatch = function removeWatch(k) {\n    // if (!this.watches[key]) {\n    //   console.warn(`removing a watch with an unknown key: ${k}`);\n    // }\n    delete this.watches[k];\n    return this;\n  };\n\n  Atom.prototype._change = function _change(newState) {\n    var state = this.state,\n        watches = this.watches;\n    this.state = newState;\n    Object.keys(watches).forEach(function (k) {\n      return watches[k](k, state, newState);\n    });\n    return this.state;\n  };\n\n  return Atom;\n}();\n\nfunction atom(state) {\n  return new Atom(state);\n}","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/node_modules/auth0-lock/lib/utils/atom.js"],"names":["exports","__esModule","default","atom","_classCallCheck","instance","Constructor","TypeError","Atom","state","watches","prototype","reset","_change","swap","f","_len","arguments","length","args","Array","_key","apply","undefined","concat","deref","addWatch","k","removeWatch","newState","Object","keys","forEach"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBC,IAAlB;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,IAAIC,IAAI,GAAG,YAAY;AACrB,WAASA,IAAT,CAAcC,KAAd,EAAqB;AACnBL,IAAAA,eAAe,CAAC,IAAD,EAAOI,IAAP,CAAf;;AAEA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAe,EAAf;AACD;;AAEDF,EAAAA,IAAI,CAACG,SAAL,CAAeC,KAAf,GAAuB,SAASA,KAAT,CAAeH,KAAf,EAAsB;AAC3C,WAAO,KAAKI,OAAL,CAAaJ,KAAb,CAAP;AACD,GAFD;;AAIAD,EAAAA,IAAI,CAACG,SAAL,CAAeG,IAAf,GAAsB,SAASA,IAAT,CAAcC,CAAd,EAAiB;AACrC,SAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAGC,KAAK,CAACJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAvB,CAAzC,EAAoEK,IAAI,GAAG,CAAhF,EAAmFA,IAAI,GAAGL,IAA1F,EAAgGK,IAAI,EAApG,EAAwG;AACtGF,MAAAA,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBJ,SAAS,CAACI,IAAD,CAA1B;AACD;;AAED,WAAO,KAAKR,OAAL,CAAaE,CAAC,CAACO,KAAF,CAAQC,SAAR,EAAmB,CAAC,KAAKd,KAAN,EAAae,MAAb,CAAoBL,IAApB,CAAnB,CAAb,CAAP;AACD,GAND;;AAQAX,EAAAA,IAAI,CAACG,SAAL,CAAec,KAAf,GAAuB,SAASA,KAAT,GAAiB;AACtC,WAAO,KAAKhB,KAAZ;AACD,GAFD;;AAIAD,EAAAA,IAAI,CAACG,SAAL,CAAee,QAAf,GAA0B,SAASA,QAAT,CAAkBC,CAAlB,EAAqBZ,CAArB,EAAwB;AAChD;AACA;AACA;AACA,SAAKL,OAAL,CAAaiB,CAAb,IAAkBZ,CAAlB;AACA,WAAO,IAAP;AACD,GAND;;AAQAP,EAAAA,IAAI,CAACG,SAAL,CAAeiB,WAAf,GAA6B,SAASA,WAAT,CAAqBD,CAArB,EAAwB;AACnD;AACA;AACA;AACA,WAAO,KAAKjB,OAAL,CAAaiB,CAAb,CAAP;AACA,WAAO,IAAP;AACD,GAND;;AAQAnB,EAAAA,IAAI,CAACG,SAAL,CAAeE,OAAf,GAAyB,SAASA,OAAT,CAAiBgB,QAAjB,EAA2B;AAClD,QAAIpB,KAAK,GAAG,KAAKA,KAAjB;AAAA,QACIC,OAAO,GAAG,KAAKA,OADnB;AAGA,SAAKD,KAAL,GAAaoB,QAAb;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYrB,OAAZ,EAAqBsB,OAArB,CAA6B,UAAUL,CAAV,EAAa;AACxC,aAAOjB,OAAO,CAACiB,CAAD,CAAP,CAAWA,CAAX,EAAclB,KAAd,EAAqBoB,QAArB,CAAP;AACD,KAFD;AAGA,WAAO,KAAKpB,KAAZ;AACD,GATD;;AAWA,SAAOD,IAAP;AACD,CApDU,EAAX;;AAsDA,SAASL,IAAT,CAAcM,KAAd,EAAqB;AACnB,SAAO,IAAID,IAAJ,CAASC,KAAT,CAAP;AACD","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = atom;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Atom = function () {\n  function Atom(state) {\n    _classCallCheck(this, Atom);\n\n    this.state = state;\n    this.watches = {};\n  }\n\n  Atom.prototype.reset = function reset(state) {\n    return this._change(state);\n  };\n\n  Atom.prototype.swap = function swap(f) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return this._change(f.apply(undefined, [this.state].concat(args)));\n  };\n\n  Atom.prototype.deref = function deref() {\n    return this.state;\n  };\n\n  Atom.prototype.addWatch = function addWatch(k, f) {\n    // if (this.watches[key]) {\n    //   console.warn(`adding a watch with an already registered key: ${k}`);\n    // }\n    this.watches[k] = f;\n    return this;\n  };\n\n  Atom.prototype.removeWatch = function removeWatch(k) {\n    // if (!this.watches[key]) {\n    //   console.warn(`removing a watch with an unknown key: ${k}`);\n    // }\n    delete this.watches[k];\n    return this;\n  };\n\n  Atom.prototype._change = function _change(newState) {\n    var state = this.state,\n        watches = this.watches;\n\n    this.state = newState;\n    Object.keys(watches).forEach(function (k) {\n      return watches[k](k, state, newState);\n    });\n    return this.state;\n  };\n\n  return Atom;\n}();\n\nfunction atom(state) {\n  return new Atom(state);\n}\n"]},"metadata":{},"sourceType":"script"}