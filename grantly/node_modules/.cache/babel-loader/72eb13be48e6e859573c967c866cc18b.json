{"ast":null,"code":"export let FilterTypes;\n\n(function (FilterTypes) {\n  FilterTypes[\"FILTER_CHANGE\"] = \"FILTER_CHANGE\";\n  FilterTypes[\"FILTER_RESET\"] = \"FILTER_RESET\";\n  FilterTypes[\"FILTER_GRANT\"] = \"FILTER_GRANT\";\n  FilterTypes[\"PRISTINE_CHECK\"] = \"PRISTINE_CHECK\";\n})(FilterTypes || (FilterTypes = {}));","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/store/filters/filterTypes.ts"],"names":["FilterTypes"],"mappings":"AAEA,WAAYA,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W","sourcesContent":["import {Grant} from \"../grants/grantTypes\";\n\nexport enum FilterTypes {\n    FILTER_CHANGE = 'FILTER_CHANGE',\n    FILTER_RESET = 'FILTER_RESET',\n    FILTER_GRANT = 'FILTER_GRANT',\n    PRISTINE_CHECK = 'PRISTINE_CHECK'\n}\n\nexport interface FormState {\n    key: string\n    checked: boolean\n    [index: string]: any\n}\n\ninterface Amount {\n    values: {\n        min: number | null\n        max: number | null\n    }\n    [index: string]: any\n}\n\nexport type AmountState = FormState & Amount\n\nexport interface FilterFormState {\n    amount: AmountState[]\n    geographic_region: FormState[]\n    domain_areas: FormState[]\n    [key: string]: FormState[] | AmountState[]\n}\n\nexport interface FilterState {\n    pristine: boolean\n    criteria: FilterFormState\n    grants: Grant[]\n}\n\ninterface FilterChangeAction {\n    type: typeof FilterTypes.FILTER_CHANGE\n    payload: FilterFormState\n}\n\ninterface FilterResetAction {\n    type: typeof FilterTypes.FILTER_RESET\n}\n\ninterface FilterGrantAction {\n    type: typeof FilterTypes.FILTER_GRANT,\n    payload: Grant[]\n}\n\ninterface FilterPristineAction {\n    type: typeof FilterTypes.PRISTINE_CHECK\n}\n\nexport type FilterActions = FilterChangeAction | FilterResetAction | FilterGrantAction | FilterPristineAction\n"]},"metadata":{},"sourceType":"module"}