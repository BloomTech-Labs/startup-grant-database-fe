{"ast":null,"code":"import { UserTypes } from \"./userTypes\";\nimport { createReducer } from \"../utils/createReducer\";\nconst initialState = {\n  currentUser: {\n    email: '',\n    email_verified: false,\n    nickname: '',\n    name: '',\n    picture: '',\n    sub: '',\n    updated_at: '' // will need more object fields here\n\n  },\n  pgUser: {\n    id: null,\n    email: '',\n    first_name: null,\n    last_name: null,\n    role: null,\n    phone: null,\n    company: null,\n    company_url: null,\n    about: null\n  },\n  favoriteGrants: [],\n  isModerator: false,\n  isLoading: false,\n  errors: null\n};\n\nconst userFromPGSuccessAction = (state, payload) => ({ ...state,\n  isLoading: false,\n  pgUser: payload\n});\n\nconst userStartReducer = state => ({ ...state,\n  isLoading: true\n});\n\nconst userSetAuth0Reducer = (state, payload) => ({ ...state,\n  isLoading: false,\n  errors: null,\n  currentUser: { ...payload\n  }\n});\n\nconst userFailureReducer = (state, payload) => ({ ...state,\n  isLoading: false,\n  errors: payload\n});\n\nconst userFetchFavoritesSuccess = (state, payload) => ({ ...state,\n  isLoading: false,\n  favoriteGrants: payload\n});\n\nconst userIsModeratorReducer = state => ({ ...state,\n  isModerator: true\n});\n\nconst userSetTokenReducer = (state, payload) => ({ ...state,\n  token: payload\n});\n\nconst userResetUserReducer = () => initialState;\n\nconst userRemoveFavoriteSuccessReducer = (state, payload) => {\n  const newFavorites = state.favoriteGrants.filter(grant => grant.favoriteID !== payload);\n  return { ...state,\n    favoriteGrants: newFavorites\n  };\n};\n\nconst userRemoveReducerStart = state => ({ ...state\n});\n\nconst userRemoveReducerSuccess = state => ({ ...state\n});\n\nconst userRemoveReducerFailure = (state, payload) => ({ ...state,\n  errors: payload\n});\n\nconst userUpdateReducerStart = state => ({ ...state\n});\n\nconst userUpdateReducerSuccess = (state, payload) => ({ ...state,\n  pgUser: payload\n});\n\nconst userUpdateReducerFailure = (state, payload) => ({ ...state,\n  errors: payload\n});\n\nexport const userReducer = createReducer(initialState, {\n  [UserTypes.FETCH_FAVORITES_START]: userStartReducer,\n  [UserTypes.FETCH_FAVORITES_SUCCESS]: userFetchFavoritesSuccess,\n  [UserTypes.FETCH_FAVORITES_FAILURE]: userFailureReducer,\n  [UserTypes.SET_USER_FROM_AUTH0]: userSetAuth0Reducer,\n  [UserTypes.IS_MODERATOR]: userIsModeratorReducer,\n  [UserTypes.SET_TOKEN]: userSetTokenReducer,\n  [UserTypes.RESET_USER]: userResetUserReducer,\n  [UserTypes.POST_FAVORITES_START]: userStartReducer,\n  [UserTypes.POST_FAVORITES_SUCCESS]: userFetchFavoritesSuccess,\n  [UserTypes.POST_FAVORITES_FAILURE]: userFailureReducer,\n  [UserTypes.REMOVE_FAVORITES_FAILURE]: userFailureReducer,\n  [UserTypes.REMOVE_FAVORITES_SUCCESS]: userRemoveFavoriteSuccessReducer,\n  [UserTypes.REMOVE_USER_START]: userRemoveReducerStart,\n  [UserTypes.REMOVE_USER_SUCCESS]: userRemoveReducerSuccess,\n  [UserTypes.REMOVE_USER_FAILURE]: userRemoveReducerFailure,\n  [UserTypes.UPDATE_USER_START]: userUpdateReducerStart,\n  [UserTypes.UPDATE_USER_SUCCESS]: userUpdateReducerSuccess,\n  [UserTypes.UPDATE_USER_FAILURE]: userUpdateReducerFailure,\n  [UserTypes.FETCH_USER_START]: userStartReducer,\n  [UserTypes.FETCH_USER_SUCCESS]: userFromPGSuccessAction,\n  [UserTypes.FETCH_USER_FAILURE]: userFailureReducer\n});","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/store/user/userReducer.ts"],"names":["UserTypes","createReducer","initialState","currentUser","email","email_verified","nickname","name","picture","sub","updated_at","pgUser","id","first_name","last_name","role","phone","company","company_url","about","favoriteGrants","isModerator","isLoading","errors","userFromPGSuccessAction","state","payload","userStartReducer","userSetAuth0Reducer","userFailureReducer","userFetchFavoritesSuccess","userIsModeratorReducer","userSetTokenReducer","token","userResetUserReducer","userRemoveFavoriteSuccessReducer","newFavorites","filter","grant","favoriteID","userRemoveReducerStart","userRemoveReducerSuccess","userRemoveReducerFailure","userUpdateReducerStart","userUpdateReducerSuccess","userUpdateReducerFailure","userReducer","FETCH_FAVORITES_START","FETCH_FAVORITES_SUCCESS","FETCH_FAVORITES_FAILURE","SET_USER_FROM_AUTH0","IS_MODERATOR","SET_TOKEN","RESET_USER","POST_FAVORITES_START","POST_FAVORITES_SUCCESS","POST_FAVORITES_FAILURE","REMOVE_FAVORITES_FAILURE","REMOVE_FAVORITES_SUCCESS","REMOVE_USER_START","REMOVE_USER_SUCCESS","REMOVE_USER_FAILURE","UPDATE_USER_START","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE","FETCH_USER_START","FETCH_USER_SUCCESS","FETCH_USER_FAILURE"],"mappings":"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","sourcesContent":["import {UserActions, UserState, UserTypes} from \"./userTypes\";\nimport {createReducer} from \"../utils/createReducer\";\n\nconst initialState: UserState = {\n    currentUser: {\n        email: '',\n        email_verified: false,\n        nickname: '',\n        name: '',\n        picture: '',\n        sub: '',\n        updated_at: ''\n        // will need more object fields here\n    },\n    pgUser: {\n        id: null,\n        email: '',\n        first_name: null,\n        last_name: null,\n        role: null,\n        phone: null,\n        company: null,\n        company_url: null,\n        about: null\n    },\n    favoriteGrants: [],\n    isModerator: false,\n    isLoading: false,\n    errors: null,\n};\n\ntype FunctionReducer<S extends UserState = UserState, P = any> = (state:UserState, payload?: any) => UserState;\n\nconst userFromPGSuccessAction: FunctionReducer = (state: UserState, payload) => ({...state, isLoading: false, pgUser: payload})\nconst userStartReducer: FunctionReducer = (state) => ({...state, isLoading: true});\nconst userSetAuth0Reducer: FunctionReducer = (state, payload) => ({...state, isLoading: false, errors: null, currentUser: {...payload}});\nconst userFailureReducer: FunctionReducer = (state, payload) => ({...state, isLoading: false, errors: payload});\nconst userFetchFavoritesSuccess: FunctionReducer = (state, payload) => ({...state, isLoading: false, favoriteGrants: payload});\nconst userIsModeratorReducer: FunctionReducer = state => ({...state, isModerator: true});\nconst userSetTokenReducer: FunctionReducer = (state, payload) => ({...state, token: payload});\nconst userResetUserReducer: FunctionReducer = () => initialState;\nconst userRemoveFavoriteSuccessReducer: FunctionReducer = (state, payload) => {\n    const newFavorites = state.favoriteGrants.filter(grant => grant.favoriteID !== payload);\n    return {...state, favoriteGrants: newFavorites}\n\n};\nconst userRemoveReducerStart: FunctionReducer = (state) => ({...state});\nconst userRemoveReducerSuccess: FunctionReducer = (state) => ({...state});\nconst userRemoveReducerFailure: FunctionReducer = (state, payload) => ({...state, errors: payload});\n\nconst userUpdateReducerStart: FunctionReducer = (state) => ({...state});\nconst userUpdateReducerSuccess: FunctionReducer = (state, payload) => ({...state, pgUser: payload});\nconst userUpdateReducerFailure: FunctionReducer = (state, payload) => ({...state, errors: payload});\n\n\n\n\nexport const userReducer = createReducer(initialState, {\n    [UserTypes.FETCH_FAVORITES_START]: userStartReducer,\n    [UserTypes.FETCH_FAVORITES_SUCCESS]: userFetchFavoritesSuccess,\n    [UserTypes.FETCH_FAVORITES_FAILURE]: userFailureReducer,\n    [UserTypes.SET_USER_FROM_AUTH0]: userSetAuth0Reducer,\n    [UserTypes.IS_MODERATOR]: userIsModeratorReducer,\n    [UserTypes.SET_TOKEN]: userSetTokenReducer,\n    [UserTypes.RESET_USER]: userResetUserReducer,\n    [UserTypes.POST_FAVORITES_START]: userStartReducer,\n    [UserTypes.POST_FAVORITES_SUCCESS]: userFetchFavoritesSuccess,\n    [UserTypes.POST_FAVORITES_FAILURE]: userFailureReducer,\n    [UserTypes.REMOVE_FAVORITES_FAILURE]: userFailureReducer,\n    [UserTypes.REMOVE_FAVORITES_SUCCESS]: userRemoveFavoriteSuccessReducer,\n    [UserTypes.REMOVE_USER_START]: userRemoveReducerStart,\n    [UserTypes.REMOVE_USER_SUCCESS]: userRemoveReducerSuccess,\n    [UserTypes.REMOVE_USER_FAILURE]: userRemoveReducerFailure,\n    [UserTypes.UPDATE_USER_START]: userUpdateReducerStart,\n    [UserTypes.UPDATE_USER_SUCCESS]: userUpdateReducerSuccess,\n    [UserTypes.UPDATE_USER_FAILURE]: userUpdateReducerFailure,\n    [UserTypes.FETCH_USER_START]: userStartReducer,\n    [UserTypes.FETCH_USER_SUCCESS]: userFromPGSuccessAction,\n    [UserTypes.FETCH_USER_FAILURE]: userFailureReducer\n});\n\n"]},"metadata":{},"sourceType":"module"}