{"ast":null,"code":"import { UserTypes } from \"./userTypes\";\nimport { createReducer } from \"../utils/createReducer\";\nconst initialState = {\n  currentUser: {\n    email: '',\n    email_verified: false,\n    nickname: '',\n    name: '',\n    picture: '',\n    sub: '',\n    updated_at: '' // will need more object fields here\n\n  },\n  favoriteGrants: [],\n  isModerator: false,\n  isLoading: false,\n  errors: null\n};\n\nconst userStartReducer = state => ({ ...state,\n  isLoading: true\n});\n\nconst userSetAuth0Reducer = (state, payload) => ({ ...state,\n  isLoading: false,\n  errors: null,\n  currentUser: { ...payload\n  }\n});\n\nconst userFailureReducer = (state, payload) => ({ ...state,\n  isLoading: false,\n  errors: payload\n});\n\nconst userFetchFavoritesSuccess = (state, payload) => ({ ...state,\n  isLoading: false,\n  favoriteGrants: payload\n});\n\nconst userIsModeratorReducer = state => ({ ...state,\n  isModerator: true\n});\n\nconst userSetTokenReducer = (state, payload) => ({ ...state,\n  token: payload\n});\n\nconst userResetUserReducer = () => initialState;\n\nconst userRemoveFavoriteSuccessReducer = (state, payload) => {\n  const newFavorites = state.favoriteGrants.filter(grant => grant.favoriteID !== payload);\n  return { ...state,\n    favoriteGrants: newFavorites\n  };\n};\n\nconst userRemoveReducerStart = state => ({ ...state\n});\n\nconst userRemoveReducerSuccess = state => ({ ...state\n});\n\nconst userRemoveReducerFailure = (state, payload) => ({ ...state,\n  errors: payload\n});\n\nconst userUpdateReducerStart = state => ({ ...state\n});\n\nconst userUpdateReducerSuccess = (state, payload) => ({ ...state,\n  currentUser: { ...payload\n  }\n});\n\nconst userUpdateReducerFailure = (state, payload) => ({ ...state,\n  errors: payload\n});\n\nexport const userReducer = createReducer(initialState, {\n  [UserTypes.FETCH_FAVORITES_START]: userStartReducer,\n  [UserTypes.FETCH_FAVORITES_SUCCESS]: userFetchFavoritesSuccess,\n  [UserTypes.FETCH_FAVORITES_FAILURE]: userFailureReducer,\n  [UserTypes.SET_USER_FROM_AUTH0]: userSetAuth0Reducer,\n  [UserTypes.IS_MODERATOR]: userIsModeratorReducer,\n  [UserTypes.SET_TOKEN]: userSetTokenReducer,\n  [UserTypes.RESET_USER]: userResetUserReducer,\n  [UserTypes.POST_FAVORITES_START]: userStartReducer,\n  [UserTypes.POST_FAVORITES_SUCCESS]: userFetchFavoritesSuccess,\n  [UserTypes.POST_FAVORITES_FAILURE]: userFailureReducer,\n  [UserTypes.REMOVE_FAVORITES_FAILURE]: userFailureReducer,\n  [UserTypes.REMOVE_FAVORITES_SUCCESS]: userRemoveFavoriteSuccessReducer,\n  [UserTypes.REMOVE_USER_START]: userRemoveReducerStart,\n  [UserTypes.REMOVE_USER_SUCCESS]: userRemoveReducerSuccess,\n  [UserTypes.REMOVE_USER_FAILURE]: userRemoveReducerFailure,\n  [UserTypes.UPDATE_USER_START]: userUpdateReducerStart,\n  [UserTypes.UPDATE_USER_SUCCESS]: userUpdateReducerSuccess,\n  [UserTypes.UPDATE_USER_FAILURE]: userUpdateReducerFailure\n});","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/store/user/userReducer.ts"],"names":["UserTypes","createReducer","initialState","currentUser","email","email_verified","nickname","name","picture","sub","updated_at","favoriteGrants","isModerator","isLoading","errors","userStartReducer","state","userSetAuth0Reducer","payload","userFailureReducer","userFetchFavoritesSuccess","userIsModeratorReducer","userSetTokenReducer","token","userResetUserReducer","userRemoveFavoriteSuccessReducer","newFavorites","filter","grant","favoriteID","userRemoveReducerStart","userRemoveReducerSuccess","userRemoveReducerFailure","userUpdateReducerStart","userUpdateReducerSuccess","userUpdateReducerFailure","userReducer","FETCH_FAVORITES_START","FETCH_FAVORITES_SUCCESS","FETCH_FAVORITES_FAILURE","SET_USER_FROM_AUTH0","IS_MODERATOR","SET_TOKEN","RESET_USER","POST_FAVORITES_START","POST_FAVORITES_SUCCESS","POST_FAVORITES_FAILURE","REMOVE_FAVORITES_FAILURE","REMOVE_FAVORITES_SUCCESS","REMOVE_USER_START","REMOVE_USER_SUCCESS","REMOVE_USER_FAILURE","UPDATE_USER_START","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE"],"mappings":"AAAA,SAAgCA,SAAhC,QAAgD,aAAhD;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AAEA,MAAMC,YAAuB,GAAG;AAC5BC,EAAAA,WAAW,EAAE;AACTC,IAAAA,KAAK,EAAE,EADE;AAETC,IAAAA,cAAc,EAAE,KAFP;AAGTC,IAAAA,QAAQ,EAAE,EAHD;AAITC,IAAAA,IAAI,EAAE,EAJG;AAKTC,IAAAA,OAAO,EAAE,EALA;AAMTC,IAAAA,GAAG,EAAE,EANI;AAOTC,IAAAA,UAAU,EAAE,EAPH,CAQT;;AARS,GADe;AAW5BC,EAAAA,cAAc,EAAE,EAXY;AAY5BC,EAAAA,WAAW,EAAE,KAZe;AAa5BC,EAAAA,SAAS,EAAE,KAbiB;AAc5BC,EAAAA,MAAM,EAAE;AAdoB,CAAhC;;AAmBA,MAAMC,gBAAiC,GAAIC,KAAD,KAAY,EAAC,GAAGA,KAAJ;AAAWH,EAAAA,SAAS,EAAE;AAAtB,CAAZ,CAA1C;;AACA,MAAMI,mBAAoC,GAAG,CAACD,KAAD,EAAQE,OAAR,MAAqB,EAAC,GAAGF,KAAJ;AAAWH,EAAAA,SAAS,EAAE,KAAtB;AAA6BC,EAAAA,MAAM,EAAE,IAArC;AAA2CX,EAAAA,WAAW,EAAE,EAAC,GAAGe;AAAJ;AAAxD,CAArB,CAA7C;;AACA,MAAMC,kBAAmC,GAAG,CAACH,KAAD,EAAQE,OAAR,MAAqB,EAAC,GAAGF,KAAJ;AAAWH,EAAAA,SAAS,EAAE,KAAtB;AAA6BC,EAAAA,MAAM,EAAEI;AAArC,CAArB,CAA5C;;AACA,MAAME,yBAA0C,GAAG,CAACJ,KAAD,EAAQE,OAAR,MAAqB,EAAC,GAAGF,KAAJ;AAAWH,EAAAA,SAAS,EAAE,KAAtB;AAA6BF,EAAAA,cAAc,EAAEO;AAA7C,CAArB,CAAnD;;AACA,MAAMG,sBAAuC,GAAGL,KAAK,KAAK,EAAC,GAAGA,KAAJ;AAAWJ,EAAAA,WAAW,EAAE;AAAxB,CAAL,CAArD;;AACA,MAAMU,mBAAoC,GAAG,CAACN,KAAD,EAAQE,OAAR,MAAqB,EAAC,GAAGF,KAAJ;AAAWO,EAAAA,KAAK,EAAEL;AAAlB,CAArB,CAA7C;;AACA,MAAMM,oBAAqC,GAAG,MAAMtB,YAApD;;AACA,MAAMuB,gCAAiD,GAAG,CAACT,KAAD,EAAQE,OAAR,KAAoB;AAC1E,QAAMQ,YAAY,GAAGV,KAAK,CAACL,cAAN,CAAqBgB,MAArB,CAA4BC,KAAK,IAAIA,KAAK,CAACC,UAAN,KAAqBX,OAA1D,CAArB;AACA,SAAO,EAAC,GAAGF,KAAJ;AAAWL,IAAAA,cAAc,EAAEe;AAA3B,GAAP;AAEH,CAJD;;AAKA,MAAMI,sBAAuC,GAAId,KAAD,KAAY,EAAC,GAAGA;AAAJ,CAAZ,CAAhD;;AACA,MAAMe,wBAAyC,GAAIf,KAAD,KAAY,EAAC,GAAGA;AAAJ,CAAZ,CAAlD;;AACA,MAAMgB,wBAAyC,GAAG,CAAChB,KAAD,EAAQE,OAAR,MAAqB,EAAC,GAAGF,KAAJ;AAAWF,EAAAA,MAAM,EAAEI;AAAnB,CAArB,CAAlD;;AAEA,MAAMe,sBAAuC,GAAIjB,KAAD,KAAY,EAAC,GAAGA;AAAJ,CAAZ,CAAhD;;AACA,MAAMkB,wBAAyC,GAAG,CAAClB,KAAD,EAAQE,OAAR,MAAqB,EAAC,GAAGF,KAAJ;AAAWb,EAAAA,WAAW,EAAE,EAAC,GAAGe;AAAJ;AAAxB,CAArB,CAAlD;;AACA,MAAMiB,wBAAyC,GAAG,CAACnB,KAAD,EAAQE,OAAR,MAAqB,EAAC,GAAGF,KAAJ;AAAWF,EAAAA,MAAM,EAAEI;AAAnB,CAArB,CAAlD;;AAKA,OAAO,MAAMkB,WAAW,GAAGnC,aAAa,CAACC,YAAD,EAAe;AACnD,GAACF,SAAS,CAACqC,qBAAX,GAAmCtB,gBADgB;AAEnD,GAACf,SAAS,CAACsC,uBAAX,GAAqClB,yBAFc;AAGnD,GAACpB,SAAS,CAACuC,uBAAX,GAAqCpB,kBAHc;AAInD,GAACnB,SAAS,CAACwC,mBAAX,GAAiCvB,mBAJkB;AAKnD,GAACjB,SAAS,CAACyC,YAAX,GAA0BpB,sBALyB;AAMnD,GAACrB,SAAS,CAAC0C,SAAX,GAAuBpB,mBAN4B;AAOnD,GAACtB,SAAS,CAAC2C,UAAX,GAAwBnB,oBAP2B;AAQnD,GAACxB,SAAS,CAAC4C,oBAAX,GAAkC7B,gBARiB;AASnD,GAACf,SAAS,CAAC6C,sBAAX,GAAoCzB,yBATe;AAUnD,GAACpB,SAAS,CAAC8C,sBAAX,GAAoC3B,kBAVe;AAWnD,GAACnB,SAAS,CAAC+C,wBAAX,GAAsC5B,kBAXa;AAYnD,GAACnB,SAAS,CAACgD,wBAAX,GAAsCvB,gCAZa;AAanD,GAACzB,SAAS,CAACiD,iBAAX,GAA+BnB,sBAboB;AAcnD,GAAC9B,SAAS,CAACkD,mBAAX,GAAiCnB,wBAdkB;AAenD,GAAC/B,SAAS,CAACmD,mBAAX,GAAiCnB,wBAfkB;AAgBnD,GAAChC,SAAS,CAACoD,iBAAX,GAA+BnB,sBAhBoB;AAiBnD,GAACjC,SAAS,CAACqD,mBAAX,GAAiCnB,wBAjBkB;AAkBnD,GAAClC,SAAS,CAACsD,mBAAX,GAAiCnB;AAlBkB,CAAf,CAAjC","sourcesContent":["import {UserActions, UserState, UserTypes} from \"./userTypes\";\nimport {createReducer} from \"../utils/createReducer\";\n\nconst initialState: UserState = {\n    currentUser: {\n        email: '',\n        email_verified: false,\n        nickname: '',\n        name: '',\n        picture: '',\n        sub: '',\n        updated_at: ''\n        // will need more object fields here\n    },\n    favoriteGrants: [],\n    isModerator: false,\n    isLoading: false,\n    errors: null,\n};\n\ntype FunctionReducer<S extends UserState = UserState, P = any> = (state:UserState, payload?: any) => UserState;\n\nconst userStartReducer: FunctionReducer = (state) => ({...state, isLoading: true});\nconst userSetAuth0Reducer: FunctionReducer = (state, payload) => ({...state, isLoading: false, errors: null, currentUser: {...payload}});\nconst userFailureReducer: FunctionReducer = (state, payload) => ({...state, isLoading: false, errors: payload});\nconst userFetchFavoritesSuccess: FunctionReducer = (state, payload) => ({...state, isLoading: false, favoriteGrants: payload});\nconst userIsModeratorReducer: FunctionReducer = state => ({...state, isModerator: true});\nconst userSetTokenReducer: FunctionReducer = (state, payload) => ({...state, token: payload});\nconst userResetUserReducer: FunctionReducer = () => initialState;\nconst userRemoveFavoriteSuccessReducer: FunctionReducer = (state, payload) => {\n    const newFavorites = state.favoriteGrants.filter(grant => grant.favoriteID !== payload);\n    return {...state, favoriteGrants: newFavorites}\n\n};\nconst userRemoveReducerStart: FunctionReducer = (state) => ({...state});\nconst userRemoveReducerSuccess: FunctionReducer = (state) => ({...state});\nconst userRemoveReducerFailure: FunctionReducer = (state, payload) => ({...state, errors: payload});\n\nconst userUpdateReducerStart: FunctionReducer = (state) => ({...state});\nconst userUpdateReducerSuccess: FunctionReducer = (state, payload) => ({...state, currentUser: {...payload}});\nconst userUpdateReducerFailure: FunctionReducer = (state, payload) => ({...state, errors: payload});\n\n\n\n\nexport const userReducer = createReducer(initialState, {\n    [UserTypes.FETCH_FAVORITES_START]: userStartReducer,\n    [UserTypes.FETCH_FAVORITES_SUCCESS]: userFetchFavoritesSuccess,\n    [UserTypes.FETCH_FAVORITES_FAILURE]: userFailureReducer,\n    [UserTypes.SET_USER_FROM_AUTH0]: userSetAuth0Reducer,\n    [UserTypes.IS_MODERATOR]: userIsModeratorReducer,\n    [UserTypes.SET_TOKEN]: userSetTokenReducer,\n    [UserTypes.RESET_USER]: userResetUserReducer,\n    [UserTypes.POST_FAVORITES_START]: userStartReducer,\n    [UserTypes.POST_FAVORITES_SUCCESS]: userFetchFavoritesSuccess,\n    [UserTypes.POST_FAVORITES_FAILURE]: userFailureReducer,\n    [UserTypes.REMOVE_FAVORITES_FAILURE]: userFailureReducer,\n    [UserTypes.REMOVE_FAVORITES_SUCCESS]: userRemoveFavoriteSuccessReducer,\n    [UserTypes.REMOVE_USER_START]: userRemoveReducerStart,\n    [UserTypes.REMOVE_USER_SUCCESS]: userRemoveReducerSuccess,\n    [UserTypes.REMOVE_USER_FAILURE]: userRemoveReducerFailure,\n    [UserTypes.UPDATE_USER_START]: userUpdateReducerStart,\n    [UserTypes.UPDATE_USER_SUCCESS]: userUpdateReducerSuccess,\n    [UserTypes.UPDATE_USER_FAILURE]: userUpdateReducerFailure,\n});\n\n"]},"metadata":{},"sourceType":"module"}