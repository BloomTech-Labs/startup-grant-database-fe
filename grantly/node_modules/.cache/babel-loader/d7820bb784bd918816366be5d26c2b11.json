{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/auth0/Auth0Wrapper.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\nimport Auth0Lock from \"auth0-lock\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () => window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nconst clientId = `${process.env.REACT_APP_CLIENT_ID}`;\nconst domain = `${process.env.REACT_APP_CLIENT_DOMAIN}`;\nconst options = {\n  languageDictionary: {\n    emailInputPlaceholder: \"Enter your email\",\n    passwordInputPlaceholder: \"Enter your password\",\n    title: \"Welcome\"\n  },\n  popupOptions: {\n    width: 300,\n    height: 400,\n    left: 200,\n    top: 300\n  },\n  theme: {\n    primaryColor: \"#3DB8B3\",\n    authButtons: {\n      testConnection: {\n        displayName: \"Test Conn\",\n        primaryColor: \"#3DB8B3\",\n        foregroundColor: \"#000000\",\n        icon: \"http://example.com/icon.png\"\n      },\n      testConnection2: {\n        primaryColor: \"#000000\",\n        foregroundColor: \"#ffffff\"\n      }\n    }\n  },\n  additionalSignUpFields: [{\n    name: \"First_name\",\n    placeholder: \"Enter your first name\"\n  }, {\n    name: \"Last_name\",\n    placeholder: \"Enter your last name\"\n  }]\n};\nexport const lock = new Auth0Lock(clientId, domain, options);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\")) {\n        const {\n          appState\n        } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n\n    initAuth0();\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n\n  lock.on(\"authenticated\", function (authResult) {\n    lock.getUserInfo(authResult.accessToken, function (error, profile) {\n      if (error) {\n        // Handle error\n        return;\n      }\n\n      localStorage.setItem(\"accessToken\", authResult.accessToken);\n      localStorage.setItem(\"profile\", JSON.stringify(profile));\n      setIsAuthenticated(true);\n      setUser(JSON.stringify(profile));\n      return \"Success\"; // Update DOM\n    });\n  });\n  return React.createElement(Auth0Context.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      popupOpen,\n      loginWithPopup,\n      handleRedirectCallback,\n      getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n      loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n      getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n      getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n      logout: (...p) => auth0Client.logout(...p)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/auth0/Auth0Wrapper.jsx"],"names":["React","useState","useEffect","useContext","createAuth0Client","Auth0Lock","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","createContext","useAuth0","clientId","process","env","REACT_APP_CLIENT_ID","domain","REACT_APP_CLIENT_DOMAIN","options","languageDictionary","emailInputPlaceholder","passwordInputPlaceholder","popupOptions","width","height","left","top","theme","primaryColor","authButtons","testConnection","displayName","foregroundColor","icon","testConnection2","additionalSignUpFields","name","placeholder","lock","Auth0Provider","children","onRedirectCallback","initOptions","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","initAuth0","auth0FromHook","search","includes","appState","handleRedirectCallback","getUser","loginWithPopup","params","error","console","on","authResult","getUserInfo","accessToken","profile","localStorage","setItem","JSON","stringify","getIdTokenClaims","p","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\nimport Auth0Lock from \"auth0-lock\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\n\nconst clientId = `${process.env.REACT_APP_CLIENT_ID}`;\nconst domain = `${process.env.REACT_APP_CLIENT_DOMAIN}`;\nconst options = {\n  languageDictionary: {\n    emailInputPlaceholder: \"Enter your email\",\n    passwordInputPlaceholder: \"Enter your password\",\n\n    title: \"Welcome\"\n  },\n  popupOptions: { width: 300, height: 400, left: 200, top: 300 },\n\n  theme: {\n    primaryColor: \"#3DB8B3\",\n\n    authButtons: {\n      testConnection: {\n        displayName: \"Test Conn\",\n        primaryColor: \"#3DB8B3\",\n        foregroundColor: \"#000000\",\n        icon: \"http://example.com/icon.png\"\n      },\n      testConnection2: {\n        primaryColor: \"#000000\",\n        foregroundColor: \"#ffffff\"\n      }\n    }\n  },\n  additionalSignUpFields: [\n    {\n      name: \"First_name\",\n      placeholder: \"Enter your first name\"\n    },\n    {\n      name: \"Last_name\",\n      placeholder: \"Enter your last name\"\n    }\n  ]\n};\nexport const lock = new Auth0Lock(clientId, domain, options);\n\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n      setLoading(false);\n    };\n    initAuth0();\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n\n  lock.on(\"authenticated\", function(authResult) {\n    lock.getUserInfo(authResult.accessToken, function(error, profile) {\n      if (error) {\n        // Handle error\n        return;\n      }\n\n      localStorage.setItem(\"accessToken\", authResult.accessToken);\n      localStorage.setItem(\"profile\", JSON.stringify(profile));\n      setIsAuthenticated(true);\n      setUser(JSON.stringify(profile));\n\n      return \"Success\";\n      // Update DOM\n    });\n  });\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}