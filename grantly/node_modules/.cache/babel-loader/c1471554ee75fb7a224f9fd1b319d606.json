{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/filter/FilterGroup.tsx\";\nimport React from 'react';\nimport { FormControl, FormLabel } from \"@material-ui/core\";\nimport FilterItem from \"./FilterItem\";\n\nfunction FilterGroup(props) {\n  const {\n    labelText,\n    data,\n    handleChange,\n    classes,\n    title,\n    isModerator\n  } = props;\n  const display = labelText !== 'admin_filters' || labelText === 'admin_filters' && isModerator;\n  return React.createElement(React.Fragment, null, display && React.createElement(FormControl, {\n    className: classes.set,\n    component: \"fieldset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    className: classes.label,\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, title), data.map(item => React.createElement(FilterItem, {\n    key: item.key,\n    classes: classes,\n    data: item,\n    labelText: labelText,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))));\n}\n\nexport default FilterGroup;","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/filter/FilterGroup.tsx"],"names":["React","FormControl","FormLabel","FilterItem","FilterGroup","props","labelText","data","handleChange","classes","title","isModerator","display","set","label","map","item","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,mBAArC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAWA,SAASC,WAAT,CAAqBC,KAArB,EAAoC;AAChC,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,YAAlB;AAAgCC,IAAAA,OAAhC;AAAyCC,IAAAA,KAAzC;AAAgDC,IAAAA;AAAhD,MAA+DN,KAArE;AACA,QAAMO,OAAO,GAAGN,SAAS,KAAK,eAAd,IAAiCA,SAAS,KAAK,eAAd,IAAiCK,WAAlF;AACA,SACI,0CACKC,OAAO,IAAK,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEH,OAAO,CAACI,GAAhC;AAAqC,IAAA,SAAS,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACT,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEJ,OAAO,CAACK,KAA9B;AAAqC,IAAA,SAAS,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KADL,CADS,EAIRH,IAAI,CAACQ,GAAL,CAAUC,IAAD,IAAwB,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAtB;AAA2B,IAAA,OAAO,EAAER,OAApC;AAA6C,IAAA,IAAI,EAAEO,IAAnD;AACY,IAAA,SAAS,EAAEV,SADvB;AAEY,IAAA,YAAY,EAAEE,YAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjC,CAJQ,CADjB,CADJ;AAYH;;AAED,eAAeJ,WAAf","sourcesContent":["import React from 'react';\nimport {FormControl, FormLabel} from \"@material-ui/core\";\nimport {KeyValuePair} from \"../../store/filters/filterTypes\";\nimport FilterItem from \"./FilterItem\";\n\ninterface IProps {\n    handleChange: (data: KeyValuePair, key: string) => void;\n    data: any; // Todo Figure out how to type this Prop\n    labelText: string;\n    title: string;\n    classes: any;\n    isModerator: boolean\n}\n\nfunction FilterGroup(props: IProps) {\n    const {labelText, data, handleChange, classes, title, isModerator} = props;\n    const display = labelText !== 'admin_filters' || labelText === 'admin_filters' && isModerator;\n    return (\n        <>\n            {display && (<FormControl className={classes.set} component=\"fieldset\">\n                <FormLabel className={classes.label} component=\"legend\">\n                    {title}\n                </FormLabel>\n                {data.map((item: KeyValuePair) => <FilterItem key={item.key} classes={classes} data={item}\n                                                              labelText={labelText}\n                                                              handleChange={handleChange}/>)}\n            </FormControl>)}\n        </>\n    )\n}\n\nexport default FilterGroup;\n"]},"metadata":{},"sourceType":"module"}