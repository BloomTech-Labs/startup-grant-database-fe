{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/filter/NewFilters.jsx\";\nimport React from 'react';\nimport { Button, Card, FormGroup, Typography } from \"@material-ui/core\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport FilterGroup from \"./FilterGroup\";\nimport { useSelector } from \"react-redux\";\n\nconst NewFilters = ({\n  landing,\n  mobile,\n  grants,\n  classes,\n  setFilters,\n  filters\n}) => {\n  const {\n    isModerator\n  } = useSelector(state => state.user);\n\n  function handleChange(data, key) {\n    const tempArray = returnKeyValuePair(key);\n    const updatedArray = tempArray.map(item => {\n      if (item.key === data.key) {\n        return { ...item,\n          checked: !item.checked\n        };\n      } else {\n        return item;\n      }\n    });\n    setFilters({ ...filters,\n      [key]: updatedArray\n    });\n  }\n\n  function returnKeyValuePair(key) {\n    // Todo: KeyValuePairArray is not a Array as expected, need to research more into this.\n    // Todo: Figure out how to return the object in TypeScript without a If/Then/Else or a Switch Case\n    // Todo: return filters[key]; <- Key is not indexable on Type KeyValuePairArray\n    switch (key) {\n      case 'amount':\n        return filters.amount;\n\n      case 'geographic_region':\n        return filters.geographic_region;\n\n      case 'domain_areas':\n        return filters.domain_areas;\n\n      default:\n        return filters.admin_filters;\n    }\n  }\n\n  const title = ['Grant Amount', 'Region', 'Focus Areas', 'View Grant By']; // Todo Add Admin Check for Rending Admin Views\n\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, landing ? \"Which grants would you like to find?\" : \"Filter grants by:\"), React.createElement(FormGroup, {\n    className: classes.filterCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, Object.keys(filters).map((group, id) => React.createElement(FilterGroup, {\n    classes: classes,\n    key: id,\n    handleChange: handleChange,\n    data: returnKeyValuePair(group),\n    title: title[id],\n    labelText: group,\n    isModerator: isModerator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    component: RouterLink,\n    to: \"/grants\",\n    className: classes.landingButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Find Grants\"));\n};\n\nexport default NewFilters;","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/filter/NewFilters.jsx"],"names":["React","Button","Card","FormGroup","Typography","Link","RouterLink","FilterGroup","useSelector","NewFilters","landing","mobile","grants","classes","setFilters","filters","isModerator","state","user","handleChange","data","key","tempArray","returnKeyValuePair","updatedArray","map","item","checked","amount","geographic_region","domain_areas","admin_filters","title","card","filterCard","Object","keys","group","id","landingButton"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, Card, FormGroup, Typography} from \"@material-ui/core\";\nimport {Link as RouterLink} from 'react-router-dom';\nimport FilterGroup from \"./FilterGroup\";\nimport {useSelector} from \"react-redux\";\n\nconst NewFilters = ({landing, mobile, grants, classes, setFilters, filters}) => {\n    const {isModerator} = useSelector(state => state.user);\n\n    function handleChange(data, key) {\n        const tempArray = returnKeyValuePair(key);\n        const updatedArray = tempArray.map(item => {\n            if (item.key === data.key) {\n                return {...item, checked: !item.checked}\n            } else {\n                return item;\n            }\n        });\n        setFilters({...filters, [key]: updatedArray})\n    }\n\n    function returnKeyValuePair(key) {\n        // Todo: KeyValuePairArray is not a Array as expected, need to research more into this.\n        // Todo: Figure out how to return the object in TypeScript without a If/Then/Else or a Switch Case\n        // Todo: return filters[key]; <- Key is not indexable on Type KeyValuePairArray\n        switch (key) {\n            case 'amount':\n                return filters.amount;\n            case 'geographic_region':\n                return filters.geographic_region;\n            case 'domain_areas':\n                return filters.domain_areas;\n            default:\n                return filters.admin_filters\n        }\n    }\n\n    const title = ['Grant Amount', 'Region', 'Focus Areas', 'View Grant By'];\n    // Todo Add Admin Check for Rending Admin Views\n    return (\n        <Card className={classes.card}>\n            <Typography className={classes.title} variant=\"h5\" component=\"h2\">\n                {landing ? \"Which grants would you like to find?\" : \"Filter grants by:\"}\n            </Typography>\n            <FormGroup className={classes.filterCard}>\n                {Object.keys(filters).map((group, id) => <FilterGroup classes={classes} key={id}\n                                                                      handleChange={handleChange}\n                                                                      data={returnKeyValuePair(group)} title={title[id]}\n                                                                      labelText={group} isModerator={isModerator} />)}\n            </FormGroup>\n            <Button variant=\"contained\" color=\"primary\" size=\"large\" component={RouterLink} to=\"/grants\"\n                    className={classes.landingButton}>\n                Find Grants\n            </Button>\n        </Card>\n    )\n};\n\nexport default NewFilters;\n"]},"metadata":{},"sourceType":"module"}