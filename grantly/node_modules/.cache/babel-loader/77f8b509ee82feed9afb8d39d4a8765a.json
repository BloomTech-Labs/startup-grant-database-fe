{"ast":null,"code":"import { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { GrantTypes } from \"./grantTypes\";\nimport { FilterTypes } from \"../filters/filterTypes\";\nimport { axiosWithAuth, axiosWithOutAuth as axios } from \"../utils/axiosConfig\";\nexport const useGrantActions = () => {\n  const dispatch = useDispatch();\n  const fetchGrants = useCallback(() => {\n    dispatch({\n      type: GrantTypes.FETCH_GRANTS_START\n    }); // @ts-ignore\n\n    axios().get(`/grants`).then(res => {\n      dispatch({\n        type: GrantTypes.FETCH_GRANTS_SUCCESS,\n        payload: res.data\n      });\n      dispatch({\n        type: FilterTypes.FILTER_GRANT,\n        payload: res.data\n      });\n    }).catch(err => {\n      const data = err && err.response && err.response.data ? err.response.data : err;\n      dispatch({\n        type: GrantTypes.FETCH_GRANTS_FAILURE,\n        payload: data\n      });\n    });\n  }, [dispatch]);\n  const selectGrant = useCallback(grant => {\n    dispatch({\n      type: GrantTypes.SELECT_GRANT,\n      payload: grant\n    });\n  }, [dispatch]);\n  const postGrant = useCallback((data, token) => {\n    dispatch({\n      type: GrantTypes.POST_GRANTS_START,\n      payload: data\n    });\n    axiosWithAuth(token).post(\"/grants\", data).then(res => {\n      dispatch({\n        type: GrantTypes.POST_GRANTS_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      const data = err && err.response && err.response.data ? err.response.data : err;\n      dispatch({\n        type: GrantTypes.POST_GRANTS_FAILURE,\n        payload: data\n      });\n    });\n  }, [dispatch]);\n  const fetchAdminGrants = useCallback(token => {\n    dispatch({\n      type: GrantTypes.FETCH_ADMIN_GRANTS_START\n    }); // @ts-ignore\n\n    axiosWithAuth(token).get(`/admin`).then(res => {\n      dispatch({\n        type: GrantTypes.FETCH_ADMIN_GRANTS_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      console.log(err.response);\n      const data = err && err.response && err.response.data ? err.response.data : err;\n      dispatch({\n        type: GrantTypes.FETCH_ADMIN_GRANTS_FAILURE,\n        payload: data\n      });\n    });\n  }, [dispatch]);\n  const updateAdminGrant = useCallback((token, id, data) => {\n    dispatch({\n      type: GrantTypes.UPDATE_ADMIN_GRANTS_START,\n      payload: true\n    });\n    axiosWithAuth(token).put(`/admin/${id}`, data).then(res => {\n      dispatch({\n        type: GrantTypes.UPDATE_ADMIN_GRANTS_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      const data = err && err.response && err.response.data ? err.response.data : err;\n      dispatch({\n        type: GrantTypes.UPDATE_ADMIN_GRANTS_FAILURE,\n        payload: data\n      });\n    });\n  }, [dispatch]);\n  const deleteAdminGrant = useCallback((token, id) => {\n    dispatch({\n      type: GrantTypes.DELETE_ADMIN_GRANTS_START\n    });\n    axiosWithAuth(token).put(`/admin/${id}`).then(res => {\n      dispatch({\n        type: GrantTypes.DELETE_ADMIN_GRANTS_SUCCESS\n      });\n    }).catch(err => {\n      const data = err && err.response && err.response.data ? err.response.data : err;\n      dispatch({\n        type: GrantTypes.DELETE_ADMIN_GRANTS_FAILURE,\n        payload: data\n      });\n    });\n  }, [dispatch]);\n  const selectAdminGrant = useCallback((token, id) => {\n    dispatch({\n      type: GrantTypes.SELECT_ADMIN_GRANTS_START\n    });\n    axiosWithAuth(token).get(`/admin/${id}`).then(res => {\n      dispatch({\n        type: GrantTypes.SELECT_ADMIN_GRANTS_SUCCESS\n      });\n    }).catch(err => {\n      const data = err && err.response && err.response.data ? err.response.data : err;\n      dispatch({\n        type: GrantTypes.SELECT_ADMIN_GRANTS_FAILURE,\n        payload: data\n      });\n    });\n  }, [dispatch]);\n  return {\n    fetchGrants,\n    selectGrant,\n    postGrant,\n    fetchAdminGrants,\n    deleteAdminGrant,\n    updateAdminGrant,\n    selectAdminGrant\n  };\n};","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/store/grants/useGrantActions.tsx"],"names":["useCallback","useDispatch","GrantTypes","FilterTypes","axiosWithAuth","axiosWithOutAuth","axios","useGrantActions","dispatch","fetchGrants","type","FETCH_GRANTS_START","get","then","res","FETCH_GRANTS_SUCCESS","payload","data","FILTER_GRANT","catch","err","response","FETCH_GRANTS_FAILURE","selectGrant","grant","SELECT_GRANT","postGrant","token","POST_GRANTS_START","post","POST_GRANTS_SUCCESS","POST_GRANTS_FAILURE","fetchAdminGrants","FETCH_ADMIN_GRANTS_START","FETCH_ADMIN_GRANTS_SUCCESS","console","log","FETCH_ADMIN_GRANTS_FAILURE","updateAdminGrant","id","UPDATE_ADMIN_GRANTS_START","put","UPDATE_ADMIN_GRANTS_SUCCESS","UPDATE_ADMIN_GRANTS_FAILURE","deleteAdminGrant","DELETE_ADMIN_GRANTS_START","DELETE_ADMIN_GRANTS_SUCCESS","DELETE_ADMIN_GRANTS_FAILURE","selectAdminGrant","SELECT_ADMIN_GRANTS_START","SELECT_ADMIN_GRANTS_SUCCESS","SELECT_ADMIN_GRANTS_FAILURE"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,SAAeC,UAAf,QAAgC,cAAhC;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,aAAR,EAAuBC,gBAAgB,IAAIC,KAA3C,QAAuD,sBAAvD;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,WAAW,GAAGT,WAAW,CAAC,MAAM;AAClCQ,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAER,UAAU,CAACS;AAAlB,KAAD,CAAR,CADkC,CAElC;;AACAL,IAAAA,KAAK,GACAM,GADL,CACU,SADV,EAEKC,IAFL,CAEWC,GAAD,IAAwB;AAC1BN,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER,UAAU,CAACa,oBAAlB;AAAwCC,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAArD,OAAD,CAAR;AACAT,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEP,WAAW,CAACe,YAAnB;AAAiCF,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAA9C,OAAD,CAAR;AACH,KALL,EAMKE,KANL,CAMYC,GAAD,IAAqB;AACxB,YAAMH,IAAI,GACNG,GAAG,IAAIA,GAAG,CAACC,QAAX,IAAuBD,GAAG,CAACC,QAAJ,CAAaJ,IAApC,GAA2CG,GAAG,CAACC,QAAJ,CAAaJ,IAAxD,GAA+DG,GADnE;AAEAZ,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER,UAAU,CAACoB,oBAAlB;AAAwCN,QAAAA,OAAO,EAAEC;AAAjD,OAAD,CAAR;AACH,KAVL;AAWH,GAd8B,EAc5B,CAACT,QAAD,CAd4B,CAA/B;AAgBA,QAAMe,WAAW,GAAGvB,WAAW,CAC1BwB,KAAD,IAAkB;AACdhB,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAER,UAAU,CAACuB,YAAlB;AAAgCT,MAAAA,OAAO,EAAEQ;AAAzC,KAAD,CAAR;AACH,GAH0B,EAI3B,CAAChB,QAAD,CAJ2B,CAA/B;AAOA,QAAMkB,SAAS,GAAG1B,WAAW,CACzB,CAACiB,IAAD,EAAOU,KAAP,KAAiB;AACbnB,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAER,UAAU,CAAC0B,iBAAlB;AAAqCZ,MAAAA,OAAO,EAAEC;AAA9C,KAAD,CAAR;AACAb,IAAAA,aAAa,CAACuB,KAAD,CAAb,CACKE,IADL,CACU,SADV,EACqBZ,IADrB,EAEKJ,IAFL,CAEWC,GAAD,IAAwB;AAC1BN,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER,UAAU,CAAC4B,mBAAlB;AAAuCd,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAApD,OAAD,CAAR;AACH,KAJL,EAKKE,KALL,CAKYC,GAAD,IAAqB;AACxB,YAAMH,IAAI,GACNG,GAAG,IAAIA,GAAG,CAACC,QAAX,IAAuBD,GAAG,CAACC,QAAJ,CAAaJ,IAApC,GAA2CG,GAAG,CAACC,QAAJ,CAAaJ,IAAxD,GAA+DG,GADnE;AAEAZ,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER,UAAU,CAAC6B,mBAAlB;AAAuCf,QAAAA,OAAO,EAAEC;AAAhD,OAAD,CAAR;AACH,KATL;AAUH,GAbwB,EAczB,CAACT,QAAD,CAdyB,CAA7B;AAiBA,QAAMwB,gBAAgB,GAAGhC,WAAW,CAAE2B,KAAD,IAAmB;AACpDnB,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAER,UAAU,CAAC+B;AAAlB,KAAD,CAAR,CADoD,CAEpD;;AACA7B,IAAAA,aAAa,CAACuB,KAAD,CAAb,CACKf,GADL,CACU,QADV,EAEKC,IAFL,CAEWC,GAAD,IAAwB;AAC1BN,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER,UAAU,CAACgC,0BAAlB;AAA8ClB,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAA3D,OAAD,CAAR;AACH,KAJL,EAKKE,KALL,CAKYC,GAAD,IAAqB;AACxBe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAG,CAACC,QAAhB;AACA,YAAMJ,IAAI,GACNG,GAAG,IAAIA,GAAG,CAACC,QAAX,IAAuBD,GAAG,CAACC,QAAJ,CAAaJ,IAApC,GAA2CG,GAAG,CAACC,QAAJ,CAAaJ,IAAxD,GAA+DG,GADnE;AAEAZ,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER,UAAU,CAACmC,0BAAlB;AAA8CrB,QAAAA,OAAO,EAAEC;AAAvD,OAAD,CAAR;AACH,KAVL;AAWH,GAdmC,EAcjC,CAACT,QAAD,CAdiC,CAApC;AAgBA,QAAM8B,gBAAgB,GAAGtC,WAAW,CAAC,CAAC2B,KAAD,EAAeY,EAAf,EAA0BtB,IAA1B,KAAyC;AAC1ET,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAER,UAAU,CAACsC,yBAAlB;AAA6CxB,MAAAA,OAAO,EAAE;AAAtD,KAAD,CAAR;AACAZ,IAAAA,aAAa,CAACuB,KAAD,CAAb,CACKc,GADL,CACU,UAASF,EAAG,EADtB,EACyBtB,IADzB,EAEKJ,IAFL,CAEWC,GAAD,IAAwB;AAC1BN,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER,UAAU,CAACwC,2BAAlB;AAA+C1B,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAA5D,OAAD,CAAR;AACH,KAJL,EAKKE,KALL,CAKYC,GAAD,IAAqB;AACxB,YAAMH,IAAI,GACNG,GAAG,IAAIA,GAAG,CAACC,QAAX,IAAuBD,GAAG,CAACC,QAAJ,CAAaJ,IAApC,GAA2CG,GAAG,CAACC,QAAJ,CAAaJ,IAAxD,GAA+DG,GADnE;AAEAZ,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER,UAAU,CAACyC,2BAAlB;AAA+C3B,QAAAA,OAAO,EAAEC;AAAxD,OAAD,CAAR;AACH,KATL;AAUH,GAZmC,EAYjC,CAACT,QAAD,CAZiC,CAApC;AAcA,QAAMoC,gBAAgB,GAAG5C,WAAW,CAAC,CAAC2B,KAAD,EAAgBY,EAAhB,KAA+B;AAChE/B,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAER,UAAU,CAAC2C;AAAlB,KAAD,CAAR;AACAzC,IAAAA,aAAa,CAACuB,KAAD,CAAb,CACKc,GADL,CACU,UAASF,EAAG,EADtB,EAEK1B,IAFL,CAEWC,GAAD,IAAwB;AAC1BN,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER,UAAU,CAAC4C;AAAlB,OAAD,CAAR;AACH,KAJL,EAKK3B,KALL,CAKYC,GAAD,IAAqB;AACxB,YAAMH,IAAI,GACNG,GAAG,IAAIA,GAAG,CAACC,QAAX,IAAuBD,GAAG,CAACC,QAAJ,CAAaJ,IAApC,GAA2CG,GAAG,CAACC,QAAJ,CAAaJ,IAAxD,GAA+DG,GADnE;AAEAZ,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER,UAAU,CAAC6C,2BAAlB;AAA+C/B,QAAAA,OAAO,EAAEC;AAAxD,OAAD,CAAR;AACH,KATL;AAUH,GAZmC,EAYjC,CAACT,QAAD,CAZiC,CAApC;AAeA,QAAMwC,gBAAgB,GAAGhD,WAAW,CAAC,CAAC2B,KAAD,EAAgBY,EAAhB,KAA+B;AAChE/B,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAER,UAAU,CAAC+C;AAAlB,KAAD,CAAR;AACA7C,IAAAA,aAAa,CAACuB,KAAD,CAAb,CACKf,GADL,CACU,UAAS2B,EAAG,EADtB,EAEK1B,IAFL,CAEWC,GAAD,IAAwB;AAC1BN,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER,UAAU,CAACgD;AAAlB,OAAD,CAAR;AACH,KAJL,EAKK/B,KALL,CAKYC,GAAD,IAAqB;AACxB,YAAMH,IAAI,GACNG,GAAG,IAAIA,GAAG,CAACC,QAAX,IAAuBD,GAAG,CAACC,QAAJ,CAAaJ,IAApC,GAA2CG,GAAG,CAACC,QAAJ,CAAaJ,IAAxD,GAA+DG,GADnE;AAEAZ,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER,UAAU,CAACiD,2BAAlB;AAA+CnC,QAAAA,OAAO,EAAEC;AAAxD,OAAD,CAAR;AACH,KATL;AAUH,GAZmC,EAYjC,CAACT,QAAD,CAZiC,CAApC;AAcA,SAAO;AACHC,IAAAA,WADG;AACUc,IAAAA,WADV;AACuBG,IAAAA,SADvB;AACkCM,IAAAA,gBADlC;AAEHY,IAAAA,gBAFG;AAEeN,IAAAA,gBAFf;AAEiCU,IAAAA;AAFjC,GAAP;AAIH,CA1GM","sourcesContent":["import {useCallback} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {AxiosError, AxiosResponse} from \"axios\";\nimport {Grant, GrantTypes} from \"./grantTypes\";\nimport {FilterTypes} from \"../filters/filterTypes\";\nimport {axiosWithAuth, axiosWithOutAuth as axios} from \"../utils/axiosConfig\";\n\nexport const useGrantActions = () => {\n    const dispatch = useDispatch();\n\n    const fetchGrants = useCallback(() => {\n        dispatch({type: GrantTypes.FETCH_GRANTS_START});\n        // @ts-ignore\n        axios()\n            .get(`/grants`)\n            .then((res: AxiosResponse) => {\n                dispatch({type: GrantTypes.FETCH_GRANTS_SUCCESS, payload: res.data});\n                dispatch({type: FilterTypes.FILTER_GRANT, payload: res.data});\n            })\n            .catch((err: AxiosError) => {\n                const data =\n                    err && err.response && err.response.data ? err.response.data : err;\n                dispatch({type: GrantTypes.FETCH_GRANTS_FAILURE, payload: data});\n            });\n    }, [dispatch]);\n\n    const selectGrant = useCallback(\n        (grant: Grant) => {\n            dispatch({type: GrantTypes.SELECT_GRANT, payload: grant});\n        },\n        [dispatch]\n    );\n\n    const postGrant = useCallback(\n        (data, token) => {\n            dispatch({type: GrantTypes.POST_GRANTS_START, payload: data});\n            axiosWithAuth(token)\n                .post(\"/grants\", data)\n                .then((res: AxiosResponse) => {\n                    dispatch({type: GrantTypes.POST_GRANTS_SUCCESS, payload: res.data});\n                })\n                .catch((err: AxiosError) => {\n                    const data =\n                        err && err.response && err.response.data ? err.response.data : err;\n                    dispatch({type: GrantTypes.POST_GRANTS_FAILURE, payload: data});\n                });\n        },\n        [dispatch]\n    );\n\n    const fetchAdminGrants = useCallback((token: string) => {\n        dispatch({type: GrantTypes.FETCH_ADMIN_GRANTS_START});\n        // @ts-ignore\n        axiosWithAuth(token)\n            .get(`/admin`)\n            .then((res: AxiosResponse) => {\n                dispatch({type: GrantTypes.FETCH_ADMIN_GRANTS_SUCCESS, payload: res.data});\n            })\n            .catch((err: AxiosError) => {\n                console.log(err.response)\n                const data =\n                    err && err.response && err.response.data ? err.response.data : err;\n                dispatch({type: GrantTypes.FETCH_ADMIN_GRANTS_FAILURE, payload: data});\n            });\n    }, [dispatch]);\n\n    const updateAdminGrant = useCallback((token:string, id:number, data:Grant) => {\n        dispatch({type: GrantTypes.UPDATE_ADMIN_GRANTS_START, payload: true});\n        axiosWithAuth(token)\n            .put(`/admin/${id}`, data)\n            .then((res: AxiosResponse) => {\n                dispatch({type: GrantTypes.UPDATE_ADMIN_GRANTS_SUCCESS, payload: res.data})\n            })\n            .catch((err: AxiosError) => {\n                const data =\n                    err && err.response && err.response.data ? err.response.data : err;\n                dispatch({type: GrantTypes.UPDATE_ADMIN_GRANTS_FAILURE, payload: data});\n            });\n    }, [dispatch]);\n\n    const deleteAdminGrant = useCallback((token: string, id: number) => {\n        dispatch({type: GrantTypes.DELETE_ADMIN_GRANTS_START});\n        axiosWithAuth(token)\n            .put(`/admin/${id}`)\n            .then((res: AxiosResponse) => {\n                dispatch({type: GrantTypes.DELETE_ADMIN_GRANTS_SUCCESS,})\n            })\n            .catch((err: AxiosError) => {\n                const data =\n                    err && err.response && err.response.data ? err.response.data : err;\n                dispatch({type: GrantTypes.DELETE_ADMIN_GRANTS_FAILURE, payload: data});\n            });\n    }, [dispatch]);\n\n\n    const selectAdminGrant = useCallback((token: string, id: number) => {\n        dispatch({type: GrantTypes.SELECT_ADMIN_GRANTS_START});\n        axiosWithAuth(token)\n            .get(`/admin/${id}`)\n            .then((res: AxiosResponse) => {\n                dispatch({type: GrantTypes.SELECT_ADMIN_GRANTS_SUCCESS})\n            })\n            .catch((err: AxiosError) => {\n                const data =\n                    err && err.response && err.response.data ? err.response.data : err;\n                dispatch({type: GrantTypes.SELECT_ADMIN_GRANTS_FAILURE, payload: data});\n            });\n    }, [dispatch]);\n\n    return {\n        fetchGrants, selectGrant, postGrant, fetchAdminGrants,\n        deleteAdminGrant, updateAdminGrant, selectAdminGrant\n    };\n};\n\nexport interface UseGrantActions {\n    fetchGrants: () => void;\n    selectGrant: (grant: Grant) => void;\n    postGrant: (data: Grant, token: string) => void;\n    fetchAdminGrants: (token: string) => void\n    selectAdminGrant: (token: string, id: number) => void;\n    deleteAdminGrant: (token: string, id: number) => void;\n    updateAdminGrant: (token: string, id: number, data: Grant) => void;\n}\n"]},"metadata":{},"sourceType":"module"}