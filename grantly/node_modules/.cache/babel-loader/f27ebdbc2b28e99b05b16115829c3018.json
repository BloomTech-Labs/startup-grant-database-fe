{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.initLocation = initLocation;\nexports.validatePhoneNumber = validatePhoneNumber;\nexports.setPhoneNumber = setPhoneNumber;\nexports.phoneNumberWithDiallingCode = phoneNumberWithDiallingCode;\nexports.humanPhoneNumberWithDiallingCode = humanPhoneNumberWithDiallingCode;\nexports.humanLocation = humanLocation;\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _index = require('./index');\n\nvar _locations = require('./phone-number/locations');\n\nvar _locations2 = _interopRequireDefault(_locations);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar locationOptions = _immutable2.default.fromJS(_locations2.default.map(function (x) {\n  return {\n    country: x[0],\n    diallingCode: x[2],\n    isoCode: x[1],\n    label: x[2] + ' ' + x[1] + ' ' + x[0],\n    value: x[2] + ' ' + x[1]\n  };\n}));\n\nfunction findLocation(isoCode) {\n  return locationOptions.find(function (x) {\n    return x.get('isoCode') === isoCode;\n  });\n}\n\nfunction initLocation(m, isoCode) {\n  var location = findLocation(isoCode) || findLocation('US');\n  return (0, _index.registerOptionField)(m, 'location', locationOptions, location.get('value'));\n}\n\nfunction validatePhoneNumber(str) {\n  var regExp = /^[0-9]([0-9 -])*[0-9]$/;\n  return regExp.test(str);\n}\n\nfunction setPhoneNumber(m, str) {\n  return (0, _index.setField)(m, 'phoneNumber', str, validatePhoneNumber);\n}\n\nfunction phoneNumberWithDiallingCode(m) {\n  return humanPhoneNumberWithDiallingCode(m).replace(/[\\s-]+/g, '');\n}\n\nfunction humanPhoneNumberWithDiallingCode(m) {\n  var location = (0, _index.getField)(m, 'location');\n  var code = location.get('diallingCode', '');\n  var number = (0, _index.getFieldValue)(m, 'phoneNumber', '');\n  return code ? code + ' ' + number : number;\n}\n\nfunction humanLocation(m) {\n  var location = (0, _index.getField)(m, 'location');\n  return location.get('diallingCode') + ' ' + location.get('country');\n}","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/node_modules/auth0-lock/lib/field/phone_number.js"],"names":["exports","__esModule","initLocation","validatePhoneNumber","setPhoneNumber","phoneNumberWithDiallingCode","humanPhoneNumberWithDiallingCode","humanLocation","_immutable","require","_immutable2","_interopRequireDefault","_index","_locations","_locations2","obj","default","locationOptions","fromJS","map","x","country","diallingCode","isoCode","label","value","findLocation","find","get","m","location","registerOptionField","str","regExp","test","setField","replace","getField","code","number","getFieldValue"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,YAAR,GAAuBA,YAAvB;AACAF,OAAO,CAACG,mBAAR,GAA8BA,mBAA9B;AACAH,OAAO,CAACI,cAAR,GAAyBA,cAAzB;AACAJ,OAAO,CAACK,2BAAR,GAAsCA,2BAAtC;AACAL,OAAO,CAACM,gCAAR,GAA2CA,gCAA3C;AACAN,OAAO,CAACO,aAAR,GAAwBA,aAAxB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAACH,UAAD,CAAxC;;AAEA,IAAII,MAAM,GAAGH,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAII,UAAU,GAAGJ,OAAO,CAAC,0BAAD,CAAxB;;AAEA,IAAIK,WAAW,GAAGH,sBAAsB,CAACE,UAAD,CAAxC;;AAEA,SAASF,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACd,UAAX,GAAwBc,GAAxB,GAA8B;AAAEC,IAAAA,OAAO,EAAED;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,eAAe,GAAGP,WAAW,CAACM,OAAZ,CAAoBE,MAApB,CAA2BJ,WAAW,CAACE,OAAZ,CAAoBG,GAApB,CAAwB,UAAUC,CAAV,EAAa;AACpF,SAAO;AACLC,IAAAA,OAAO,EAAED,CAAC,CAAC,CAAD,CADL;AAELE,IAAAA,YAAY,EAAEF,CAAC,CAAC,CAAD,CAFV;AAGLG,IAAAA,OAAO,EAAEH,CAAC,CAAC,CAAD,CAHL;AAILI,IAAAA,KAAK,EAAEJ,CAAC,CAAC,CAAD,CAAD,GAAO,GAAP,GAAaA,CAAC,CAAC,CAAD,CAAd,GAAoB,GAApB,GAA0BA,CAAC,CAAC,CAAD,CAJ7B;AAKLK,IAAAA,KAAK,EAAEL,CAAC,CAAC,CAAD,CAAD,GAAO,GAAP,GAAaA,CAAC,CAAC,CAAD;AALhB,GAAP;AAOD,CARgD,CAA3B,CAAtB;;AAUA,SAASM,YAAT,CAAsBH,OAAtB,EAA+B;AAC7B,SAAON,eAAe,CAACU,IAAhB,CAAqB,UAAUP,CAAV,EAAa;AACvC,WAAOA,CAAC,CAACQ,GAAF,CAAM,SAAN,MAAqBL,OAA5B;AACD,GAFM,CAAP;AAGD;;AAED,SAASrB,YAAT,CAAsB2B,CAAtB,EAAyBN,OAAzB,EAAkC;AAChC,MAAIO,QAAQ,GAAGJ,YAAY,CAACH,OAAD,CAAZ,IAAyBG,YAAY,CAAC,IAAD,CAApD;AACA,SAAO,CAAC,GAAGd,MAAM,CAACmB,mBAAX,EAAgCF,CAAhC,EAAmC,UAAnC,EAA+CZ,eAA/C,EAAgEa,QAAQ,CAACF,GAAT,CAAa,OAAb,CAAhE,CAAP;AACD;;AAED,SAASzB,mBAAT,CAA6B6B,GAA7B,EAAkC;AAChC,MAAIC,MAAM,GAAG,wBAAb;AACA,SAAOA,MAAM,CAACC,IAAP,CAAYF,GAAZ,CAAP;AACD;;AAED,SAAS5B,cAAT,CAAwByB,CAAxB,EAA2BG,GAA3B,EAAgC;AAC9B,SAAO,CAAC,GAAGpB,MAAM,CAACuB,QAAX,EAAqBN,CAArB,EAAwB,aAAxB,EAAuCG,GAAvC,EAA4C7B,mBAA5C,CAAP;AACD;;AAED,SAASE,2BAAT,CAAqCwB,CAArC,EAAwC;AACtC,SAAOvB,gCAAgC,CAACuB,CAAD,CAAhC,CAAoCO,OAApC,CAA4C,SAA5C,EAAuD,EAAvD,CAAP;AACD;;AAED,SAAS9B,gCAAT,CAA0CuB,CAA1C,EAA6C;AAC3C,MAAIC,QAAQ,GAAG,CAAC,GAAGlB,MAAM,CAACyB,QAAX,EAAqBR,CAArB,EAAwB,UAAxB,CAAf;AACA,MAAIS,IAAI,GAAGR,QAAQ,CAACF,GAAT,CAAa,cAAb,EAA6B,EAA7B,CAAX;AACA,MAAIW,MAAM,GAAG,CAAC,GAAG3B,MAAM,CAAC4B,aAAX,EAA0BX,CAA1B,EAA6B,aAA7B,EAA4C,EAA5C,CAAb;AACA,SAAOS,IAAI,GAAGA,IAAI,GAAG,GAAP,GAAaC,MAAhB,GAAyBA,MAApC;AACD;;AAED,SAAShC,aAAT,CAAuBsB,CAAvB,EAA0B;AACxB,MAAIC,QAAQ,GAAG,CAAC,GAAGlB,MAAM,CAACyB,QAAX,EAAqBR,CAArB,EAAwB,UAAxB,CAAf;AACA,SAAOC,QAAQ,CAACF,GAAT,CAAa,cAAb,IAA+B,GAA/B,GAAqCE,QAAQ,CAACF,GAAT,CAAa,SAAb,CAA5C;AACD","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.initLocation = initLocation;\nexports.validatePhoneNumber = validatePhoneNumber;\nexports.setPhoneNumber = setPhoneNumber;\nexports.phoneNumberWithDiallingCode = phoneNumberWithDiallingCode;\nexports.humanPhoneNumberWithDiallingCode = humanPhoneNumberWithDiallingCode;\nexports.humanLocation = humanLocation;\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _index = require('./index');\n\nvar _locations = require('./phone-number/locations');\n\nvar _locations2 = _interopRequireDefault(_locations);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar locationOptions = _immutable2.default.fromJS(_locations2.default.map(function (x) {\n  return {\n    country: x[0],\n    diallingCode: x[2],\n    isoCode: x[1],\n    label: x[2] + ' ' + x[1] + ' ' + x[0],\n    value: x[2] + ' ' + x[1]\n  };\n}));\n\nfunction findLocation(isoCode) {\n  return locationOptions.find(function (x) {\n    return x.get('isoCode') === isoCode;\n  });\n}\n\nfunction initLocation(m, isoCode) {\n  var location = findLocation(isoCode) || findLocation('US');\n  return (0, _index.registerOptionField)(m, 'location', locationOptions, location.get('value'));\n}\n\nfunction validatePhoneNumber(str) {\n  var regExp = /^[0-9]([0-9 -])*[0-9]$/;\n  return regExp.test(str);\n}\n\nfunction setPhoneNumber(m, str) {\n  return (0, _index.setField)(m, 'phoneNumber', str, validatePhoneNumber);\n}\n\nfunction phoneNumberWithDiallingCode(m) {\n  return humanPhoneNumberWithDiallingCode(m).replace(/[\\s-]+/g, '');\n}\n\nfunction humanPhoneNumberWithDiallingCode(m) {\n  var location = (0, _index.getField)(m, 'location');\n  var code = location.get('diallingCode', '');\n  var number = (0, _index.getFieldValue)(m, 'phoneNumber', '');\n  return code ? code + ' ' + number : number;\n}\n\nfunction humanLocation(m) {\n  var location = (0, _index.getField)(m, 'location');\n  return location.get('diallingCode') + ' ' + location.get('country');\n}\n"]},"metadata":{},"sourceType":"script"}