{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/admin/SuggestionModal.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { ActionsContext } from \"../../context/ActionsContext\";\nimport { useSelector } from \"react-redux\"; // Styling\n// import { tableSuggStyles } from \"../../styles/tableSuggStyles\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nexport const SuggestionModal = props => {\n  const {\n    token,\n    isModerator\n  } = useSelector(state => state.user);\n  const {\n    adminGrants\n  } = useSelector(state => state.grants);\n  const [open, setOpen] = useState(false);\n  useEffect(() => {// isModerator &&\n  }, [token]);\n\n  const onClickDelete = (suggestion_id, token) => {// actions.deleteSuggestion(suggestion_id, token)\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(React.Fragment, null, suggestions.length ? React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: handleClickOpen,\n    className: suggestions.length ? style.iconBtnWithSuggestions : style.iconBtnWithOutSuggestions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, suggestions.length, React.createElement(ArrowDropDownIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })) : React.createElement(Button, {\n    className: style.iconBtnWithOutSuggestions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, suggestions.length), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"User Suggestions\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, suggestions.length ? React.createElement(List, {\n    className: style.suggestionUl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, suggestions.map(suggestion => React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    className: style.suggestionLi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: () => onClickDelete(suggestion.id, token),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      varient: \"body1\",\n      color: \"textPrimary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, suggestion.subject)),\n    secondary: React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body3\",\n      color: \"textPrimary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, suggestion.suggestion)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })))) : React.createElement(Typography, {\n    variant: \"h1\",\n    className: style.suggestionNone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \" \", \"There are no user suggestions at this time\"))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Cancel\"))));\n};","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/admin/SuggestionModal.jsx"],"names":["React","useEffect","useState","ActionsContext","useSelector","DialogTitle","Dialog","List","ListItem","ListItemText","Typography","Button","DialogActions","DialogContent","DialogContentText","IconButton","ArrowDropDownIcon","DeleteIcon","SuggestionModal","props","token","isModerator","state","user","adminGrants","grants","open","setOpen","onClickDelete","suggestion_id","handleClickOpen","handleClose","suggestions","length","style","iconBtnWithSuggestions","iconBtnWithOutSuggestions","suggestionUl","map","suggestion","suggestionLi","id","subject","suggestionNone"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ActionsContext } from \"../../context/ActionsContext\";\nimport { useSelector } from \"react-redux\";\n// Styling\n// import { tableSuggStyles } from \"../../styles/tableSuggStyles\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport const SuggestionModal = props => {\n  const { token, isModerator } = useSelector(state => state.user);\n  const { adminGrants } = useSelector(state => state.grants);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    // isModerator &&\n  }, [token]);\n\n  const onClickDelete = (suggestion_id, token) => {\n    // actions.deleteSuggestion(suggestion_id, token)\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      {suggestions.length ? (\n        <Button\n          variant=\"outlined\"\n          onClick={handleClickOpen}\n          className={\n            suggestions.length\n              ? style.iconBtnWithSuggestions\n              : style.iconBtnWithOutSuggestions\n          }\n        >\n          {suggestions.length}\n          <ArrowDropDownIcon />\n        </Button>\n      ) : (\n        <Button className={style.iconBtnWithOutSuggestions}>\n          {suggestions.length}\n        </Button>\n      )}\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle variant=\"h5\">User Suggestions</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {suggestions.length ? (\n              <List className={style.suggestionUl}>\n                {suggestions.map(suggestion => (\n                  <ListItem\n                    alignItems=\"flex-start\"\n                    className={style.suggestionLi}\n                  >\n                    <IconButton\n                      onClick={() => onClickDelete(suggestion.id, token)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                    <ListItemText\n                      primary={\n                        <React.Fragment>\n                          <Typography varient=\"body1\" color=\"textPrimary\">\n                            {suggestion.subject}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                      secondary={\n                        <React.Fragment>\n                          <Typography variant=\"body3\" color=\"textPrimary\">\n                            {suggestion.suggestion}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <Typography variant=\"h1\" className={style.suggestionNone}>\n                {\" \"}\n                There are no user suggestions at this time\n              </Typography>\n            )}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}