{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/filter/NewFilters.tsx\";\nimport React from 'react';\nimport { Button, Card, FormGroup, Typography } from \"@material-ui/core\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport FilterGroup from \"./FilterGroup\";\nimport { useSelector } from \"react-redux\";\n\nconst NewFilters = ({\n  landing,\n  classes,\n  setFilters,\n  filters\n}) => {\n  const {\n    isModerator\n  } = useSelector(state => state.user);\n\n  function handleChange(data, key) {\n    Object.keys(filters).forEach(eachKey => {\n      if (eachKey === key) {\n        // @ts-ignore\n        const updatedFilters = filters[key].map(filter => {\n          if (filter.key === data.key) {\n            return { ...filter,\n              checked: !filter.checked\n            };\n          } else {\n            return filter;\n          }\n        });\n        setFilters({ ...filters,\n          [key]: updatedFilters\n        });\n      }\n    });\n  }\n\n  const title = ['Grant Amount', 'Region', 'Focus Areas'];\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, landing ? \"Which grants would you like to find?\" : \"Filter grants by:\"), React.createElement(FormGroup, {\n    className: classes.filterCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, Object.keys(filters).map((group, id) => React.createElement(FilterGroup, {\n    classes: classes,\n    key: id,\n    handleChange: handleChange,\n    data: filters[group],\n    title: title[id],\n    labelText: group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    component: RouterLink,\n    to: \"/grants\",\n    className: classes.landingButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Find Grants\"));\n};\n\nexport default NewFilters;","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/filter/NewFilters.tsx"],"names":["React","Button","Card","FormGroup","Typography","Link","RouterLink","FilterGroup","useSelector","NewFilters","landing","classes","setFilters","filters","isModerator","state","user","handleChange","data","key","Object","keys","forEach","eachKey","updatedFilters","map","filter","checked","title","card","filterCard","group","id","landingButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAkD,mBAAlD;AACA,SAAQC,IAAI,IAAIC,UAAhB,QAAiC,kBAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAYA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA,UAAnB;AAA+BC,EAAAA;AAA/B,CAAD,KAAqD;AACpE,QAAM;AAACC,IAAAA;AAAD,MAAgBN,WAAW,CAAEO,KAAD,IAAqBA,KAAK,CAACC,IAA5B,CAAjC;;AAGA,WAASC,YAAT,CAAsBC,IAAtB,EAAuCC,GAAvC,EAAyD;AACrDC,IAAAA,MAAM,CAACC,IAAP,CAAYR,OAAZ,EAAqBS,OAArB,CAA6BC,OAAO,IAAI;AACpC,UAAIA,OAAO,KAAKJ,GAAhB,EAAqB;AACjB;AACA,cAAMK,cAAc,GAAGX,OAAO,CAACM,GAAD,CAAP,CAAaM,GAAb,CAAkBC,MAAD,IAAuB;AAC3D,cAAIA,MAAM,CAACP,GAAP,KAAeD,IAAI,CAACC,GAAxB,EAA6B;AACzB,mBAAO,EAAC,GAAGO,MAAJ;AAAYC,cAAAA,OAAO,EAAE,CAACD,MAAM,CAACC;AAA7B,aAAP;AACH,WAFD,MAEO;AACH,mBAAOD,MAAP;AACH;AACJ,SANsB,CAAvB;AAOAd,QAAAA,UAAU,CAAC,EAAC,GAAGC,OAAJ;AAAa,WAACM,GAAD,GAAOK;AAApB,SAAD,CAAV;AACH;AACJ,KAZD;AAaH;;AAED,QAAMI,KAAK,GAAG,CAAC,cAAD,EAAiB,QAAjB,EAA2B,aAA3B,CAAd;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEjB,OAAO,CAACkB,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAElB,OAAO,CAACiB,KAA/B;AAAsC,IAAA,OAAO,EAAC,IAA9C;AAAmD,IAAA,SAAS,EAAC,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,OAAO,GAAG,sCAAH,GAA4C,mBADxD,CADJ,EAII,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEC,OAAO,CAACmB,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,MAAM,CAACC,IAAP,CAAYR,OAAZ,EAAqBY,GAArB,CAAyB,CAACM,KAAD,EAAQC,EAAR,KAAe,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAErB,OAAtB;AAA+B,IAAA,GAAG,EAAEqB,EAApC;AACa,IAAA,YAAY,EAAEf,YAD3B;AAEa,IAAA,IAAI,EAAEJ,OAAO,CAACkB,KAAD,CAF1B;AAEmC,IAAA,KAAK,EAAEH,KAAK,CAACI,EAAD,CAF/C;AAGa,IAAA,SAAS,EAAED,KAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxC,CADL,CAJJ,EAUI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,IAAI,EAAC,OAAjD;AAAyD,IAAA,SAAS,EAAEzB,UAApE;AAAgF,IAAA,EAAE,EAAC,SAAnF;AACQ,IAAA,SAAS,EAAEK,OAAO,CAACsB,aAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVJ,CADJ;AAiBH,CAtCD;;AAwCA,eAAexB,UAAf","sourcesContent":["import React from 'react';\nimport {Button, Card, FormGroup, Typography} from \"@material-ui/core\";\nimport {Link as RouterLink} from 'react-router-dom';\nimport FilterGroup from \"./FilterGroup\";\nimport {useSelector} from \"react-redux\";\nimport {AmountState, FilterFormState, FormState} from \"../../store/filters/filterTypes\";\nimport {AppState} from \"../../store/rooterReducer\";\nimport {logger} from \"../../store/utils/logger\";\n\ninterface IProps {\n    landing: boolean\n    classes: any\n    setFilters: (filter: FilterFormState) => void\n    filters: FilterFormState\n}\n\nconst NewFilters = ({landing, classes, setFilters, filters}: IProps) => {\n    const {isModerator} = useSelector((state: AppState) => state.user);\n\n\n    function handleChange(data: FormState, key:string): void {\n        Object.keys(filters).forEach(eachKey => {\n            if (eachKey === key) {\n                // @ts-ignore\n                const updatedFilters = filters[key].map((filter: FormState) => {\n                    if (filter.key === data.key) {\n                        return {...filter, checked: !filter.checked}\n                    } else {\n                        return filter;\n                    }\n                })\n                setFilters({...filters, [key]: updatedFilters});\n            }\n        });\n    }\n\n    const title = ['Grant Amount', 'Region', 'Focus Areas'];\n    return (\n        <Card className={classes.card}>\n            <Typography className={classes.title} variant=\"h5\" component=\"h2\">\n                {landing ? \"Which grants would you like to find?\" : \"Filter grants by:\"}\n            </Typography>\n            <FormGroup className={classes.filterCard}>\n                {Object.keys(filters).map((group, id) => <FilterGroup classes={classes} key={id}\n                                                                      handleChange={handleChange}\n                                                                      data={filters[group]} title={title[id]}\n                                                                      labelText={group} />)}\n            </FormGroup>\n            <Button variant=\"contained\" color=\"primary\" size=\"large\" component={RouterLink} to=\"/grants\"\n                    className={classes.landingButton}>\n                Find Grants\n            </Button>\n        </Card>\n    )\n};\n\nexport default NewFilters;\n"]},"metadata":{},"sourceType":"module"}