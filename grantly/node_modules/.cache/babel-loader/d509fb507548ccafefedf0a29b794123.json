{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.STRATEGIES = undefined;\nexports.initEnterprise = initEnterprise;\nexports.defaultEnterpriseConnection = defaultEnterpriseConnection;\nexports.defaultEnterpriseConnectionName = defaultEnterpriseConnectionName;\nexports.enterpriseActiveFlowConnection = enterpriseActiveFlowConnection;\nexports.matchConnection = matchConnection;\nexports.isEnterpriseDomain = isEnterpriseDomain;\nexports.enterpriseDomain = enterpriseDomain;\nexports.quickAuthConnection = quickAuthConnection;\nexports.isADEnabled = isADEnabled;\nexports.findADConnectionWithoutDomain = findADConnectionWithoutDomain;\nexports.isInCorpNetwork = isInCorpNetwork;\nexports.corpNetworkConnection = corpNetworkConnection;\nexports.isSingleHRDConnection = isSingleHRDConnection;\nexports.isHRDDomain = isHRDDomain;\nexports.toggleHRD = toggleHRD;\nexports.isHRDActive = isHRDActive;\nexports.isHRDEmailValid = isHRDEmailValid;\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _index = require('../core/index');\n\nvar l = _interopRequireWildcard(_index);\n\nvar _index2 = require('../field/index');\n\nvar c = _interopRequireWildcard(_index2);\n\nvar _data_utils = require('../utils/data_utils');\n\nvar _email = require('../field/email');\n\nvar _username = require('../field/username');\n\nvar _classic = require('../engine/classic');\n\nvar _index3 = require('./database/index');\n\nvar _index4 = require('../store/index');\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _dataFns = (0, _data_utils.dataFns)(['enterprise']),\n    get = _dataFns.get,\n    initNS = _dataFns.initNS,\n    tget = _dataFns.tget,\n    tremove = _dataFns.tremove,\n    tset = _dataFns.tset;\n\nvar _dataFns2 = (0, _data_utils.dataFns)(['core']),\n    tremoveCore = _dataFns2.tremove,\n    tsetCore = _dataFns2.tset,\n    tgetCore = _dataFns2.tget; // TODO: Android version also has \"google-opendid\" in the list, but we\n// consider it to be a social connection. See\n// https://github.com/auth0/Lock.Android/blob/98262cb7110e5d1c8a97e1129faf2621c1d8d111/lock/src/main/java/com/auth0/android/lock/utils/Strategies.java\n\n\nvar STRATEGIES = exports.STRATEGIES = {\n  ad: 'AD / LDAP',\n  adfs: 'ADFS',\n  'auth0-adldap': 'AD/LDAP',\n  'auth0-oidc': 'Auth0 OpenID Connect',\n  custom: 'Custom Auth',\n  'google-apps': 'Google Apps',\n  ip: 'IP Address',\n  mscrm: 'Dynamics CRM',\n  office365: 'Office365',\n  pingfederate: 'Ping Federate',\n  samlp: 'SAML',\n  sharepoint: 'SharePoint Apps',\n  waad: 'Windows Azure AD',\n  oidc: 'OpenID Connect'\n};\n\nfunction initEnterprise(m, opts) {\n  return initNS(m, _immutable2.default.fromJS(processOptions(opts)));\n}\n\nfunction processOptions(opts) {\n  var defaultEnterpriseConnection = opts.defaultEnterpriseConnection;\n\n  if (defaultEnterpriseConnection != undefined && typeof defaultEnterpriseConnection !== 'string') {\n    l.warn(opts, 'The `defaultEnterpriseConnection` option will be ignored, because it is not a string.');\n    defaultEnterpriseConnection = undefined;\n  }\n\n  return defaultEnterpriseConnection === undefined ? {} : {\n    defaultConnectionName: defaultEnterpriseConnection\n  };\n}\n\nfunction defaultEnterpriseConnection(m) {\n  var name = defaultEnterpriseConnectionName(m);\n  return name && findADConnectionWithoutDomain(m, name);\n}\n\nfunction defaultEnterpriseConnectionName(m) {\n  return get(m, 'defaultConnectionName');\n}\n\nfunction enterpriseActiveFlowConnection(m) {\n  if (isHRDActive(m)) {\n    // HRD is active when an email matched or there is only one\n    // connection and it is enterprise\n    var email = tget(m, 'hrdEmail', '');\n    return matchConnection(m, email) || findActiveFlowConnection(m);\n  } else {\n    return defaultEnterpriseConnection(m) || findADConnectionWithoutDomain(m);\n  }\n}\n\nfunction matchConnection(m, email) {\n  var strategies = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var target = (0, _email.emailDomain)(email);\n  if (!target) return false;\n  return l.connections.apply(l, [m, 'enterprise'].concat(strategies)).find(function (x) {\n    return x.get('domains').contains(target);\n  });\n}\n\nfunction isEnterpriseDomain(m, email) {\n  var strategies = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  return !!matchConnection(m, email, strategies);\n}\n\nfunction enterpriseDomain(m) {\n  return isSingleHRDConnection(m) ? l.connections(m, 'enterprise').getIn([0, 'domains', 0]) : (0, _email.emailDomain)(tget(m, 'hrdEmail'));\n}\n\nfunction quickAuthConnection(m) {\n  return !isADEnabled(m) && l.hasOneConnection(m, 'enterprise') ? l.connections(m, 'enterprise').get(0) : null;\n} // ad / adldap\n// https://github.com/auth0/Lock.Android/blob/0145b6853a8de0df5e63ef22e4e2bc40be97ad9e/lock/src/main/java/com/auth0/android/lock/utils/Strategy.java#L67\n\n\nfunction isADEnabled(m) {\n  return l.hasSomeConnections(m, 'enterprise', 'ad', 'auth0-adldap');\n}\n\nfunction findADConnectionWithoutDomain(m) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  return l.connections(m, 'enterprise', 'ad', 'auth0-adldap').find(function (x) {\n    return x.get('domains').isEmpty() && (!name || x.get('name') === name);\n  });\n}\n\nfunction findActiveFlowConnection(m) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  return l.connections(m, 'enterprise', 'ad', 'auth0-adldap').find(function (x) {\n    return !name || x.get('name') === name;\n  });\n} // kerberos\n\n\nfunction isInCorpNetwork(m) {\n  return corpNetworkConnection(m) !== undefined;\n}\n\nfunction corpNetworkConnection(m) {\n  // Information about connection is stored in to flat properties connection and strategy.\n  // If connection is present, strategy will always be present as defined by the server.\n  var name = m.getIn(['sso', 'connection']);\n  var strategy = m.getIn(['sso', 'strategy']);\n  return name && strategy && _immutable2.default.Map({\n    name: name,\n    strategy: strategy\n  });\n} // hrd\n\n\nfunction isSingleHRDConnection(m) {\n  return isADEnabled(m) && l.connections(m).count() === 1;\n}\n\nfunction isHRDDomain(m, email) {\n  return isEnterpriseDomain(m, email, ['ad', 'auth0-adldap']);\n}\n\nfunction toggleHRD(m, email) {\n  if (email) {\n    var username = l.defaultADUsernameFromEmailPrefix(m) ? (0, _email.emailLocalPart)(email) : email;\n    m = (0, _username.setUsername)(m, username, 'username', false);\n    m = tset(m, 'hrdEmail', email);\n  } else {\n    var hrdEmail = tget(m, 'hrdEmail');\n\n    if (hrdEmail) {\n      m = (0, _username.setUsername)(m, hrdEmail, 'email', false);\n    }\n\n    m = tremove(m, 'hrdEmail');\n  }\n\n  return tset(m, 'hrd', !!email);\n}\n\nfunction isHRDActive(m) {\n  return tget(m, 'hrd', isSingleHRDConnection(m));\n}\n\nfunction isHRDEmailValid(m, str) {\n  if ((0, _email.isEmail)(str) && !l.hasSomeConnections(m, 'database') && !l.hasSomeConnections(m, 'passwordless') && !findADConnectionWithoutDomain(m) && !(0, _classic.matchesEnterpriseConnection)(m, str)) {\n    return false;\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/node_modules/auth0-lock/lib/connection/enterprise.js"],"names":["exports","__esModule","STRATEGIES","undefined","initEnterprise","defaultEnterpriseConnection","defaultEnterpriseConnectionName","enterpriseActiveFlowConnection","matchConnection","isEnterpriseDomain","enterpriseDomain","quickAuthConnection","isADEnabled","findADConnectionWithoutDomain","isInCorpNetwork","corpNetworkConnection","isSingleHRDConnection","isHRDDomain","toggleHRD","isHRDActive","isHRDEmailValid","_immutable","require","_immutable2","_interopRequireDefault","_index","l","_interopRequireWildcard","_index2","c","_data_utils","_email","_username","_classic","_index3","_index4","obj","newObj","key","Object","prototype","hasOwnProperty","call","default","_dataFns","dataFns","get","initNS","tget","tremove","tset","_dataFns2","tremoveCore","tsetCore","tgetCore","ad","adfs","custom","ip","mscrm","office365","pingfederate","samlp","sharepoint","waad","oidc","m","opts","fromJS","processOptions","warn","defaultConnectionName","name","email","findActiveFlowConnection","strategies","arguments","length","target","emailDomain","connections","apply","concat","find","x","contains","getIn","hasOneConnection","hasSomeConnections","isEmpty","strategy","Map","count","username","defaultADUsernameFromEmailPrefix","emailLocalPart","setUsername","hrdEmail","str","isEmail","matchesEnterpriseConnection"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.STRATEGIES = undefined;\nexports.initEnterprise = initEnterprise;\nexports.defaultEnterpriseConnection = defaultEnterpriseConnection;\nexports.defaultEnterpriseConnectionName = defaultEnterpriseConnectionName;\nexports.enterpriseActiveFlowConnection = enterpriseActiveFlowConnection;\nexports.matchConnection = matchConnection;\nexports.isEnterpriseDomain = isEnterpriseDomain;\nexports.enterpriseDomain = enterpriseDomain;\nexports.quickAuthConnection = quickAuthConnection;\nexports.isADEnabled = isADEnabled;\nexports.findADConnectionWithoutDomain = findADConnectionWithoutDomain;\nexports.isInCorpNetwork = isInCorpNetwork;\nexports.corpNetworkConnection = corpNetworkConnection;\nexports.isSingleHRDConnection = isSingleHRDConnection;\nexports.isHRDDomain = isHRDDomain;\nexports.toggleHRD = toggleHRD;\nexports.isHRDActive = isHRDActive;\nexports.isHRDEmailValid = isHRDEmailValid;\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _index = require('../core/index');\n\nvar l = _interopRequireWildcard(_index);\n\nvar _index2 = require('../field/index');\n\nvar c = _interopRequireWildcard(_index2);\n\nvar _data_utils = require('../utils/data_utils');\n\nvar _email = require('../field/email');\n\nvar _username = require('../field/username');\n\nvar _classic = require('../engine/classic');\n\nvar _index3 = require('./database/index');\n\nvar _index4 = require('../store/index');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _dataFns = (0, _data_utils.dataFns)(['enterprise']),\n    get = _dataFns.get,\n    initNS = _dataFns.initNS,\n    tget = _dataFns.tget,\n    tremove = _dataFns.tremove,\n    tset = _dataFns.tset;\n\nvar _dataFns2 = (0, _data_utils.dataFns)(['core']),\n    tremoveCore = _dataFns2.tremove,\n    tsetCore = _dataFns2.tset,\n    tgetCore = _dataFns2.tget;\n\n// TODO: Android version also has \"google-opendid\" in the list, but we\n// consider it to be a social connection. See\n// https://github.com/auth0/Lock.Android/blob/98262cb7110e5d1c8a97e1129faf2621c1d8d111/lock/src/main/java/com/auth0/android/lock/utils/Strategies.java\n\n\nvar STRATEGIES = exports.STRATEGIES = {\n  ad: 'AD / LDAP',\n  adfs: 'ADFS',\n  'auth0-adldap': 'AD/LDAP',\n  'auth0-oidc': 'Auth0 OpenID Connect',\n  custom: 'Custom Auth',\n  'google-apps': 'Google Apps',\n  ip: 'IP Address',\n  mscrm: 'Dynamics CRM',\n  office365: 'Office365',\n  pingfederate: 'Ping Federate',\n  samlp: 'SAML',\n  sharepoint: 'SharePoint Apps',\n  waad: 'Windows Azure AD',\n  oidc: 'OpenID Connect'\n};\n\nfunction initEnterprise(m, opts) {\n  return initNS(m, _immutable2.default.fromJS(processOptions(opts)));\n}\n\nfunction processOptions(opts) {\n  var defaultEnterpriseConnection = opts.defaultEnterpriseConnection;\n\n\n  if (defaultEnterpriseConnection != undefined && typeof defaultEnterpriseConnection !== 'string') {\n    l.warn(opts, 'The `defaultEnterpriseConnection` option will be ignored, because it is not a string.');\n    defaultEnterpriseConnection = undefined;\n  }\n\n  return defaultEnterpriseConnection === undefined ? {} : { defaultConnectionName: defaultEnterpriseConnection };\n}\n\nfunction defaultEnterpriseConnection(m) {\n  var name = defaultEnterpriseConnectionName(m);\n  return name && findADConnectionWithoutDomain(m, name);\n}\n\nfunction defaultEnterpriseConnectionName(m) {\n  return get(m, 'defaultConnectionName');\n}\n\nfunction enterpriseActiveFlowConnection(m) {\n  if (isHRDActive(m)) {\n    // HRD is active when an email matched or there is only one\n    // connection and it is enterprise\n    var email = tget(m, 'hrdEmail', '');\n    return matchConnection(m, email) || findActiveFlowConnection(m);\n  } else {\n    return defaultEnterpriseConnection(m) || findADConnectionWithoutDomain(m);\n  }\n}\n\nfunction matchConnection(m, email) {\n  var strategies = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  var target = (0, _email.emailDomain)(email);\n  if (!target) return false;\n  return l.connections.apply(l, [m, 'enterprise'].concat(strategies)).find(function (x) {\n    return x.get('domains').contains(target);\n  });\n}\n\nfunction isEnterpriseDomain(m, email) {\n  var strategies = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  return !!matchConnection(m, email, strategies);\n}\n\nfunction enterpriseDomain(m) {\n  return isSingleHRDConnection(m) ? l.connections(m, 'enterprise').getIn([0, 'domains', 0]) : (0, _email.emailDomain)(tget(m, 'hrdEmail'));\n}\n\nfunction quickAuthConnection(m) {\n  return !isADEnabled(m) && l.hasOneConnection(m, 'enterprise') ? l.connections(m, 'enterprise').get(0) : null;\n}\n\n// ad / adldap\n// https://github.com/auth0/Lock.Android/blob/0145b6853a8de0df5e63ef22e4e2bc40be97ad9e/lock/src/main/java/com/auth0/android/lock/utils/Strategy.java#L67\n\nfunction isADEnabled(m) {\n  return l.hasSomeConnections(m, 'enterprise', 'ad', 'auth0-adldap');\n}\n\nfunction findADConnectionWithoutDomain(m) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n  return l.connections(m, 'enterprise', 'ad', 'auth0-adldap').find(function (x) {\n    return x.get('domains').isEmpty() && (!name || x.get('name') === name);\n  });\n}\n\nfunction findActiveFlowConnection(m) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n  return l.connections(m, 'enterprise', 'ad', 'auth0-adldap').find(function (x) {\n    return !name || x.get('name') === name;\n  });\n}\n\n// kerberos\n\nfunction isInCorpNetwork(m) {\n  return corpNetworkConnection(m) !== undefined;\n}\n\nfunction corpNetworkConnection(m) {\n  // Information about connection is stored in to flat properties connection and strategy.\n  // If connection is present, strategy will always be present as defined by the server.\n  var name = m.getIn(['sso', 'connection']);\n  var strategy = m.getIn(['sso', 'strategy']);\n\n  return name && strategy && _immutable2.default.Map({ name: name, strategy: strategy });\n}\n\n// hrd\n\nfunction isSingleHRDConnection(m) {\n  return isADEnabled(m) && l.connections(m).count() === 1;\n}\n\nfunction isHRDDomain(m, email) {\n  return isEnterpriseDomain(m, email, ['ad', 'auth0-adldap']);\n}\n\nfunction toggleHRD(m, email) {\n  if (email) {\n    var username = l.defaultADUsernameFromEmailPrefix(m) ? (0, _email.emailLocalPart)(email) : email;\n\n    m = (0, _username.setUsername)(m, username, 'username', false);\n    m = tset(m, 'hrdEmail', email);\n  } else {\n    var hrdEmail = tget(m, 'hrdEmail');\n    if (hrdEmail) {\n      m = (0, _username.setUsername)(m, hrdEmail, 'email', false);\n    }\n    m = tremove(m, 'hrdEmail');\n  }\n\n  return tset(m, 'hrd', !!email);\n}\n\nfunction isHRDActive(m) {\n  return tget(m, 'hrd', isSingleHRDConnection(m));\n}\n\nfunction isHRDEmailValid(m, str) {\n  if ((0, _email.isEmail)(str) && !l.hasSomeConnections(m, 'database') && !l.hasSomeConnections(m, 'passwordless') && !findADConnectionWithoutDomain(m) && !(0, _classic.matchesEnterpriseConnection)(m, str)) {\n    return false;\n  }\n\n  return true;\n}\n"]},"metadata":{},"sourceType":"script"}