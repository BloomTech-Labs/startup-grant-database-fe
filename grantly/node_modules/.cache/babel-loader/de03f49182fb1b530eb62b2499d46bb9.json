{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('./core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _classic = require('./engine/classic');\n\nvar _classic2 = _interopRequireDefault(_classic);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Auth0Lock = function (_Core) {\n  _inherits(Auth0Lock, _Core);\n\n  function Auth0Lock(clientID, domain, options) {\n    _classCallCheck(this, Auth0Lock);\n\n    var _this = _possibleConstructorReturn(this, _Core.call(this, clientID, domain, options, _classic2.default));\n\n    (0, _core.injectStyles)();\n    (0, _core.setWindowHeightStyle)();\n    window.addEventListener('resize', function () {\n      (0, _core.setWindowHeightStyle)();\n    });\n    return _this;\n  }\n\n  return Auth0Lock;\n}(_core2.default); // telemetry\n\n\nexports.default = Auth0Lock;\nAuth0Lock.version = '11.21.0'; // TODO: should we have different telemetry for classic/passwordless?\n// TODO: should we set telemetry info before each request?\n// TODO: should we inject styles here?","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/node_modules/auth0-lock/lib/lock.js"],"names":["exports","__esModule","_core","require","_core2","_interopRequireDefault","_classic","_classic2","obj","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","Auth0Lock","_Core","clientID","domain","options","_this","injectStyles","setWindowHeightStyle","window","addEventListener","version"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACH,KAAD,CAAnC;;AAEA,IAAII,QAAQ,GAAGH,OAAO,CAAC,kBAAD,CAAtB;;AAEA,IAAII,SAAS,GAAGF,sBAAsB,CAACC,QAAD,CAAtC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACP,UAAX,GAAwBO,GAAxB,GAA8B;AAAEC,IAAAA,OAAO,EAAED;AAAX,GAArC;AAAwD;;AAE/F,SAASE,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,0BAAT,CAAoCC,IAApC,EAA0CC,IAA1C,EAAgD;AAAE,MAAI,CAACD,IAAL,EAAW;AAAE,UAAM,IAAIE,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOD,IAAI,KAAK,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,UAAjD,CAAJ,GAAmEA,IAAnE,GAA0ED,IAAjF;AAAwF;;AAEhP,SAASG,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAAE,UAAM,IAAIP,SAAJ,CAAc,6DAA6D,OAAOO,UAAlF,CAAN;AAAsG;;AAACD,EAAAA,QAAQ,CAACE,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAcH,UAAU,IAAIA,UAAU,CAACC,SAAvC,EAAkD;AAAEG,IAAAA,WAAW,EAAE;AAAEC,MAAAA,KAAK,EAAEN,QAAT;AAAmBO,MAAAA,UAAU,EAAE,KAA/B;AAAsCC,MAAAA,QAAQ,EAAE,IAAhD;AAAsDC,MAAAA,YAAY,EAAE;AAApE;AAAf,GAAlD,CAArB;AAAqK,MAAIR,UAAJ,EAAgBE,MAAM,CAACO,cAAP,GAAwBP,MAAM,CAACO,cAAP,CAAsBV,QAAtB,EAAgCC,UAAhC,CAAxB,GAAsED,QAAQ,CAACW,SAAT,GAAqBV,UAA3F;AAAwG;;AAE9e,IAAIW,SAAS,GAAG,UAAUC,KAAV,EAAiB;AAC/Bd,EAAAA,SAAS,CAACa,SAAD,EAAYC,KAAZ,CAAT;;AAEA,WAASD,SAAT,CAAmBE,QAAnB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8C;AAC5CzB,IAAAA,eAAe,CAAC,IAAD,EAAOqB,SAAP,CAAf;;AAEA,QAAIK,KAAK,GAAGtB,0BAA0B,CAAC,IAAD,EAAOkB,KAAK,CAAChB,IAAN,CAAW,IAAX,EAAiBiB,QAAjB,EAA2BC,MAA3B,EAAmCC,OAAnC,EAA4C5B,SAAS,CAACE,OAAtD,CAAP,CAAtC;;AAEA,KAAC,GAAGP,KAAK,CAACmC,YAAV;AACA,KAAC,GAAGnC,KAAK,CAACoC,oBAAV;AAEAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,YAAY;AAC5C,OAAC,GAAGtC,KAAK,CAACoC,oBAAV;AACD,KAFD;AAGA,WAAOF,KAAP;AACD;;AAED,SAAOL,SAAP;AACD,CAlBe,CAkBd3B,MAAM,CAACK,OAlBO,CAAhB,C,CAoBA;;;AAGAT,OAAO,CAACS,OAAR,GAAkBsB,SAAlB;AACAA,SAAS,CAACU,OAAV,GAAoB,SAApB,C,CAEA;AACA;AACA","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('./core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _classic = require('./engine/classic');\n\nvar _classic2 = _interopRequireDefault(_classic);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Auth0Lock = function (_Core) {\n  _inherits(Auth0Lock, _Core);\n\n  function Auth0Lock(clientID, domain, options) {\n    _classCallCheck(this, Auth0Lock);\n\n    var _this = _possibleConstructorReturn(this, _Core.call(this, clientID, domain, options, _classic2.default));\n\n    (0, _core.injectStyles)();\n    (0, _core.setWindowHeightStyle)();\n\n    window.addEventListener('resize', function () {\n      (0, _core.setWindowHeightStyle)();\n    });\n    return _this;\n  }\n\n  return Auth0Lock;\n}(_core2.default);\n\n// telemetry\n\n\nexports.default = Auth0Lock;\nAuth0Lock.version = '11.21.0';\n\n// TODO: should we have different telemetry for classic/passwordless?\n// TODO: should we set telemetry info before each request?\n// TODO: should we inject styles here?\n"]},"metadata":{},"sourceType":"script"}