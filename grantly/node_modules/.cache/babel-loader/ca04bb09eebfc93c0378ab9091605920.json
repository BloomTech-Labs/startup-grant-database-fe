{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/suggestion/formElements/GrantInfoForm.jsx\";\nimport React, { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport formStyles from \"../formElements/formStyles\";\nimport { Grid, Typography, TextField, Divider } from \"@material-ui/core\";\nimport { TextFormField } from \"../formElements/TextFormField.jsx\";\nconst useStyles = makeStyles(theme => ({\n  bottomBox: {\n    padding: theme.spacing(2, 6, 1, 6)\n  }\n}));\nconst infoFieldData = [{\n  label: \"Grant Name\",\n  type: \"text\",\n  name: \"competition_name\",\n  multiline: false\n}, {\n  label: \"Website\",\n  type: \"url\",\n  name: \"website\",\n  multiline: false\n}, {\n  label: \"Amount\",\n  type: \"number\",\n  name: \"amount\",\n  multiline: false\n}, {\n  label: \"Amount Notes\",\n  type: \"text\",\n  name: \"amount_notes\",\n  rows: \"3\",\n  variant: \"outlined\",\n  multiline: true\n}]; // const checkMultiline = arg => {\n//   return arg === \"amount_notes\" ? multiline : \"\";\n// };\n// console.log(checkMultiline(\"amount_notes\"));\n\nexport const GrantInfoForm = props => {\n  const styles = useStyles();\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    className: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Grant Info\"), React.createElement(Divider, {\n    variant: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    className: styles.bottomBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, infoFieldData.map(data => (console.log(data.rows), React.createElement(TextFormField, {\n    label: data.label,\n    type: data.type,\n    name: data.name,\n    rows: data.rows,\n    variant: data.variant,\n    multiline: data.multiline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })))));\n};","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/suggestion/formElements/GrantInfoForm.jsx"],"names":["React","Fragment","makeStyles","connect","formStyles","Grid","Typography","TextField","Divider","TextFormField","useStyles","theme","bottomBox","padding","spacing","infoFieldData","label","type","name","multiline","rows","variant","GrantInfoForm","props","styles","map","data","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,OAAtC,QAAqD,mBAArD;AACA,SAASC,aAAT,QAA8B,mCAA9B;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAACS,KAAK,KAAK;AACrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AADA;AAD0B,CAAL,CAAN,CAA5B;AAMA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,IAAI,EAAE,kBAHR;AAIEC,EAAAA,SAAS,EAAE;AAJb,CADoB,EAOpB;AAAEH,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,IAAI,EAAE,KAA1B;AAAiCC,EAAAA,IAAI,EAAE,SAAvC;AAAkDC,EAAAA,SAAS,EAAE;AAA7D,CAPoB,EAQpB;AAAEH,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,IAAI,EAAE,QAAzB;AAAmCC,EAAAA,IAAI,EAAE,QAAzC;AAAmDC,EAAAA,SAAS,EAAE;AAA9D,CARoB,EASpB;AACEH,EAAAA,KAAK,EAAE,cADT;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,IAAI,EAAE,cAHR;AAIEE,EAAAA,IAAI,EAAE,GAJR;AAKEC,EAAAA,OAAO,EAAE,UALX;AAMEF,EAAAA,SAAS,EAAE;AANb,CAToB,CAAtB,C,CAmBA;AACA;AACA;AAEA;;AAEA,OAAO,MAAMG,aAAa,GAAGC,KAAK,IAAI;AACpC,QAAMC,MAAM,GAAGd,SAAS,EAAxB;AACA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,SAAS,EAAEc,MAAM,CAACZ,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,aAAa,CAACU,GAAd,CACCC,IAAI,KACFC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACN,IAAjB,GAEE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAEM,IAAI,CAACV,KADd;AAEE,IAAA,IAAI,EAAEU,IAAI,CAACT,IAFb;AAGE,IAAA,IAAI,EAAES,IAAI,CAACR,IAHb;AAIE,IAAA,IAAI,EAAEQ,IAAI,CAACN,IAJb;AAKE,IAAA,OAAO,EAAEM,IAAI,CAACL,OALhB;AAME,IAAA,SAAS,EAAEK,IAAI,CAACP,SANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CADL,CADH,CALF,CADF;AAyBD,CA3BM","sourcesContent":["import React, { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport formStyles from \"../formElements/formStyles\";\nimport { Grid, Typography, TextField, Divider } from \"@material-ui/core\";\nimport { TextFormField } from \"../formElements/TextFormField.jsx\";\n\nconst useStyles = makeStyles(theme => ({\n  bottomBox: {\n    padding: theme.spacing(2, 6, 1, 6)\n  }\n}));\n\nconst infoFieldData = [\n  {\n    label: \"Grant Name\",\n    type: \"text\",\n    name: \"competition_name\",\n    multiline: false\n  },\n  { label: \"Website\", type: \"url\", name: \"website\", multiline: false },\n  { label: \"Amount\", type: \"number\", name: \"amount\", multiline: false },\n  {\n    label: \"Amount Notes\",\n    type: \"text\",\n    name: \"amount_notes\",\n    rows: \"3\",\n    variant: \"outlined\",\n    multiline: true\n  }\n];\n\n// const checkMultiline = arg => {\n//   return arg === \"amount_notes\" ? multiline : \"\";\n// };\n\n// console.log(checkMultiline(\"amount_notes\"));\n\nexport const GrantInfoForm = props => {\n  const styles = useStyles();\n  return (\n    <Fragment>\n      <Typography variant=\"h5\" className={null}>\n        Grant Info\n      </Typography>\n      <Divider variant=\"middle\" />\n      <Grid container spacing={3} className={styles.bottomBox}>\n        {infoFieldData.map(\n          data => (\n            console.log(data.rows),\n            (\n              <TextFormField\n                label={data.label}\n                type={data.type}\n                name={data.name}\n                rows={data.rows}\n                variant={data.variant}\n                multiline={data.multiline}\n              />\n            )\n          )\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}