{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/auth0/Auth0Wrapper.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\nimport Auth0Lock from \"auth0-lock\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () => window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nconst clientId = `${process.env.REACT_APP_CLIENT_ID}`;\nconst domain = `${process.env.REACT_APP_CLIENT_DOMAIN}`;\nconst options = {\n  languageDictionary: {\n    emailInputPlaceholder: \"Enter your email\",\n    passwordInputPlaceholder: \"Enter your password\",\n    title: \"Welcome\"\n  },\n  popupOptions: {\n    width: 300,\n    height: 400,\n    left: 200,\n    top: 300\n  },\n  theme: {\n    primaryColor: \"#3DB8B3\",\n    authButtons: {\n      testConnection: {\n        displayName: \"Test Conn\",\n        primaryColor: \"#3DB8B3\",\n        foregroundColor: \"#000000\",\n        icon: \"http://example.com/icon.png\"\n      },\n      testConnection2: {\n        primaryColor: \"#000000\",\n        foregroundColor: \"#ffffff\"\n      }\n    }\n  },\n  additionalSignUpFields: [{\n    name: \"First_name\",\n    placeholder: \"Enter your first name\"\n  }, {\n    name: \"Last_name\",\n    placeholder: \"Enter your last name\"\n  }]\n};\nexport const lock = new Auth0Lock(clientId, domain, options);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n  console.log(clientId, domain);\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\")) {\n        const {\n          appState\n        } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n\n    initAuth0();\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n\n  lock.on(\"authenticated\", function (authResult) {\n    lock.getUserInfo(authResult.accessToken, function (error, profile) {\n      if (error) {\n        // Handle error\n        return;\n      }\n\n      localStorage.setItem(\"accessToken\", authResult.accessToken);\n      localStorage.setItem(\"profile\", JSON.stringify(profile));\n      setIsAuthenticated(true);\n      setUser(JSON.stringify(profile));\n      return \"Success\"; // Update DOM\n    });\n  });\n  return React.createElement(Auth0Context.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      popupOpen,\n      loginWithPopup,\n      handleRedirectCallback,\n      getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n      loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n      getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n      getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n      logout: (...p) => auth0Client.logout(...p)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/components/auth0/Auth0Wrapper.jsx"],"names":["React","useState","useEffect","useContext","createAuth0Client","Auth0Lock","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","createContext","useAuth0","clientId","process","env","REACT_APP_CLIENT_ID","domain","REACT_APP_CLIENT_DOMAIN","options","languageDictionary","emailInputPlaceholder","passwordInputPlaceholder","popupOptions","width","height","left","top","theme","primaryColor","authButtons","testConnection","displayName","foregroundColor","icon","testConnection2","additionalSignUpFields","name","placeholder","lock","Auth0Provider","children","onRedirectCallback","initOptions","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","console","log","initAuth0","auth0FromHook","search","includes","appState","handleRedirectCallback","getUser","loginWithPopup","params","error","on","authResult","getUserInfo","accessToken","profile","localStorage","setItem","JSON","stringify","getIdTokenClaims","p","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\nimport Auth0Lock from \"auth0-lock\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n    window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\n\nconst clientId = `${process.env.REACT_APP_CLIENT_ID}`;\nconst domain = `${process.env.REACT_APP_CLIENT_DOMAIN}`;\nconst options = {\n    languageDictionary: {\n        emailInputPlaceholder: \"Enter your email\",\n        passwordInputPlaceholder: \"Enter your password\",\n\n        title: \"Welcome\"\n    },\n    popupOptions: { width: 300, height: 400, left: 200, top: 300 },\n\n    theme: {\n        primaryColor: \"#3DB8B3\",\n\n        authButtons: {\n            testConnection: {\n                displayName: \"Test Conn\",\n                primaryColor: \"#3DB8B3\",\n                foregroundColor: \"#000000\",\n                icon: \"http://example.com/icon.png\"\n            },\n            testConnection2: {\n                primaryColor: \"#000000\",\n                foregroundColor: \"#ffffff\"\n            }\n        }\n    },\n    additionalSignUpFields: [\n        {\n            name: \"First_name\",\n            placeholder: \"Enter your first name\"\n        },\n        {\n            name: \"Last_name\",\n            placeholder: \"Enter your last name\"\n        }\n    ]\n};\nexport const lock = new Auth0Lock(clientId, domain, options);\n\nexport const Auth0Provider = ({\n                                  children,\n                                  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n                                  ...initOptions\n                              }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState();\n    const [user, setUser] = useState();\n    const [auth0Client, setAuth0] = useState();\n    const [loading, setLoading] = useState(true);\n    const [popupOpen, setPopupOpen] = useState(false);\n\n    console.log(clientId, domain);\n\n    useEffect(() => {\n        const initAuth0 = async () => {\n            const auth0FromHook = await createAuth0Client(initOptions);\n            setAuth0(auth0FromHook);\n\n            if (window.location.search.includes(\"code=\")) {\n                const { appState } = await auth0FromHook.handleRedirectCallback();\n                onRedirectCallback(appState);\n            }\n\n            const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n            setIsAuthenticated(isAuthenticated);\n\n            if (isAuthenticated) {\n                const user = await auth0FromHook.getUser();\n                setUser(user);\n            }\n            setLoading(false);\n        };\n        initAuth0();\n    }, []);\n\n    const loginWithPopup = async (params = {}) => {\n        setPopupOpen(true);\n        try {\n            await auth0Client.loginWithPopup(params);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setPopupOpen(false);\n        }\n        const user = await auth0Client.getUser();\n        setUser(user);\n        setIsAuthenticated(true);\n    };\n\n    const handleRedirectCallback = async () => {\n        setLoading(true);\n        await auth0Client.handleRedirectCallback();\n        const user = await auth0Client.getUser();\n        setLoading(false);\n        setIsAuthenticated(true);\n        setUser(user);\n    };\n\n    lock.on(\"authenticated\", function(authResult) {\n        lock.getUserInfo(authResult.accessToken, function(error, profile) {\n            if (error) {\n                // Handle error\n                return;\n            }\n\n            localStorage.setItem(\"accessToken\", authResult.accessToken);\n            localStorage.setItem(\"profile\", JSON.stringify(profile));\n            setIsAuthenticated(true);\n            setUser(JSON.stringify(profile));\n\n            return \"Success\";\n            // Update DOM\n        });\n    });\n    return (\n        <Auth0Context.Provider\n            value={{\n                isAuthenticated,\n                user,\n                loading,\n                popupOpen,\n                loginWithPopup,\n                handleRedirectCallback,\n                getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n                loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n                getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n                getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n                logout: (...p) => auth0Client.logout(...p)\n            }}\n        >\n            {children}\n        </Auth0Context.Provider>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}