{"ast":null,"code":"import { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { UserTypes } from \"./userTypes\";\nimport { axiosWithAuth, axiosWithOutAuth as axios } from \"../utils/axiosConfig\";\nexport const useUserActions = () => {\n  const dispatch = useDispatch();\n  const getUserFromPG = useCallback(email => {\n    dispatch({\n      type: UserTypes.FETCH_USER_START\n    }); // @ts-ignore\n\n    axios().post(`/users`, email).then(res => {\n      dispatch({\n        type: UserTypes.FETCH_USER_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      const data = err && err.response && err.response.data ? err.response.data : err;\n      dispatch({\n        type: UserTypes.FETCH_USER_FAILURE,\n        payload: data\n      });\n    });\n  }, [dispatch]);\n  const getUserByEmail = useCallback((email, token) => {\n    dispatch({\n      type: UserTypes.FETCH_USER_START\n    }); // @ts-ignore\n\n    axiosWithAuth(token).get(`/users/${email}`).then(res => {\n      dispatch({\n        type: UserTypes.FETCH_USER_SUCCESS\n      });\n    }).catch(err => {\n      const data = err && err.response && err.response.data ? err.response.data : err;\n      dispatch({\n        type: UserTypes.FETCH_USER_FAILURE,\n        payload: data\n      });\n    });\n  }, [dispatch]);\n  const getFavorites = useCallback((token, authId) => {\n    dispatch({\n      type: UserTypes.FETCH_FAVORITES_START\n    });\n    axiosWithAuth(token).get(`/favorites/myFavorites/${authId}`).then(res => dispatch({\n      type: UserTypes.FETCH_FAVORITES_SUCCESS,\n      payload: res.data\n    })).catch(error => dispatch({\n      type: UserTypes.FETCH_FAVORITES_FAILURE,\n      payload: error.response.data\n    }));\n  }, [dispatch]);\n  const addFavorite = useCallback((token, grant_id, auth_id) => {\n    dispatch({\n      type: UserTypes.POST_FAVORITES_START\n    });\n    axiosWithAuth(token).post(\"/favorites\", {\n      grant_id,\n      auth_id\n    }).then(res => dispatch({\n      type: UserTypes.POST_FAVORITES_SUCCESS,\n      payload: res.data\n    })).catch(error => dispatch({\n      type: UserTypes.POST_FAVORITES_FAILURE,\n      payload: error.response\n    }));\n  }, [dispatch]);\n  const setUserFromAuth0 = useCallback(user => {\n    dispatch({\n      type: UserTypes.SET_USER_FROM_AUTH0,\n      payload: user\n    });\n  }, [dispatch]);\n  const resetUser = useCallback(() => {\n    dispatch({\n      type: UserTypes.RESET_USER\n    });\n  }, [dispatch]);\n  const isModerator = useCallback(() => {\n    dispatch({\n      type: UserTypes.IS_MODERATOR\n    });\n  }, [dispatch]);\n  const setToken = useCallback(token => {\n    dispatch({\n      type: UserTypes.SET_TOKEN,\n      payload: token\n    });\n  }, [dispatch]);\n  const removeFavorite = useCallback((token, favoriteId) => {\n    dispatch({\n      type: UserTypes.REMOVE_FAVORITES_START\n    });\n    axiosWithAuth(token).delete(`/favorites/myFavorites/${favoriteId}`).then(() => dispatch({\n      type: UserTypes.REMOVE_FAVORITES_SUCCESS,\n      payload: favoriteId\n    })).catch(err => dispatch({\n      type: UserTypes.REMOVE_FAVORITES_FAILURE,\n      payload: err.response.data\n    }));\n  }, [dispatch]);\n  const removeUser = useCallback((token, id) => {\n    dispatch({\n      type: UserTypes.REMOVE_USER_START\n    });\n    axiosWithAuth(token).delete(`/users/${id}`).then(() => {\n      dispatch({\n        type: UserTypes.REMOVE_USER_SUCCESS\n      });\n    }).catch(() => {\n      dispatch({\n        type: UserTypes.REMOVE_USER_FAILURE\n      });\n    });\n  }, [dispatch]);\n  const updateUser = useCallback((token, email, data) => {\n    dispatch({\n      type: UserTypes.UPDATE_USER_START\n    });\n    axiosWithAuth(token).put(`/users/${email}`, data).then(() => {\n      dispatch({\n        type: UserTypes.UPDATE_USER_SUCCESS\n      });\n    }).catch(() => {\n      dispatch({\n        type: UserTypes.UPDATE_USER_FAILURE\n      });\n    });\n  }, [dispatch]);\n  return {\n    getUserFromPG,\n    setUserFromAuth0,\n    resetUser,\n    isModerator,\n    setToken,\n    getFavorites,\n    addFavorite,\n    removeUser,\n    updateUser,\n    removeFavorite,\n    getUserByEmail\n  };\n};","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/store/user/useUserActions.tsx"],"names":["useCallback","useDispatch","UserTypes","axiosWithAuth","axiosWithOutAuth","axios","useUserActions","dispatch","getUserFromPG","email","type","FETCH_USER_START","post","then","res","FETCH_USER_SUCCESS","payload","data","catch","err","response","FETCH_USER_FAILURE","getUserByEmail","token","get","getFavorites","authId","FETCH_FAVORITES_START","FETCH_FAVORITES_SUCCESS","error","FETCH_FAVORITES_FAILURE","addFavorite","grant_id","auth_id","POST_FAVORITES_START","POST_FAVORITES_SUCCESS","POST_FAVORITES_FAILURE","setUserFromAuth0","user","SET_USER_FROM_AUTH0","resetUser","RESET_USER","isModerator","IS_MODERATOR","setToken","SET_TOKEN","removeFavorite","favoriteId","REMOVE_FAVORITES_START","delete","REMOVE_FAVORITES_SUCCESS","REMOVE_FAVORITES_FAILURE","removeUser","id","REMOVE_USER_START","REMOVE_USER_SUCCESS","REMOVE_USER_FAILURE","updateUser","UPDATE_USER_START","put","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE"],"mappings":"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","sourcesContent":["import { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { User, UserTypes } from \"./userTypes\";\nimport { AxiosError, AxiosResponse } from \"axios\";\nimport { axiosWithAuth, axiosWithOutAuth as axios } from \"../utils/axiosConfig\";\nimport { type } from \"os\";\n\nexport const useUserActions = () => {\n  const dispatch = useDispatch();\n\n  const getUserFromPG = useCallback(\n    email => {\n      dispatch({ type: UserTypes.FETCH_USER_START });\n      // @ts-ignore\n      axios()\n        .post(`/users`, email)\n        .then((res: AxiosResponse) => {\n          dispatch({ type: UserTypes.FETCH_USER_SUCCESS, payload: res.data });\n        })\n        .catch((err: AxiosError) => {\n          const data =\n            err && err.response && err.response.data ? err.response.data : err;\n          dispatch({ type: UserTypes.FETCH_USER_FAILURE, payload: data });\n        });\n    },\n    [dispatch]\n  );\n  const getUserByEmail = useCallback(\n    (email: string, token: string) => {\n      dispatch({ type: UserTypes.FETCH_USER_START });\n      // @ts-ignore\n      axiosWithAuth(token)\n        .get(`/users/${email}`)\n        .then((res: AxiosResponse) => {\n          dispatch({ type: UserTypes.FETCH_USER_SUCCESS });\n        })\n        .catch((err: AxiosError) => {\n          const data =\n            err && err.response && err.response.data ? err.response.data : err;\n          dispatch({ type: UserTypes.FETCH_USER_FAILURE, payload: data });\n        });\n    },\n    [dispatch]\n  );\n\n  const getFavorites = useCallback(\n    (token: string, authId: string) => {\n      dispatch({ type: UserTypes.FETCH_FAVORITES_START });\n      axiosWithAuth(token)\n        .get(`/favorites/myFavorites/${authId}`)\n        .then(res =>\n          dispatch({\n            type: UserTypes.FETCH_FAVORITES_SUCCESS,\n            payload: res.data\n          })\n        )\n        .catch(error =>\n          dispatch({\n            type: UserTypes.FETCH_FAVORITES_FAILURE,\n            payload: error.response.data\n          })\n        );\n    },\n    [dispatch]\n  );\n\n  const addFavorite = useCallback(\n    (token: string, grant_id: number, auth_id: string) => {\n      dispatch({ type: UserTypes.POST_FAVORITES_START });\n      axiosWithAuth(token)\n        .post(\"/favorites\", { grant_id, auth_id })\n        .then(res =>\n          dispatch({\n            type: UserTypes.POST_FAVORITES_SUCCESS,\n            payload: res.data\n          })\n        )\n        .catch(error =>\n          dispatch({\n            type: UserTypes.POST_FAVORITES_FAILURE,\n            payload: error.response\n          })\n        );\n    },\n    [dispatch]\n  );\n\n  const setUserFromAuth0 = useCallback(\n    (user: User) => {\n      dispatch({ type: UserTypes.SET_USER_FROM_AUTH0, payload: user });\n    },\n    [dispatch]\n  );\n\n  const resetUser = useCallback(() => {\n    dispatch({ type: UserTypes.RESET_USER });\n  }, [dispatch]);\n\n  const isModerator = useCallback(() => {\n    dispatch({ type: UserTypes.IS_MODERATOR });\n  }, [dispatch]);\n\n  const setToken = useCallback(\n    (token: string) => {\n      dispatch({ type: UserTypes.SET_TOKEN, payload: token });\n    },\n    [dispatch]\n  );\n\n  const removeFavorite = useCallback(\n    (token: string, favoriteId: number) => {\n      dispatch({ type: UserTypes.REMOVE_FAVORITES_START });\n      axiosWithAuth(token)\n        .delete(`/favorites/myFavorites/${favoriteId}`)\n        .then(() =>\n          dispatch({\n            type: UserTypes.REMOVE_FAVORITES_SUCCESS,\n            payload: favoriteId\n          })\n        )\n        .catch(err =>\n          dispatch({\n            type: UserTypes.REMOVE_FAVORITES_FAILURE,\n            payload: err.response.data\n          })\n        );\n    },\n    [dispatch]\n  );\n\n  const removeUser = useCallback(\n    (token: string, id: number) => {\n      dispatch({ type: UserTypes.REMOVE_USER_START });\n      axiosWithAuth(token)\n        .delete(`/users/${id}`)\n        .then(() => {\n          dispatch({ type: UserTypes.REMOVE_USER_SUCCESS });\n        })\n        .catch(() => {\n          dispatch({ type: UserTypes.REMOVE_USER_FAILURE });\n        });\n    },\n    [dispatch]\n  );\n\n  const updateUser = useCallback(\n    (token: string, email: string, data: User) => {\n      dispatch({ type: UserTypes.UPDATE_USER_START });\n      axiosWithAuth(token)\n        .put(`/users/${email}`, data)\n        .then(() => {\n          dispatch({ type: UserTypes.UPDATE_USER_SUCCESS });\n        })\n        .catch(() => {\n          dispatch({ type: UserTypes.UPDATE_USER_FAILURE });\n        });\n    },\n    [dispatch]\n  );\n\n  return {\n    getUserFromPG,\n    setUserFromAuth0,\n    resetUser,\n    isModerator,\n    setToken,\n    getFavorites,\n    addFavorite,\n    removeUser,\n    updateUser,\n    removeFavorite,\n    getUserByEmail\n  };\n};\n\nexport interface UseUserActions {\n  getUserFromPG: (email: string) => void;\n  setUserFromAuth0: (user: User) => void;\n  resetUser: () => void;\n  isModerator: () => void;\n  setToken: (token: string) => void;\n  getFavorites: (token: string, authId: string) => void;\n  addFavorite: (token: string, grant_id: number, authId: string) => void;\n  removeFavorite: (token: string, favoriteId: number) => void;\n  removeUser: (token: string, id: number) => void;\n  updateUser: (token: string, id: number, data: User) => void;\n}\n"]},"metadata":{},"sourceType":"module"}