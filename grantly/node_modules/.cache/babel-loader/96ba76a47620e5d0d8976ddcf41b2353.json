{"ast":null,"code":"var format = require('util').format;\n\nvar PasswordPolicyError = require('./policy_error');\n\nfunction isString(value) {\n  return typeof value === 'string' || value instanceof String;\n}\n\nvar defaultRuleset = {\n  length: require('./rules/length'),\n  contains: require('./rules/contains'),\n  containsAtLeast: require('./rules/containsAtLeast'),\n  identicalChars: require('./rules/identicalChars')\n};\n\nfunction flatDescriptions(descriptions, index) {\n  if (!descriptions.length) {\n    return '';\n  }\n\n  function flatSingleDescription(description, index) {\n    var spaces = new Array(index + 1).join(' ');\n    var result = spaces + '* ';\n\n    if (description.format) {\n      result += format.apply(null, [description.message].concat(description.format));\n    } else {\n      result += description.message;\n    }\n\n    if (description.items) {\n      result += '\\n' + spaces + flatDescriptions(description.items, index + 1);\n    }\n\n    return result;\n  }\n\n  var firstDescription = flatSingleDescription(descriptions[0], index);\n  descriptions = descriptions.slice(1).reduce(function (result, description) {\n    result += '\\n' + flatSingleDescription(description, index);\n    return result;\n  }, firstDescription);\n  return descriptions;\n}\n/**\n * Creates a PasswordPolicy which is a set of rules.\n *\n * @class PasswordPolicy\n * @constructor\n */\n\n\nfunction PasswordPolicy(rules, ruleset) {\n  this.rules = rules;\n  this.ruleset = ruleset || defaultRuleset;\n\n  this._reduce(function (result, ruleOptions, rule) {\n    rule.validate(ruleOptions);\n  });\n}\n\nPasswordPolicy.prototype = {};\n\nPasswordPolicy.prototype._reduce = function (fn, value) {\n  var self = this;\n  return Object.keys(this.rules).reduce(function (result, ruleName) {\n    var ruleOptions = self.rules[ruleName];\n    var rule = self.ruleset[ruleName];\n    return fn(result, ruleOptions, rule);\n  }, value);\n};\n\nPasswordPolicy.prototype._applyRules = function (password) {\n  return this._reduce(function (result, ruleOptions, rule) {\n    // If previous result was false as this an &&, then nothing to do here!\n    if (!result) {\n      return false;\n    }\n\n    if (!rule) {\n      return false;\n    }\n\n    return rule.assert(ruleOptions, password);\n  }, true);\n};\n\nPasswordPolicy.prototype.missing = function (password) {\n  return this._reduce(function (result, ruleOptions, rule) {\n    var missingRule = rule.missing(ruleOptions, password);\n    result.rules.push(missingRule);\n    result.verified = result.verified && !!missingRule.verified;\n    return result;\n  }, {\n    rules: [],\n    verified: true\n  });\n};\n\nPasswordPolicy.prototype.explain = function () {\n  return this._reduce(function (result, ruleOptions, rule) {\n    result.push(rule.explain(ruleOptions));\n    return result;\n  }, []);\n};\n\nPasswordPolicy.prototype.missingAsMarkdown = function (password) {\n  return flatDescriptions(this.missing(password), 1);\n};\n\nPasswordPolicy.prototype.toString = function () {\n  var descriptions = this.explain();\n  return flatDescriptions(descriptions, 0);\n};\n\nPasswordPolicy.prototype.check = function (password) {\n  if (!isString(password)) {\n    return false;\n  }\n\n  return this._applyRules(password);\n};\n\nPasswordPolicy.prototype.assert = function (password) {\n  if (!this.check(password)) {\n    throw new PasswordPolicyError('Password does not meet password policy');\n  }\n};\n\nmodule.exports = PasswordPolicy;","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/node_modules/password-sheriff/lib/policy.js"],"names":["format","require","PasswordPolicyError","isString","value","String","defaultRuleset","length","contains","containsAtLeast","identicalChars","flatDescriptions","descriptions","index","flatSingleDescription","description","spaces","Array","join","result","apply","message","concat","items","firstDescription","slice","reduce","PasswordPolicy","rules","ruleset","_reduce","ruleOptions","rule","validate","prototype","fn","self","Object","keys","ruleName","_applyRules","password","assert","missing","missingRule","push","verified","explain","missingAsMarkdown","toString","check","module","exports"],"mappings":"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","sourcesContent":["var format = require('util').format;\n\nvar PasswordPolicyError = require('./policy_error');\n\nfunction isString(value) {\n  return typeof value === 'string' || value instanceof String;\n}\n\nvar defaultRuleset = {\n  length:           require('./rules/length'),\n  contains:         require('./rules/contains'),\n  containsAtLeast:  require('./rules/containsAtLeast'),\n  identicalChars:   require('./rules/identicalChars'),\n};\n\nfunction flatDescriptions (descriptions, index) {\n  if (!descriptions.length) {\n    return '';\n  }\n\n  function flatSingleDescription (description, index) {\n    var spaces = (new Array(index+1)).join(' ');\n    var result = spaces + '* ';\n    if (description.format) {\n      result += format.apply(null, [description.message].concat(description.format));\n    } else {\n      result += description.message;\n    }\n\n    if (description.items) {\n      result += '\\n' + spaces + flatDescriptions(description.items, index + 1);\n    }\n    return result;\n  }\n\n  var firstDescription = flatSingleDescription(descriptions[0], index);\n\n  descriptions = descriptions.slice(1).reduce(function (result, description) {\n    result += '\\n' + flatSingleDescription(description, index);\n\n    return result;\n  }, firstDescription);\n\n  return descriptions;\n}\n\n/**\n * Creates a PasswordPolicy which is a set of rules.\n *\n * @class PasswordPolicy\n * @constructor\n */\nfunction PasswordPolicy(rules, ruleset) {\n  this.rules = rules;\n  this.ruleset = ruleset || defaultRuleset;\n\n  this._reduce(function (result, ruleOptions, rule) {\n    rule.validate(ruleOptions);\n  });\n}\n\nPasswordPolicy.prototype = {};\n\nPasswordPolicy.prototype._reduce = function (fn, value) {\n  var self = this;\n  return Object.keys(this.rules).reduce(function (result, ruleName) {\n    var ruleOptions = self.rules[ruleName];\n    var rule = self.ruleset[ruleName];\n\n    return fn(result, ruleOptions, rule);\n\n  }, value);\n};\n\nPasswordPolicy.prototype._applyRules = function (password) {\n  return this._reduce(function (result, ruleOptions, rule) {\n    // If previous result was false as this an &&, then nothing to do here!\n    if (!result) {\n      return false;\n    }\n\n    if (!rule) {\n      return false;\n    }\n\n    return rule.assert(ruleOptions, password);\n  }, true);\n};\n\nPasswordPolicy.prototype.missing = function (password) {\n  return this._reduce(function (result, ruleOptions, rule) {\n    var missingRule = rule.missing(ruleOptions, password);\n    result.rules.push(missingRule);\n    result.verified = result.verified && !!missingRule.verified;\n    return result;\n  }, {rules: [], verified: true});\n};\n\nPasswordPolicy.prototype.explain = function () {\n  return this._reduce(function (result, ruleOptions, rule) {\n    result.push(rule.explain(ruleOptions));\n    return result;\n  }, []);\n};\n\nPasswordPolicy.prototype.missingAsMarkdown = function (password) {\n  return flatDescriptions(this.missing(password), 1);\n};\n\nPasswordPolicy.prototype.toString = function () {\n  var descriptions = this.explain();\n  return flatDescriptions(descriptions, 0);\n};\n\nPasswordPolicy.prototype.check = function (password) {\n  if (!isString(password)) {\n    return false;\n  }\n\n  return this._applyRules(password);\n};\n\nPasswordPolicy.prototype.assert = function (password) {\n  if (!this.check(password)) {\n    throw new PasswordPolicyError('Password does not meet password policy');\n  }\n};\n\nmodule.exports = PasswordPolicy;\n"]},"metadata":{},"sourceType":"script"}