{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { consoleSandbox, dynamicRequire, getGlobalObject, isNodeEnv, logger, timestampWithMs, uuid4 } from '@sentry/utils';\nimport { Scope } from './scope';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\n\nexport var API_VERSION = 3;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\n\nvar DEFAULT_BREADCRUMBS = 100;\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\n\nvar MAX_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\n\nvar Hub =\n/** @class */\nfunction () {\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  function Hub(client, scope, _version) {\n    if (scope === void 0) {\n      scope = new Scope();\n    }\n\n    if (_version === void 0) {\n      _version = API_VERSION;\n    }\n\n    this._version = _version;\n    /** Is a {@link Layer}[] containing the client and scope */\n\n    this._stack = [];\n\n    this._stack.push({\n      client: client,\n      scope: scope\n    });\n  }\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n\n\n  Hub.prototype._invokeClient = function (method) {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var top = this.getStackTop();\n\n    if (top && top.client && top.client[method]) {\n      (_a = top.client)[method].apply(_a, tslib_1.__spread(args, [top.scope]));\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.isOlderThan = function (version) {\n    return this._version < version;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.bindClient = function (client) {\n    var top = this.getStackTop();\n    top.client = client;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.pushScope = function () {\n    // We want to clone the content of prev scope\n    var stack = this.getStack();\n    var parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n    var scope = Scope.clone(parentScope);\n    this.getStack().push({\n      client: this.getClient(),\n      scope: scope\n    });\n    return scope;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.popScope = function () {\n    return this.getStack().pop() !== undefined;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.withScope = function (callback) {\n    var scope = this.pushScope();\n\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.getClient = function () {\n    return this.getStackTop().client;\n  };\n  /** Returns the scope of the top stack. */\n\n\n  Hub.prototype.getScope = function () {\n    return this.getStackTop().scope;\n  };\n  /** Returns the scope stack for domains or the process. */\n\n\n  Hub.prototype.getStack = function () {\n    return this._stack;\n  };\n  /** Returns the topmost scope layer in the order domain > local > process. */\n\n\n  Hub.prototype.getStackTop = function () {\n    return this._stack[this._stack.length - 1];\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.captureException = function (exception, hint) {\n    var eventId = this._lastEventId = uuid4();\n    var finalHint = hint; // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n\n    if (!hint) {\n      var syntheticException = void 0;\n\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception;\n      }\n\n      finalHint = {\n        originalException: exception,\n        syntheticException: syntheticException\n      };\n    }\n\n    this._invokeClient('captureException', exception, tslib_1.__assign({}, finalHint, {\n      event_id: eventId\n    }));\n\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.captureMessage = function (message, level, hint) {\n    var eventId = this._lastEventId = uuid4();\n    var finalHint = hint; // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n\n    if (!hint) {\n      var syntheticException = void 0;\n\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception;\n      }\n\n      finalHint = {\n        originalException: message,\n        syntheticException: syntheticException\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, tslib_1.__assign({}, finalHint, {\n      event_id: eventId\n    }));\n\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.captureEvent = function (event, hint) {\n    var eventId = this._lastEventId = uuid4();\n\n    this._invokeClient('captureEvent', event, tslib_1.__assign({}, hint, {\n      event_id: eventId\n    }));\n\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.lastEventId = function () {\n    return this._lastEventId;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n    var top = this.getStackTop();\n\n    if (!top.scope || !top.client) {\n      return;\n    }\n\n    var _a = top.client.getOptions && top.client.getOptions() || {},\n        _b = _a.beforeBreadcrumb,\n        beforeBreadcrumb = _b === void 0 ? null : _b,\n        _c = _a.maxBreadcrumbs,\n        maxBreadcrumbs = _c === void 0 ? DEFAULT_BREADCRUMBS : _c;\n\n    if (maxBreadcrumbs <= 0) {\n      return;\n    }\n\n    var timestamp = timestampWithMs();\n\n    var mergedBreadcrumb = tslib_1.__assign({\n      timestamp: timestamp\n    }, breadcrumb);\n\n    var finalBreadcrumb = beforeBreadcrumb ? consoleSandbox(function () {\n      return beforeBreadcrumb(mergedBreadcrumb, hint);\n    }) : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) {\n      return;\n    }\n\n    top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setUser = function (user) {\n    var top = this.getStackTop();\n\n    if (!top.scope) {\n      return;\n    }\n\n    top.scope.setUser(user);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setTags = function (tags) {\n    var top = this.getStackTop();\n\n    if (!top.scope) {\n      return;\n    }\n\n    top.scope.setTags(tags);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setExtras = function (extras) {\n    var top = this.getStackTop();\n\n    if (!top.scope) {\n      return;\n    }\n\n    top.scope.setExtras(extras);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setTag = function (key, value) {\n    var top = this.getStackTop();\n\n    if (!top.scope) {\n      return;\n    }\n\n    top.scope.setTag(key, value);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setExtra = function (key, extra) {\n    var top = this.getStackTop();\n\n    if (!top.scope) {\n      return;\n    }\n\n    top.scope.setExtra(key, extra);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setContext = function (name, context) {\n    var top = this.getStackTop();\n\n    if (!top.scope) {\n      return;\n    }\n\n    top.scope.setContext(name, context);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.configureScope = function (callback) {\n    var top = this.getStackTop();\n\n    if (top.scope && top.client) {\n      callback(top.scope);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.run = function (callback) {\n    var oldHub = makeMain(this);\n\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.getIntegration = function (integration) {\n    var client = this.getClient();\n\n    if (!client) {\n      return null;\n    }\n\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n      return null;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.startSpan = function (spanOrSpanContext, forceNoChild) {\n    if (forceNoChild === void 0) {\n      forceNoChild = false;\n    }\n\n    return this._callExtensionMethod('startSpan', spanOrSpanContext, forceNoChild);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.traceHeaders = function () {\n    return this._callExtensionMethod('traceHeaders');\n  };\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore\n\n\n  Hub.prototype._callExtensionMethod = function (method) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var carrier = getMainCarrier();\n    var sentry = carrier.__SENTRY__; // tslint:disable-next-line: strict-type-predicates\n\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n\n    logger.warn(\"Extension method \" + method + \" couldn't be found, doing nothing.\");\n  };\n\n  return Hub;\n}();\n\nexport { Hub };\n/** Returns the global shim registry. */\n\nexport function getMainCarrier() {\n  var carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined\n  };\n  return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\n\nexport function makeMain(hub) {\n  var registry = getMainCarrier();\n  var oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\n\nexport function getCurrentHub() {\n  // Get main carrier (global for every environment)\n  var registry = getMainCarrier(); // If there's no hub, or its an old API, assign a new one\n\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  } // Prefer domains over global if they are there (applicable only to Node environment)\n\n\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  } // Return hub that lives on a global object\n\n\n  return getHubFromCarrier(registry);\n}\n/**\n * Try to read the hub from an active domain, fallback to the registry if one doesnt exist\n * @returns discovered hub\n */\n\nfunction getHubFromActiveDomain(registry) {\n  try {\n    // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n    // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n    // for example so we do not have to shim it and use `getCurrentHub` universally.\n    var domain = dynamicRequire(module, 'domain');\n    var activeDomain = domain.active; // If there no active domain, just return global hub\n\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    } // If there's no hub on current domain, or its an old API, assign a new one\n\n\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    } // Return hub that lives on a domain\n\n\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\n\n\nfunction hasHubOnCarrier(carrier) {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\n\n\nexport function getHubFromCarrier(carrier) {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return carrier.__SENTRY__.hub;\n  }\n\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\n\nexport function setHubOnCarrier(carrier, hub) {\n  if (!carrier) {\n    return false;\n  }\n\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}","map":{"version":3,"sources":["../src/hub.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  Event,\n  EventHint,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Severity,\n  Span,\n  SpanContext,\n  User,\n} from '@sentry/types';\nimport {\n  consoleSandbox,\n  dynamicRequire,\n  getGlobalObject,\n  isNodeEnv,\n  logger,\n  timestampWithMs,\n  uuid4,\n} from '@sentry/utils';\n\nimport { Carrier, Layer } from './interfaces';\nimport { Scope } from './scope';\n\ndeclare module 'domain' {\n  export let active: Domain;\n  /**\n   * Extension for domain interface\n   */\n  export interface Domain {\n    __SENTRY__?: Carrier;\n  }\n}\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 3;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nconst MAX_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this._stack.push({ client, scope });\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  private _invokeClient<M extends keyof Client>(method: M, ...args: any[]): void {\n    const top = this.getStackTop();\n    if (top && top.client && top.client[method]) {\n      (top.client as any)[method](...args, top.scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const stack = this.getStack();\n    const parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n    const scope = Scope.clone(parentScope);\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    return this.getStack().pop() !== undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureException', exception, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    this._invokeClient('captureEvent', event, {\n      ...hint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const top = this.getStackTop();\n\n    if (!top.scope || !top.client) {\n      return;\n    }\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (top.client.getOptions && top.client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) {\n      return;\n    }\n\n    const timestamp = timestampWithMs();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) {\n      return;\n    }\n\n    top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: string }): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: { [key: string]: any }): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: string): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: any): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const top = this.getStackTop();\n    if (top.scope && top.client) {\n      callback(top.scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) {\n      return null;\n    }\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSpan(spanOrSpanContext?: Span | SpanContext, forceNoChild: boolean = false): Span {\n    return this._callExtensionMethod<Span>('startSpan', spanOrSpanContext, forceNoChild);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    // tslint:disable-next-line: strict-type-predicates\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/** Returns the global shim registry. */\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, fallback to the registry if one doesnt exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry: Carrier): Hub {\n  try {\n    // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n    // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n    // for example so we do not have to shim it and use `getCurrentHub` universally.\n    const domain = dynamicRequire(module, 'domain');\n    const activeDomain = domain.active;\n\n    // If there no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or its an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return carrier.__SENTRY__.hub;\n  }\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) {\n    return false;\n  }\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}