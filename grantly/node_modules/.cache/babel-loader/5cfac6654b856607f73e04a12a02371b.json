{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.startHRD = startHRD;\nexports.cancelHRD = cancelHRD;\nexports.logIn = logIn;\n\nvar _index = require('../../store/index');\n\nvar _enterprise = require('../enterprise');\n\nvar _index2 = require('../../field/index');\n\nvar _email = require('../../field/email');\n\nvar _actions = require('../../core/actions');\n\nvar _index3 = require('../../core/index');\n\nvar l = _interopRequireWildcard(_index3);\n\nvar _index4 = require('../database/index');\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction startHRD(id, email) {\n  (0, _index.swap)(_index.updateEntity, 'lock', id, _enterprise.toggleHRD, email);\n} // TODO: enterprise connections should not depend on database\n// connections. However, we now allow a username input to contain also\n// an email and this information is in the database module. We should\n// make this information flow from the UI (like we do for the startHRD\n// function). Including this dependency here allows us to do that\n// incrementally.\n\n\nfunction cancelHRD(id) {\n  (0, _index.swap)(_index.updateEntity, 'lock', id, function (m) {\n    m = (0, _enterprise.toggleHRD)(m, false);\n    m = (0, _index2.hideInvalidFields)(m);\n    return m;\n  });\n}\n\nfunction logIn(id) {\n  var m = (0, _index.read)(_index.getEntity, 'lock', id);\n  var email = (0, _index2.getFieldValue)(m, (0, _index4.databaseLogInWithEmail)(m) ? 'email' : 'username');\n  var ssoConnection = (0, _enterprise.matchConnection)(m, email);\n\n  if (ssoConnection && !(0, _enterprise.isHRDActive)(m)) {\n    return logInSSO(id, ssoConnection);\n  }\n\n  logInActiveFlow(id);\n}\n\nfunction logInActiveFlow(id) {\n  var m = (0, _index.read)(_index.getEntity, 'lock', id);\n  var usernameField = (0, _enterprise.isHRDActive)(m) || !(0, _index4.databaseLogInWithEmail)(m) ? 'username' : 'email';\n  var originalUsername = (0, _index2.getFieldValue)(m, usernameField);\n  var connection = (0, _enterprise.enterpriseActiveFlowConnection)(m);\n  var username = l.defaultADUsernameFromEmailPrefix(m) ? (0, _email.emailLocalPart)(originalUsername) : originalUsername;\n  (0, _actions.logIn)(id, ['password', usernameField], {\n    connection: connection ? connection.get('name') : null,\n    username: username,\n    password: (0, _index2.getFieldValue)(m, 'password'),\n    login_hint: username\n  });\n}\n\nfunction logInSSO(id, connection) {\n  var m = (0, _index.read)(_index.getEntity, 'lock', id);\n  var field = (0, _index4.databaseLogInWithEmail)(m) ? 'email' : 'username';\n  l.emitEvent(m, 'sso login', {\n    lockID: id,\n    connection: connection,\n    field: field\n  });\n  (0, _actions.logIn)(id, [field], {\n    connection: connection.get('name'),\n    login_hint: (0, _index2.getFieldValue)(m, field)\n  });\n}","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/node_modules/auth0-lock/lib/connection/enterprise/actions.js"],"names":["exports","__esModule","startHRD","cancelHRD","logIn","_index","require","_enterprise","_index2","_email","_actions","_index3","l","_interopRequireWildcard","_index4","obj","newObj","key","Object","prototype","hasOwnProperty","call","default","id","email","swap","updateEntity","toggleHRD","m","hideInvalidFields","read","getEntity","getFieldValue","databaseLogInWithEmail","ssoConnection","matchConnection","isHRDActive","logInSSO","logInActiveFlow","usernameField","originalUsername","connection","enterpriseActiveFlowConnection","username","defaultADUsernameFromEmailPrefix","emailLocalPart","get","password","login_hint","field","emitEvent","lockID"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.startHRD = startHRD;\nexports.cancelHRD = cancelHRD;\nexports.logIn = logIn;\n\nvar _index = require('../../store/index');\n\nvar _enterprise = require('../enterprise');\n\nvar _index2 = require('../../field/index');\n\nvar _email = require('../../field/email');\n\nvar _actions = require('../../core/actions');\n\nvar _index3 = require('../../core/index');\n\nvar l = _interopRequireWildcard(_index3);\n\nvar _index4 = require('../database/index');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction startHRD(id, email) {\n  (0, _index.swap)(_index.updateEntity, 'lock', id, _enterprise.toggleHRD, email);\n}\n\n// TODO: enterprise connections should not depend on database\n// connections. However, we now allow a username input to contain also\n// an email and this information is in the database module. We should\n// make this information flow from the UI (like we do for the startHRD\n// function). Including this dependency here allows us to do that\n// incrementally.\nfunction cancelHRD(id) {\n  (0, _index.swap)(_index.updateEntity, 'lock', id, function (m) {\n    m = (0, _enterprise.toggleHRD)(m, false);\n    m = (0, _index2.hideInvalidFields)(m);\n    return m;\n  });\n}\n\nfunction logIn(id) {\n  var m = (0, _index.read)(_index.getEntity, 'lock', id);\n  var email = (0, _index2.getFieldValue)(m, (0, _index4.databaseLogInWithEmail)(m) ? 'email' : 'username');\n  var ssoConnection = (0, _enterprise.matchConnection)(m, email);\n\n  if (ssoConnection && !(0, _enterprise.isHRDActive)(m)) {\n    return logInSSO(id, ssoConnection);\n  }\n\n  logInActiveFlow(id);\n}\n\nfunction logInActiveFlow(id) {\n  var m = (0, _index.read)(_index.getEntity, 'lock', id);\n  var usernameField = (0, _enterprise.isHRDActive)(m) || !(0, _index4.databaseLogInWithEmail)(m) ? 'username' : 'email';\n\n  var originalUsername = (0, _index2.getFieldValue)(m, usernameField);\n  var connection = (0, _enterprise.enterpriseActiveFlowConnection)(m);\n\n  var username = l.defaultADUsernameFromEmailPrefix(m) ? (0, _email.emailLocalPart)(originalUsername) : originalUsername;\n\n  (0, _actions.logIn)(id, ['password', usernameField], {\n    connection: connection ? connection.get('name') : null,\n    username: username,\n    password: (0, _index2.getFieldValue)(m, 'password'),\n    login_hint: username\n  });\n}\n\nfunction logInSSO(id, connection) {\n  var m = (0, _index.read)(_index.getEntity, 'lock', id);\n  var field = (0, _index4.databaseLogInWithEmail)(m) ? 'email' : 'username';\n  l.emitEvent(m, 'sso login', {\n    lockID: id,\n    connection: connection,\n    field: field\n  });\n  (0, _actions.logIn)(id, [field], {\n    connection: connection.get('name'),\n    login_hint: (0, _index2.getFieldValue)(m, field)\n  });\n}\n"]},"metadata":{},"sourceType":"script"}