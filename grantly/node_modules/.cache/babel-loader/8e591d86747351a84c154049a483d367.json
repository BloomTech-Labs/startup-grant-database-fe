{"ast":null,"code":"(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(str, options) {\n    // make sure protocol is followed by two slashes\n    str = str.replace(/:\\//g, '://'); // remove consecutive slashes\n\n    str = str.replace(/([^:\\s])\\/+/g, '$1/'); // remove trailing slash before parameters or hash\n\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1'); // replace ? in parameters with &\n\n    str = str.replace(/(\\?.+)\\?/g, '$1&');\n    return str;\n  }\n\n  return function () {\n    var input = arguments;\n    var options = {};\n\n    if (typeof arguments[0] === 'object') {\n      // new syntax with array and options\n      input = arguments[0];\n      options = arguments[1] || {};\n    }\n\n    var joined = [].slice.call(input, 0).join('/');\n    return normalize(joined, options);\n  };\n});","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/node_modules/url-join/lib/url-join.js"],"names":["name","context","definition","module","exports","define","amd","normalize","str","options","replace","input","arguments","joined","slice","call","join"],"mappings":"AAAA,CAAC,UAAUA,IAAV,EAAgBC,OAAhB,EAAyBC,UAAzB,EAAqC;AACpC,MAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,OAA5C,EAAqDD,MAAM,CAACC,OAAP,GAAiBF,UAAU,EAA3B,CAArD,KACK,IAAI,OAAOG,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgDD,MAAM,CAACH,UAAD,CAAN,CAAhD,KACAD,OAAO,CAACD,IAAD,CAAP,GAAgBE,UAAU,EAA1B;AACN,CAJD,EAIG,SAJH,EAIc,IAJd,EAIoB,YAAY;AAE9B,WAASK,SAAT,CAAoBC,GAApB,EAAyBC,OAAzB,EAAkC;AAEhC;AACAD,IAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,MAAZ,EAAoB,KAApB,CAAN,CAHgC,CAKhC;;AACAF,IAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,cAAZ,EAA4B,KAA5B,CAAN,CANgC,CAQhC;;AACAF,IAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,iBAAZ,EAA+B,IAA/B,CAAN,CATgC,CAWhC;;AACAF,IAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,WAAZ,EAAyB,KAAzB,CAAN;AAEA,WAAOF,GAAP;AACD;;AAED,SAAO,YAAY;AACjB,QAAIG,KAAK,GAAGC,SAAZ;AACA,QAAIH,OAAO,GAAG,EAAd;;AAEA,QAAI,OAAOG,SAAS,CAAC,CAAD,CAAhB,KAAwB,QAA5B,EAAsC;AACpC;AACAD,MAAAA,KAAK,GAAGC,SAAS,CAAC,CAAD,CAAjB;AACAH,MAAAA,OAAO,GAAGG,SAAS,CAAC,CAAD,CAAT,IAAgB,EAA1B;AACD;;AAED,QAAIC,MAAM,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAcJ,KAAd,EAAqB,CAArB,EAAwBK,IAAxB,CAA6B,GAA7B,CAAb;AACA,WAAOT,SAAS,CAACM,MAAD,EAASJ,OAAT,CAAhB;AACD,GAZD;AAcD,CArCD","sourcesContent":["(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (str, options) {\n\n    // make sure protocol is followed by two slashes\n    str = str.replace(/:\\//g, '://');\n\n    // remove consecutive slashes\n    str = str.replace(/([^:\\s])\\/+/g, '$1/');\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    str = str.replace(/(\\?.+)\\?/g, '$1&');\n\n    return str;\n  }\n\n  return function () {\n    var input = arguments;\n    var options = {};\n\n    if (typeof arguments[0] === 'object') {\n      // new syntax with array and options\n      input = arguments[0];\n      options = arguments[1] || {};\n    }\n\n    var joined = [].slice.call(input, 0).join('/');\n    return normalize(joined, options);\n  };\n\n});\n"]},"metadata":{},"sourceType":"script"}