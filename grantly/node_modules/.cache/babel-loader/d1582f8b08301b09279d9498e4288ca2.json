{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FilterTypes } from \"./filterTypes\";\nexport const useFilterActions = () => {\n  const dispatch = useDispatch();\n  const changeFilter = useCallback(newFilter => {\n    dispatch({\n      type: FilterTypes.FILTER_CHANGE,\n      payload: newFilter\n    });\n    dispatch({\n      type: FilterTypes.PRISTINE_CHECK\n    });\n  }, [dispatch]);\n  const resetFilter = useCallback(() => {\n    dispatch({\n      type: FilterTypes.FILTER_RESET\n    });\n  }, [dispatch]);\n  const grantFilter = useCallback(grants => {\n    dispatch({\n      type: FilterTypes.FILTER_GRANT,\n      payload: grants\n    });\n  }, [dispatch]);\n  return {\n    changeFilter,\n    resetFilter,\n    grantFilter\n  };\n};","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/store/filters/useFilterActions.tsx"],"names":["useCallback","useDispatch","FilterTypes","useFilterActions","dispatch","changeFilter","newFilter","type","FILTER_CHANGE","payload","PRISTINE_CHECK","resetFilter","FILTER_RESET","grantFilter","grants","FILTER_GRANT"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAyBC,WAAzB,QAA2C,eAA3C;AAGA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAClC,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAMI,YAAY,GAAGL,WAAW,CAAEM,SAAD,IAAgC;AAC7DF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEL,WAAW,CAACM,aAAnB;AAAkCC,MAAAA,OAAO,EAAEH;AAA3C,KAAD,CAAR;AACAF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEL,WAAW,CAACQ;AAAnB,KAAD,CAAR;AACH,GAH+B,EAG7B,CAACN,QAAD,CAH6B,CAAhC;AAKA,QAAMO,WAAW,GAAGX,WAAW,CAAC,MAAM;AAClCI,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEL,WAAW,CAACU;AAAnB,KAAD,CAAR;AACH,GAF8B,EAE5B,CAACR,QAAD,CAF4B,CAA/B;AAIA,QAAMS,WAAW,GAAGb,WAAW,CAAEc,MAAD,IAAqB;AACjDV,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEL,WAAW,CAACa,YAAnB;AAAiCN,MAAAA,OAAO,EAAEK;AAA1C,KAAD,CAAR;AACH,GAF8B,EAE5B,CAACV,QAAD,CAF4B,CAA/B;AAIA,SAAO;AAACC,IAAAA,YAAD;AAAeM,IAAAA,WAAf;AAA4BE,IAAAA;AAA5B,GAAP;AACH,CAjBM","sourcesContent":["import {useCallback} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {FilterFormState, FilterTypes} from \"./filterTypes\";\nimport {Grant} from \"../grants/grantTypes\";\n\nexport const useFilterActions = () => {\n    const dispatch = useDispatch();\n\n    const changeFilter = useCallback((newFilter: FilterFormState) => {\n        dispatch({type: FilterTypes.FILTER_CHANGE, payload: newFilter});\n        dispatch({type: FilterTypes.PRISTINE_CHECK})\n    }, [dispatch]);\n\n    const resetFilter = useCallback(() => {\n        dispatch({type: FilterTypes.FILTER_RESET});\n    }, [dispatch]);\n\n    const grantFilter = useCallback((grants: Grant[]) => {\n        dispatch({type: FilterTypes.FILTER_GRANT, payload: grants})\n    }, [dispatch]);\n\n    return {changeFilter, resetFilter, grantFilter};\n};\n\nexport interface UseFilterActions {\n    changeFilter: (newFilters: FilterFormState) => void;\n    resetFilter: () => void;\n    grantFilter: (grants: Grant[]) => void;\n}\n"]},"metadata":{},"sourceType":"module"}