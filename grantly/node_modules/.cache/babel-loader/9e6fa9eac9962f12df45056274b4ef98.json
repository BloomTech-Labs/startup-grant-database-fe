{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { UserTypes } from \"./userTypes\";\nimport { axiosWithOutAuth as axios } from \"../utils/axiosConfig\";\nexport const useUserActions = () => {\n  const dispatch = useDispatch();\n  const getUserFromPG = useCallback(email => {\n    dispatch({\n      type: UserTypes.FETCH_USER_START\n    }); // @ts-ignore\n\n    axios().post(`/users`, email).then(res => {\n      dispatch({\n        type: UserTypes.FETCH_USER_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      const data = err && err.response && err.response.data ? err.response.data : err;\n      dispatch({\n        type: UserTypes.FETCH_USER_FAILURE,\n        payload: data\n      });\n    });\n  }, [dispatch]);\n  const setUserFromAuth0 = useCallback(user => {\n    dispatch({\n      type: UserTypes.SET_USER_FROM_AUTH0,\n      payload: user\n    });\n  }, [dispatch]);\n  const resetUser = useCallback(() => {\n    dispatch({\n      type: UserTypes.RESET_USER\n    });\n  }, [dispatch]);\n  const isModerator = useCallback(() => {\n    dispatch({\n      type: UserTypes.IS_MODERATOR\n    });\n  }, [dispatch]);\n  return {\n    getUserFromPG,\n    setUserFromAuth0,\n    resetUser,\n    isModerator\n  };\n};","map":{"version":3,"sources":["/Users/jacksonmccomas/Documents/Lambda/labs/startup-grant-database-fe/grantly/src/store/user/useUserActions.tsx"],"names":["useCallback","useDispatch","UserTypes","axiosWithOutAuth","axios","useUserActions","dispatch","getUserFromPG","email","type","FETCH_USER_START","post","then","res","FETCH_USER_SUCCESS","payload","data","catch","err","response","FETCH_USER_FAILURE","setUserFromAuth0","user","SET_USER_FROM_AUTH0","resetUser","RESET_USER","isModerator","IS_MODERATOR"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAcC,SAAd,QAA8B,aAA9B;AAEA,SAAQC,gBAAgB,IAAIC,KAA5B,QAAwC,sBAAxC;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,aAAa,GAAGP,WAAW,CAACQ,KAAK,IAAI;AACvCF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEP,SAAS,CAACQ;AAAjB,KAAD,CAAR,CADuC,CAEvC;;AACAN,IAAAA,KAAK,GAAGO,IAAR,CAAc,QAAd,EAAuBH,KAAvB,EAA8BI,IAA9B,CAAoCC,GAAD,IAAuB;AACtDP,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAEP,SAAS,CAACY,kBAAjB;AAAqCC,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAAlD,OAAD,CAAR;AACH,KAFD,EAEGC,KAFH,CAEUC,GAAD,IAAoB;AACzB,YAAMF,IAAI,GAAGE,GAAG,IAAIA,GAAG,CAACC,QAAX,IAAuBD,GAAG,CAACC,QAAJ,CAAaH,IAApC,GAA2CE,GAAG,CAACC,QAAJ,CAAaH,IAAxD,GAA+DE,GAA5E;AACAZ,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAEP,SAAS,CAACkB,kBAAjB;AAAqCL,QAAAA,OAAO,EAAEC;AAA9C,OAAD,CAAR;AACH,KALD;AAMH,GATgC,EAS9B,CAACV,QAAD,CAT8B,CAAjC;AAWA,QAAMe,gBAAgB,GAAGrB,WAAW,CAAEsB,IAAD,IAAgB;AACjDhB,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEP,SAAS,CAACqB,mBAAjB;AAAsCR,MAAAA,OAAO,EAAEO;AAA/C,KAAD,CAAR;AACH,GAFmC,EAEjC,CAAChB,QAAD,CAFiC,CAApC;AAIA,QAAMkB,SAAS,GAAGxB,WAAW,CAAC,MAAK;AAC/BM,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEP,SAAS,CAACuB;AAAjB,KAAD,CAAR;AACH,GAF4B,EAE1B,CAACnB,QAAD,CAF0B,CAA7B;AAIA,QAAMoB,WAAW,GAAG1B,WAAW,CAAC,MAAK;AACjCM,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEP,SAAS,CAACyB;AAAjB,KAAD,CAAR;AACH,GAF8B,EAE5B,CAACrB,QAAD,CAF4B,CAA/B;AAIA,SAAO;AAACC,IAAAA,aAAD;AAAgBc,IAAAA,gBAAhB;AAAkCG,IAAAA,SAAlC;AAA6CE,IAAAA;AAA7C,GAAP;AACH,CA3BM","sourcesContent":["import {useCallback} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {User, UserTypes} from \"./userTypes\";\nimport {AxiosError, AxiosResponse} from 'axios';\nimport {axiosWithOutAuth as axios} from \"../utils/axiosConfig\";\n\nexport const useUserActions = () => {\n    const dispatch = useDispatch();\n\n    const getUserFromPG = useCallback(email => {\n        dispatch({type: UserTypes.FETCH_USER_START});\n        // @ts-ignore\n        axios().post(`/users`, email).then((res:AxiosResponse) => {\n            dispatch({type: UserTypes.FETCH_USER_SUCCESS, payload: res.data})\n        }).catch((err:AxiosError) => {\n            const data = err && err.response && err.response.data ? err.response.data : err;\n            dispatch({type: UserTypes.FETCH_USER_FAILURE, payload: data})\n        })\n    }, [dispatch]);\n\n    const setUserFromAuth0 = useCallback((user: User) => {\n        dispatch({type: UserTypes.SET_USER_FROM_AUTH0, payload: user})\n    }, [dispatch]);\n\n    const resetUser = useCallback(()=> {\n        dispatch({type: UserTypes.RESET_USER})\n    }, [dispatch])\n\n    const isModerator = useCallback(()=> {\n        dispatch({type: UserTypes.IS_MODERATOR})\n    }, [dispatch]);\n\n    return {getUserFromPG, setUserFromAuth0, resetUser, isModerator}\n};\n\nexport interface UseUserActions {\n    getUserFromPG: (email: string) => void;\n    setUserFromAuth0: (user: User) => void;\n    resetUser: () => void;\n    isModerator: () => void;\n}\n"]},"metadata":{},"sourceType":"module"}